Opal.modules.js=function(Opal){var self,$module=Opal.module,$def=Opal.def,$truthy=Opal.truthy,$slice=Opal.slice,$alias=Opal.alias,nil=Opal.nil;return Opal.add_stubs("insert,<<,global,call,extend"),self=$module([][0],"JS"),$def(self,"$delete",(function(object,property){return delete object[property]})),$def(self,"$global",(function(){return Opal.global})),$def(self,"$in",(function(property,object){return property in object})),$def(self,"$instanceof",(function(value,func){return value instanceof func})),$truthy("function"==typeof Function.prototype.bind)?$def(self,"$new",(function $JS_new$4(func,$a){var args,block=$JS_new$4.$$p||nil;return $JS_new$4.$$p=null,(args=$slice(arguments,1)).$insert(0,this),$truthy(block)&&args["$<<"](block),new(func.bind.apply(func,args))}),-2):$def(self,"$new",(function $JS_new$5(func,$a){var $post_args,args,block=$JS_new$5.$$p||nil,f=nil;return $JS_new$5.$$p=null,$post_args=$slice(arguments,1),args=$post_args,$truthy(block)&&args["$<<"](block),(f=function(){return func.apply(this,args)}).prototype=func.prototype,new f}),-2),$def(self,"$typeof",(function(value){return typeof value})),$def(self,"$void",(function(expr){})),$def(self,"$call",(function $$call(func,$a){var args,block=$$call.$$p||nil,self=this,g=nil;return $$call.$$p=null,args=$slice(arguments,1),g=self.$global(),$truthy(block)&&args["$<<"](block),g[func].apply(g,args)}),-2),$def(self,"$[]",(function(name){return Opal.global[name]})),$alias(self,"method_missing","call"),self.$extend(self)};
