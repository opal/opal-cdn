Opal.modules.native=function(Opal){var $module=Opal.module,$defs=Opal.defs,$slice=Opal.slice,$truthy=Opal.truthy,$send=Opal.send,$Kernel=Opal.Kernel,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$range=Opal.range,$to_a=Opal.to_a,$def=Opal.def,$return_ivar=Opal.return_ivar,$alias=Opal.alias,$klass=Opal.klass,$rb_minus=Opal.rb_minus,$return_val=Opal.return_val,$hash2=Opal.hash2,$send2=Opal.send2,$find_super=Opal.find_super,$eqeqeq=Opal.eqeqeq,$rb_ge=Opal.rb_ge,$return_self=Opal.return_self,$gvars=Opal.gvars,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("try_convert,native?,respond_to?,to_n,raise,inspect,Native,proc,map!,end_with?,define_method,[],convert,call,to_proc,new,each,native_reader,native_writer,extend,warn,include,is_a?,map,Array,to_a,_Array,method_missing,bind,instance_method,[]=,slice,-,length,has_key?,enum_for,===,>=,<<,each_pair,method_defined?,initialize,_initialize,name,native_module"),function($base,$parent_nesting){var self=$module($base,"Native"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$is_a?",(function(object,klass){try{return object instanceof this.$try_convert(klass)}catch(e){return!1}})),$defs(self,"$try_convert",(function(value,default$){return null==default$&&(default$=nil),this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():default$}),-2),$defs(self,"$convert",(function(value){return this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():void this.$raise($$("ArgumentError"),value.$inspect()+" isn't native")})),$defs(self,"$call",(function $$call(obj,key,$a){var args,block=$$call.$$p||nil,self=this;$$call.$$p=null,args=$slice(arguments,2);var prop=obj[key];if(prop instanceof Function){for(var converted=new Array(args.length),i=0,l=args.length;i<l;i++){var item=args[i],conv=self.$try_convert(item);converted[i]=conv===nil?item:conv}return block!==nil&&converted.push(block),self.$Native(prop.apply(obj,converted))}return self.$Native(prop)}),-3),$defs(self,"$proc",(function $$proc(){var block=$$proc.$$p||nil;return $$proc.$$p=null,$truthy(block)||this.$raise($$("LocalJumpError"),"no block given"),$send($Kernel,"proc",[],(function $$2($a){var $post_args,args,self=null==$$2.$$s?this:$$2.$$s,instance=nil;if($post_args=$slice(arguments),$send(args=$post_args,"map!",[],(function $$3(arg){return null==arg&&(arg=nil),(null==$$3.$$s?this:$$3.$$s).$Native(arg)}),{$$s:self}),instance=self.$Native(this),this===Opal.global)return block.apply(self,args);var self_=block.$$s;block.$$s=null;try{return block.apply(instance,args)}finally{block.$$s=self_}}),{$$arity:-1,$$s:this})})),function($base,$parent_nesting){var self=$module($base,"Helpers"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$alias_native",(function $$alias_native(new$,$a,$b){var $post_args,$kwargs,old,as,self=this;return $$alias_native.$$p=null,$post_args=$slice(arguments,1),$kwargs=$extract_kwargs($post_args),$kwargs=$ensure_kwargs($kwargs),$post_args.length>0&&(old=$post_args.shift()),null==old&&(old=new$),null==(as=$kwargs.$$smap.as)&&(as=nil),$truthy(old["$end_with?"]("="))?$send(self,"define_method",[new$],(function $$4(value){var self=null==$$4.$$s?this:$$4.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.native[old["$[]"]($range(0,-2,!1))]=$$("Native").$convert(value),value}),{$$s:self}):$truthy(as)?$send(self,"define_method",[new$],(function $$5($c){var args,block=$$5.$$p||nil,self=null==$$5.$$s?this:$$5.$$s,value=nil;return null==self.native&&(self.native=nil),$$5.$$p=null,args=$slice(arguments),value=$send($$("Native"),"call",[self.native,old].concat($to_a(args)),block.$to_proc()),$truthy(value)?as.$new(value.$to_n()):nil}),{$$arity:-1,$$s:self}):$send(self,"define_method",[new$],(function $$6($c){var args,block=$$6.$$p||nil,self=null==$$6.$$s?this:$$6.$$s;return null==self.native&&(self.native=nil),$$6.$$p=null,args=$slice(arguments),$send($$("Native"),"call",[self.native,old].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:self})}),-2),$def(self,"$native_reader",(function($a){var $post_args,self=this;return $post_args=$slice(arguments),$send($post_args,"each",[],(function $$7(name){var self=null==$$7.$$s?this:$$7.$$s;return null==name&&(name=nil),$send(self,"define_method",[name],(function $$8(){var self=null==$$8.$$s?this:$$8.$$s;return null==self.native&&(self.native=nil),self.$Native(self.native[name])}),{$$s:self})}),{$$s:self})}),-1),$def(self,"$native_writer",(function($a){var $post_args,self=this;return $post_args=$slice(arguments),$send($post_args,"each",[],(function $$9(name){var self=null==$$9.$$s?this:$$9.$$s;return null==name&&(name=nil),$send(self,"define_method",[name+"="],(function $$10(value){var self=null==$$10.$$s?this:$$10.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.$Native(self.native[name]=value)}),{$$s:self})}),{$$s:self})}),-1),$def(self,"$native_accessor",(function($a){var $post_args,names,self=this;return $post_args=$slice(arguments),$send(self,"native_reader",$to_a(names=$post_args)),$send(self,"native_writer",$to_a(names))}),-1)}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Wrapper"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$initialize",(function(native$){return $truthy($Kernel["$native?"](native$))||$Kernel.$raise($$("ArgumentError"),native$.$inspect()+" isn't native"),this.native=native$})),$def(self,"$to_n",$return_ivar("native")),$defs(self,"$included",(function(klass){return klass.$extend($$("Helpers"))}))}($nesting[0],$nesting),$defs(self,"$included",(function(base){return this.$warn("Including ::Native is deprecated. Please include Native::Wrapper instead."),base.$include($$("Wrapper"))}))}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$native?",(function(value){return null==value||!value.$$class})),$def(self,"$Native",(function $$Native(obj){return $$Native.$$p=null,$truthy(null==obj)?nil:$truthy(this["$native?"](obj))?$$$($$("Native"),"Object").$new(obj):$truthy(obj["$is_a?"]($$("Array")))?$send(obj,"map",[],(function $$12(o){return null==o&&(o=nil),(null==$$12.$$s?this:$$12.$$s).$Native(o)}),{$$s:this}):$truthy(obj["$is_a?"]($$("Proc")))?$send(this,"proc",[],(function $$13($a){var args,block=$$13.$$p||nil,self=null==$$13.$$s?this:$$13.$$s;return $$13.$$p=null,args=$slice(arguments),self.$Native($send(obj,"call",$to_a(args),block.$to_proc()))}),{$$arity:-1,$$s:this}):obj})),$alias(self,"_Array","Array"),$def(self,"$Array",(function $$Array(object,$a){var args,block=$$Array.$$p||nil,self=this;return $$Array.$$p=null,args=$slice(arguments,1),$truthy(self["$native?"](object))?$send($$$($$("Native"),"Array"),"new",[object].concat($to_a(args)),block.$to_proc()).$to_a():self.$_Array(object)}),-2)}($nesting[0],$nesting),function($base,$super){var self=$klass($base,$super,"Object");self.$$prototype.native=nil,self.$include($$$($$$("Native"),"Wrapper")),$def(self,"$==",(function(other){return this.native===$$$("Native").$try_convert(other)})),$def(self,"$has_key?",(function(name){return Opal.hasOwnProperty.call(this.native,name)})),$def(self,"$each",(function $$each($a){var args,$yield=$$each.$$p||nil,self=this;if($$each.$$p=null,args=$slice(arguments),$yield!==nil){for(var key in self.native)Opal.yieldX($yield,[key,self.native[key]]);return self}return $send(self,"method_missing",["each"].concat($to_a(args)))}),-1),$def(self,"$[]",(function(key){var prop=this.native[key];return prop instanceof Function?prop:$$$("Native").$call(this.native,key)})),$def(self,"$[]=",(function(key,value){var native$;return native$=$$$("Native").$try_convert(value),$truthy(native$===nil)?this.native[key]=value:this.native[key]=native$})),$def(self,"$merge!",(function(other){for(var prop in other=$$$("Native").$convert(other))this.native[prop]=other[prop];return this})),$def(self,"$respond_to?",(function(name,include_all){return null==include_all&&(include_all=!1),$Kernel.$instance_method("respond_to?").$bind(this).$call(name,include_all)}),-2),$def(self,"$respond_to_missing?",(function(name,include_all){return null==include_all&&(include_all=!1),Opal.hasOwnProperty.call(this.native,name)}),-2),$def(self,"$method_missing",(function $$method_missing(mid,$a){var args,$b,block=$$method_missing.$$p||nil,self=this;return $$method_missing.$$p=null,args=$slice(arguments,1),"="===mid.charAt(mid.length-1)?($b=[mid.$slice(0,$rb_minus(mid.$length(),1)),args["$[]"](0)],$send(self,"[]=",$b),$b[$b.length-1]):$send($$$("Native"),"call",[self.native,mid].concat($to_a(args)),block.$to_proc())}),-2),$def(self,"$nil?",$return_val(!1)),$def(self,"$is_a?",(function(klass){return Opal.is_a(this,klass)})),$def(self,"$instance_of?",(function(klass){return this.$$class===klass})),$def(self,"$class",(function(){return this.$$class})),$def(self,"$to_a",(function $$to_a(options){var block=$$to_a.$$p||nil;return $$to_a.$$p=null,null==options&&(options=$hash2([],{})),$send($$$($$$("Native"),"Array"),"new",[this.native,options],block.$to_proc()).$to_a()}),-1),$def(self,"$inspect",(function(){return"#<Native:"+String(this.native)+">"})),$alias(self,"include?","has_key?"),$alias(self,"key?","has_key?"),$alias(self,"kind_of?","is_a?"),$alias(self,"member?","has_key?")}($$("Native"),$$("BasicObject")),function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.named=$proto.native=$proto.get=$proto.block=$proto.set=$proto.length=nil,self.$include($$$($$("Native"),"Wrapper")),self.$include($$("Enumerable")),$def(self,"$initialize",(function $$initialize(native$,options){var block=$$initialize.$$p||nil,$ret_or_1=nil;return $$initialize.$$p=null,null==options&&(options=$hash2([],{})),$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[native$],null),this.get=$truthy($ret_or_1=options["$[]"]("get"))?$ret_or_1:options["$[]"]("access"),this.named=options["$[]"]("named"),this.set=$truthy($ret_or_1=options["$[]"]("set"))?$ret_or_1:options["$[]"]("access"),this.length=$truthy($ret_or_1=options["$[]"]("length"))?$ret_or_1:"length",this.block=block,$truthy(null==this.$length())?this.$raise($$("ArgumentError"),"no length found on the array-like object"):nil}),-2),$def(self,"$each",(function $$each(){var block=$$each.$$p||nil;if($$each.$$p=null,!$truthy(block))return this.$enum_for("each");for(var i=0,length=this.$length();i<length;i++)Opal.yield1(block,this["$[]"](i));return this})),$def(self,"$[]",(function(index){var result,$ret_or_1;return result=$eqeqeq($$("String"),$ret_or_1=index)||$eqeqeq($$("Symbol"),$ret_or_1)?$truthy(this.named)?this.native[this.named](index):this.native[index]:$eqeqeq($$("Integer"),$ret_or_1)?$truthy(this.get)?this.native[this.get](index):this.native[index]:nil,$truthy(result)?$truthy(this.block)?this.block.$call(result):this.$Native(result):nil})),$def(self,"$[]=",(function(index,value){return $truthy(this.set)?this.native[this.set](index,$$("Native").$convert(value)):this.native[index]=$$("Native").$convert(value)})),$def(self,"$last",(function(count){var index=nil,result=nil;if(null==count&&(count=nil),$truthy(count)){for(index=$rb_minus(this.$length(),1),result=[];$truthy($rb_ge(index,0));)result["$<<"](this["$[]"](index)),index=$rb_minus(index,1);return result}return this["$[]"]($rb_minus(this.$length(),1))}),-1),$def(self,"$length",(function(){return this.native[this.length]})),$def(self,"$inspect",(function(){return this.$to_a().$inspect()})),$alias(self,"to_ary","to_a")}($$("Native"),0,$nesting),function($base,$super){var self=$klass($base,null,"Numeric");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Proc");$def(self,"$to_n",$return_self)}($nesting[0]),function($base,$super){var self=$klass($base,null,"String");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Regexp");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"MatchData");$def(self,"$to_n",$return_ivar("matches"))}($nesting[0]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Struct"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$to_n",(function(){var result=nil;return result={},$send(this,"each_pair",[],(function(name,value){return null==name&&(name=nil),null==value&&(value=nil),result[name]=$$("Native").$try_convert(value,value)})),result}))}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$to_n",(function(){for(var result=[],i=0,length=this.length;i<length;i++){var obj=this[i];result.push($$("Native").$try_convert(obj,obj))}return result}))}($nesting[0],0,$nesting),function($base,$super){var self=$klass($base,null,"Boolean");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Time");$def(self,"$to_n",$return_self)}($nesting[0]),function($base,$super){var self=$klass($base,null,"NilClass");$def(self,"$to_n",(function(){return null}))}($nesting[0]),$truthy($$("Hash")["$method_defined?"]("_initialize"))||function($base,$super,$parent_nesting){var self=$klass($base,null,"Hash"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$alias(self,"_initialize","initialize"),$def(self,"$initialize",(function $$initialize(defaults){var block=$$initialize.$$p||nil,self=this;if($$initialize.$$p=null,null!=defaults&&(void 0===defaults.constructor||defaults.constructor===Object)){var key,value,smap=self.$$smap,keys=self.$$keys;for(key in defaults)!(value=defaults[key])||void 0!==value.constructor&&value.constructor!==Object?value&&value.$$is_array?(value=value.map((function(item){return!item||void 0!==item.constructor&&item.constructor!==Object?self.$Native(item):$$("Hash").$new(item)})),smap[key]=value):smap[key]=self.$Native(value):smap[key]=$$("Hash").$new(value),keys.push(key);return self}return $send(self,"_initialize",[defaults],block.$to_proc())}),-1),$def(self,"$to_n",(function(){for(var key,value,result={},keys=this.$$keys,smap=this.$$smap,i=0,length=keys.length;i<length;i++)value=(key=keys[i]).$$is_string?smap[key]:(key=key.key).value,result[key]=$$("Native").$try_convert(value,value);return result}))}($nesting[0],0,$nesting),function($base,$super){var self=$klass($base,null,"Module");$def(self,"$native_module",(function(){return Opal.global[this.$name()]=this}))}($nesting[0]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Class"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$native_alias",(function(new_jsid,existing_mid){var aliased=this.prototype[Opal.jsid(existing_mid)];aliased||this.$raise($$("NameError").$new("undefined method `"+existing_mid+"' for class `"+this.$inspect()+"'",existing_mid)),this.prototype[new_jsid]=aliased})),$def(self,"$native_class",(function(){return this.$native_module(),this.new=this.$new}))}($nesting[0],0,$nesting),$gvars.$=$gvars.global=self.$Native(Opal.global)},Opal.modules.console=function(Opal){var $klass=Opal.klass,$def=Opal.def,$slice=Opal.slice,$truthy=Opal.truthy,$eqeq=Opal.eqeq,$send=Opal.send,$gvars=Opal.gvars,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("require,include,raise,==,arity,instance_exec,to_proc,new"),self.$require("native"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Console"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$$prototype.native=nil,self.$include($$$($$("Native"),"Wrapper")),$def(self,"$clear",(function(){return this.native.clear()})),$def(self,"$trace",(function(){return this.native.trace()})),$def(self,"$log",(function($a){var args,self=this;return args=$slice(arguments),self.native.log.apply(self.native,args)}),-1),$def(self,"$info",(function($a){var args,self=this;return args=$slice(arguments),self.native.info.apply(self.native,args)}),-1),$def(self,"$warn",(function($a){var args,self=this;return args=$slice(arguments),self.native.warn.apply(self.native,args)}),-1),$def(self,"$error",(function($a){var args,self=this;return args=$slice(arguments),self.native.error.apply(self.native,args)}),-1),$def(self,"$time",(function $$time(label){var block=$$time.$$p||nil,self=this;return $$time.$$p=null,$truthy(block)||self.$raise($$("ArgumentError"),"no block given"),self.native.time(label),function(){try{return $eqeq(block.$arity(),0)?$send(self,"instance_exec",[],block.$to_proc()):Opal.yield1(block,self)}finally{self.native.timeEnd()}}()})),$def(self,"$group",(function $$group($a){var args,block=$$group.$$p||nil,self=this;return $$group.$$p=null,args=$slice(arguments),$truthy(block)||self.$raise($$("ArgumentError"),"no block given"),self.native.group.apply(self.native,args),function(){try{return $eqeq(block.$arity(),0)?$send(self,"instance_exec",[],block.$to_proc()):Opal.yield1(block,self)}finally{self.native.groupEnd()}}()}),-1),$def(self,"$group!",(function $Console_group$excl$1($a){var args,block=$Console_group$excl$1.$$p||nil,self=this;return $Console_group$excl$1.$$p=null,args=$slice(arguments),block===nil?nil:(self.native.groupCollapsed.apply(self.native,args),function(){try{return $eqeq(block.$arity(),0)?$send(self,"instance_exec",[],block.$to_proc()):Opal.yield1(block,self)}finally{self.native.groupEnd()}}())}),-1)}($nesting[0],0,$nesting),$truthy(void 0!==Opal.global.console)?$gvars.console=$$("Console").$new(Opal.global.console):nil};
