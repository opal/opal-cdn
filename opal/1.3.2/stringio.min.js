Opal.modules.stringio=function(Opal){function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$alias=Opal.alias,$truthy=Opal.truthy;return Opal.add_stubs(["$new","$call","$close","$attr_accessor","$check_readable","$==","$length","$===","$>=","$raise","$>","$+","$-","$seek","$check_writable","$String","$[]","$eof?","$write","$read"]),function($base,$super,$parent_nesting){var $StringIO_open$1,$StringIO_initialize$2,$StringIO_eof$ques$3,$StringIO_seek$4,$StringIO_tell$5,$StringIO_rewind$6,$StringIO_write$7,$StringIO_read$8,$StringIO_sysread$9,self=$klass($base,$super,"StringIO"),$nesting=[self].concat($parent_nesting);return self.$$prototype.position=self.$$prototype.string=nil,Opal.defs(self,"$open",$StringIO_open$1=function(string,mode){var res,$iter=$StringIO_open$1.$$p,block=$iter||nil,io=nil;return $iter&&($StringIO_open$1.$$p=null),$iter&&($StringIO_open$1.$$p=null),null==string&&(string=""),null==mode&&(mode=nil),io=this.$new(string,mode),res=block.$call(io),io.$close(),res},$StringIO_open$1.$$arity=-1),self.$attr_accessor("string"),Opal.def(self,"$initialize",$StringIO_initialize$2=function(string,mode){var $iter=$StringIO_initialize$2.$$p;return $iter&&($StringIO_initialize$2.$$p=null),null==string&&(string=""),null==mode&&(mode="rw"),this.string=string,this.position=0,$send2(this,$find_super(this,"initialize",$StringIO_initialize$2,!1,!0),"initialize",[nil,mode],null)},$StringIO_initialize$2.$$arity=-1),Opal.def(self,"$eof?",$StringIO_eof$ques$3=function(){return this.$check_readable(),this.position["$=="](this.string.$length())},$StringIO_eof$ques$3.$$arity=0),$alias(self,"eof","eof?"),Opal.def(self,"$seek",$StringIO_seek$4=function(pos,whence){var $case,lhs,rhs;return null==whence&&(whence=$$$($$($nesting,"IO"),"SEEK_SET")),this.read_buffer="",$case=whence,$$$($$($nesting,"IO"),"SEEK_SET")["$==="]($case)?($truthy((rhs=0,"number"==typeof(lhs=pos)&&"number"==typeof rhs?lhs>=rhs:lhs["$>="](rhs)))||this.$raise($$$($$($nesting,"Errno"),"EINVAL")),this.position=pos):$$$($$($nesting,"IO"),"SEEK_CUR")["$==="]($case)?$truthy($rb_gt($rb_plus(this.position,pos),this.string.$length()))?this.position=this.string.$length():this.position=$rb_plus(this.position,pos):$$$($$($nesting,"IO"),"SEEK_END")["$==="]($case)&&($truthy($rb_gt(pos,this.string.$length()))?this.position=0:this.position=$rb_minus(this.position,pos)),0},$StringIO_seek$4.$$arity=-2),Opal.def(self,"$tell",$StringIO_tell$5=function(){return this.position},$StringIO_tell$5.$$arity=0),$alias(self,"pos","tell"),$alias(self,"pos=","seek"),Opal.def(self,"$rewind",$StringIO_rewind$6=function(){return this.$seek(0)},$StringIO_rewind$6.$$arity=0),Opal.def(self,"$write",$StringIO_write$7=function(string){var before=nil,after=nil;return this.$check_writable(),this.read_buffer="",string=this.$String(string),this.string.$length()["$=="](this.position)?(this.string=$rb_plus(this.string,string),this.position=$rb_plus(this.position,string.$length())):(before=this.string["$[]"](Opal.Range.$new(0,$rb_minus(this.position,1),!1)),after=this.string["$[]"](Opal.Range.$new($rb_plus(this.position,string.$length()),-1,!1)),this.string=$rb_plus($rb_plus(before,string),after),this.position=$rb_plus(this.position,string.$length()))},$StringIO_write$7.$$arity=1),Opal.def(self,"$read",$StringIO_read$8=function(length,outbuf){var string,self=this,str=nil;return null==length&&(length=nil),null==outbuf&&(outbuf=nil),self.$check_readable(),$truthy(self["$eof?"]())?nil:(string=$truthy(length)?(str=self.string["$[]"](self.position,length),self.position=$rb_plus(self.position,length),$truthy($rb_gt(self.position,self.string.$length()))&&(self.position=self.string.$length()),str):(str=self.string["$[]"](Opal.Range.$new(self.position,-1,!1)),self.position=self.string.$length(),str),$truthy(outbuf)?outbuf.$write(string):string)},$StringIO_read$8.$$arity=-1),Opal.def(self,"$sysread",$StringIO_sysread$9=function(length){return this.$check_readable(),this.$read(length)},$StringIO_sysread$9.$$arity=1),$alias(self,"readpartial","read")}($nesting[0],$$($nesting,"IO"),$nesting)};
