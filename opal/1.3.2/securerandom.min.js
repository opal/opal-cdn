Opal.modules["corelib/random/formatter"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$module=Opal.module,$send=Opal.send,$range=Opal.range;return Opal.add_stubs(["$_verify_count","$bytes","$encode","$strict_encode64","$random_bytes","$urlsafe_encode64","$split","$hex","$[]=","$-","$[]","$map","$to_proc","$join","$times","$<<","$|","$ord","$/","$abs","$random_float","$raise","$coerce_to!","$flatten","$new","$random_number","$length","$include","$extend"]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Random"),$nesting=[self].concat($parent_nesting);return function($base,$parent_nesting){var $Formatter_hex$1,$Formatter_random_bytes$2,$Formatter_base64$3,$Formatter_urlsafe_base64$4,$Formatter_uuid$5,$Formatter_random_float$6,$Formatter_random_number$8,$Formatter_alphanumeric$9,self=$module($base,"Formatter"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$hex",$Formatter_hex$1=function(count){null==count&&(count=nil),count=$$($nesting,"Random").$_verify_count(count);for(var bytes=this.$bytes(count),out="",i=0;i<count;i++)out+=bytes.charCodeAt(i).toString(16).padStart(2,"0");return out.$encode("US-ASCII")},$Formatter_hex$1.$$arity=-1),Opal.def(self,"$random_bytes",$Formatter_random_bytes$2=function(count){return null==count&&(count=nil),this.$bytes(count)},$Formatter_random_bytes$2.$$arity=-1),Opal.def(self,"$base64",$Formatter_base64$3=function(count){return null==count&&(count=nil),$$($nesting,"Base64").$strict_encode64(this.$random_bytes(count)).$encode("US-ASCII")},$Formatter_base64$3.$$arity=-1),Opal.def(self,"$urlsafe_base64",$Formatter_urlsafe_base64$4=function(count,padding){return null==count&&(count=nil),null==padding&&(padding=!1),$$($nesting,"Base64").$urlsafe_encode64(this.$random_bytes(count),padding).$encode("US-ASCII")},$Formatter_urlsafe_base64$4.$$arity=-1),Opal.def(self,"$uuid",$Formatter_uuid$5=function(){var str=nil,$writer=nil;return str=this.$hex(16).$split(""),$writer=[12,"4"],$send(str,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[16,(3&parseInt(str["$[]"](16),16)|8).toString(16)],$send(str,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],str=[str["$[]"]($range(0,8,!0)),str["$[]"]($range(8,12,!0)),str["$[]"]($range(12,16,!0)),str["$[]"]($range(16,20,!0)),str["$[]"]($range(20,32,!0))],(str=$send(str,"map",[],"join".$to_proc())).$join("-")},$Formatter_uuid$5.$$arity=0),Opal.def(self,"$random_float",$Formatter_random_float$6=function(){var $$7,lhs,rhs,bs=nil,num=nil;return bs=this.$bytes(4),num=0,$send(4,"times",[],(($$7=function(i){null==$$7.$$s||$$7.$$s;return null==i&&(i=nil),num=(num=num["$<<"](8))["$|"](bs["$[]"](i).$ord())}).$$s=this,$$7.$$arity=1,$$7)),lhs=num.$abs(),rhs=2147483647,"number"==typeof lhs&&"number"==typeof rhs?lhs/rhs:lhs["$/"](rhs)},$Formatter_random_float$6.$$arity=0),Opal.def(self,"$random_number",$Formatter_random_number$8=function(limit){var self=this;function randomFloat(){return self.$random_float()}function randomInt(max){return Math.floor(randomFloat()*max)}return null==limit?randomFloat():limit.$$is_range?function(){var min=limit.begin,max=limit.end;if(min===nil||max===nil)return nil;var length=max-min;return length<0?nil:0===length?min:(max%1!=0||min%1!=0||limit.excl||length++,randomInt(length)+min)}():limit.$$is_number?(limit<=0&&self.$raise($$($nesting,"ArgumentError"),"invalid argument - "+limit),limit%1==0?randomInt(limit):randomFloat()*limit):((limit=$$($nesting,"Opal")["$coerce_to!"](limit,$$($nesting,"Integer"),"to_int"))<=0&&self.$raise($$($nesting,"ArgumentError"),"invalid argument - "+limit),randomInt(limit))},$Formatter_random_number$8.$$arity=-1),Opal.def(self,"$alphanumeric",$Formatter_alphanumeric$9=function(count){var $$10,map=nil;return null==count&&(count=nil),count=$$($nesting,"Random").$_verify_count(count),map=$send([$range("0","9",!1),$range("a","z",!1),$range("A","Z",!1)],"map",[],"to_a".$to_proc()).$flatten(),$send($$($nesting,"Array"),"new",[count],($$10=function(i){var self=null==$$10.$$s?this:$$10.$$s;return null==i&&(i=nil),map["$[]"](self.$random_number(map.$length()))},$$10.$$s=this,$$10.$$arity=1,$$10)).$join()},$Formatter_alphanumeric$9.$$arity=-1)}($nesting[0],$nesting),self.$include($$$($$($nesting,"Random"),"Formatter")),self.$extend($$$($$($nesting,"Random"),"Formatter"))}($nesting[0],0,$nesting)},Opal.modules.securerandom=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$module=Opal.module;return Opal.add_stubs(["$require","$extend","$warn","$rand","$gen_random","$_verify_count","$encode"]),self.$require("corelib/random/formatter"),function($base,$parent_nesting){var $SecureRandom_bytes$1,$SecureRandom_gen_random$2,gen_random_bytes,self=$module($base,"SecureRandom"),$nesting=[self].concat($parent_nesting);if(self.$extend($$$($$($nesting,"Random"),"Formatter")),Opal.global.crypto&&Opal.global.crypto.getRandomValues||Opal.global.msCrypto&&Opal.global.msCrypto.getRandomValues){var crypto=Opal.global.crypto||Opal.global.msCrypto;gen_random_bytes=function(count){var storage=new Uint8Array(count);return crypto.getRandomValues(storage),storage}}else Opal.global.crypto&&Opal.global.crypto.randomBytes?gen_random_bytes=function(count){return Opal.global.crypto.randomBytes(count)}:(self.$warn("Can't get a Crypto.getRandomValues interface or Crypto.randomBytes.The random values generated with SecureRandom won't be cryptographically secure"),gen_random_bytes=function(count){for(var storage=new Uint8Array(count),i=0;i<count;i++)storage[i]=self.$rand(255)^Math.floor(256*Math.random()),storage[i]^=+new Date>>self.$rand(255)&255;return storage});return Opal.defs(self,"$bytes",$SecureRandom_bytes$1=function(bytes){return null==bytes&&(bytes=nil),this.$gen_random(bytes)},$SecureRandom_bytes$1.$$arity=-1),Opal.defs(self,"$gen_random",$SecureRandom_gen_random$2=function(count){var out=nil;null==count&&(count=nil),count=$$($nesting,"Random").$_verify_count(count),out="";for(var bytes=gen_random_bytes(count),i=0;i<count;i++)out+=String.fromCharCode(bytes[i]);return out.$encode("ASCII-8BIT")},$SecureRandom_gen_random$2.$$arity=-1),nil&&"gen_random"}($nesting[0],$nesting)};
