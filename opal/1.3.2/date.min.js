Opal.modules.date=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}function $rb_lt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$alias=Opal.alias,$send=Opal.send;return Opal.add_stubs(["$include","$<=>","$attr_reader","$nonzero?","$d","$zero?","$new","$class","$-@","$+@","$===","$coerce","$==","$>","$+","$allocate","$join","$compact","$map","$to_proc","$downcase","$wrap","$raise","$clone","$jd","$>>","$wday","$year","$month","$day","$-","$to_s","$to_i","$<","$*","$reverse","$step","$abs","$each"]),function($base,$super,$parent_nesting){var $Date_initialize$16,$Date_$minus$17,$Date_$plus$18,$Date_$lt$19,$Date_$lt_eq$20,$Date_$gt$21,$Date_$gt_eq$22,$Date_$lt_eq_gt$23,$Date_$gt$gt$24,$Date_$lt$lt$25,$Date_clone$26,$Date_day$27,$Date_friday$ques$28,$Date_jd$29,$Date_julian$ques$30,$Date_monday$ques$31,$Date_month$32,$Date_next$33,$Date_next_day$34,$Date_next_month$35,$Date_next_year$36,$Date_prev_day$37,$Date_prev_month$38,$Date_prev_year$39,$Date_saturday$ques$40,$Date_strftime$41,$Date_sunday$ques$42,$Date_thursday$ques$43,$Date_to_s$44,$Date_to_time$45,$Date_to_n$46,$Date_tuesday$ques$47,$Date_step$48,$Date_upto$51,$Date_downto$52,$Date_wday$53,$Date_wednesday$ques$54,$Date_year$55,$Date_cwday$56,$Date_cweek$57,self=$klass($base,null,"Date"),$nesting=[self].concat($parent_nesting);function days_in_month(year,month){return[31,year%4==0&&year%100!=0||year%400==0?29:28,31,30,31,30,31,31,30,31,30,31][month]}self.$$prototype.date=nil,self.$include($$($nesting,"Comparable")),function($base,$super,$parent_nesting){var $Infinity_initialize$1,$Infinity_zero$ques$2,$Infinity_finite$ques$3,$Infinity_infinite$ques$4,$Infinity_nan$ques$5,$Infinity_abs$6,$Infinity_$minus$$7,$Infinity_$plus$$8,$Infinity_$lt_eq_gt$9,$Infinity_coerce$10,$Infinity_to_f$11,self=$klass($base,$super,"Infinity"),$nesting=[self].concat($parent_nesting);self.$$prototype.d=nil,self.$include($$($nesting,"Comparable")),Opal.def(self,"$initialize",$Infinity_initialize$1=function(d){return null==d&&(d=1),this.d=d["$<=>"](0)},$Infinity_initialize$1.$$arity=-1),self.$attr_reader("d"),Opal.def(self,"$zero?",$Infinity_zero$ques$2=function(){return!1},$Infinity_zero$ques$2.$$arity=0),Opal.def(self,"$finite?",$Infinity_finite$ques$3=function(){return!1},$Infinity_finite$ques$3.$$arity=0),Opal.def(self,"$infinite?",$Infinity_infinite$ques$4=function(){return this.$d()["$nonzero?"]()},$Infinity_infinite$ques$4.$$arity=0),Opal.def(self,"$nan?",$Infinity_nan$ques$5=function(){return this.$d()["$zero?"]()},$Infinity_nan$ques$5.$$arity=0),Opal.def(self,"$abs",$Infinity_abs$6=function(){return this.$class().$new()},$Infinity_abs$6.$$arity=0),Opal.def(self,"$-@",$Infinity_$minus$$7=function(){return this.$class().$new(this.$d()["$-@"]())},$Infinity_$minus$$7.$$arity=0),Opal.def(self,"$+@",$Infinity_$plus$$8=function(){return this.$class().$new(this.$d()["$+@"]())},$Infinity_$plus$$8.$$arity=0),Opal.def(self,"$<=>",$Infinity_$lt_eq_gt$9=function(other){var $a,$b,self=this,$case=nil,l=nil,r=nil;return function(){if($case=other,$$($nesting,"Infinity")["$==="]($case))return self.$d()["$<=>"](other.$d());if($$($nesting,"Numeric")["$==="]($case))return self.$d();try{return $b=other.$coerce(self),$a=Opal.to_ary($b),l=null==$a[0]?nil:$a[0],r=null==$a[1]?nil:$a[1],l["$<=>"](r)}catch($err){if(!Opal.rescue($err,[$$($nesting,"NoMethodError")]))throw $err;try{return nil}finally{Opal.pop_exception()}}}()},$Infinity_$lt_eq_gt$9.$$arity=1),Opal.def(self,"$coerce",$Infinity_coerce$10=function(other){var $iter=$Infinity_coerce$10.$$p,self=this,$case=nil;return $iter&&($Infinity_coerce$10.$$p=null),$case=other,$$($nesting,"Numeric")["$==="]($case)?[self.$d()["$-@"](),self.$d()]:$send2(self,$find_super(self,"coerce",$Infinity_coerce$10,!1,!0),"coerce",[other],$iter)},$Infinity_coerce$10.$$arity=1),Opal.def(self,"$to_f",$Infinity_to_f$11=function(){var lhs,rhs;return this.d["$=="](0)?0:$truthy((lhs=this.d,rhs=0,"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)))?$$$($$($nesting,"Float"),"INFINITY"):$$$($$($nesting,"Float"),"INFINITY")["$-@"]()},$Infinity_to_f$11.$$arity=0)}($nesting[0],$$($nesting,"Numeric"),$nesting),Opal.const_set($nesting[0],"JULIAN",$$($nesting,"Infinity").$new()),Opal.const_set($nesting[0],"GREGORIAN",$$($nesting,"Infinity").$new()["$-@"]()),Opal.const_set($nesting[0],"ITALY",2299161),Opal.const_set($nesting[0],"ENGLAND",2361222),Opal.const_set($nesting[0],"MONTHNAMES",$rb_plus([nil],["January","February","March","April","May","June","July","August","September","October","November","December"])),Opal.const_set($nesting[0],"ABBR_MONTHNAMES",["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"]),Opal.const_set($nesting[0],"DAYNAMES",["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]),Opal.const_set($nesting[0],"ABBR_DAYNAMES",["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]),function(self,$parent_nesting){var $wrap$12,$parse$13,$today$14,$gregorian_leap$ques$15,$nesting=[self].concat($parent_nesting);$alias(self,"civil","new"),Opal.def(self,"$wrap",$wrap$12=function(native$){var instance=nil;return(instance=this.$allocate()).date=native$,instance},$wrap$12.$$arity=1),Opal.def(self,"$parse",$parse$13=function(string,comp){null==comp&&(comp=!0);var current_date=new Date,current_day=current_date.getDate(),current_month=current_date.getMonth(),current_year=current_date.getFullYear(),current_wday=current_date.getDay(),full_month_name_regexp=$$($nesting,"MONTHNAMES").$compact().$join("|");function match1(match){return match[1]}function match2(match){return match[2]}function match3(match){return match[3]}function match4(match){return match[4]}function fromShortYear(fn){return function(match){var short_year=fn(match);return short_year+=short_year>=69?1900:2e3}}function fromMonthAbbr(fn){return function(match){var abbr=fn(match).toLowerCase();return $$($nesting,"ABBR_MONTHNAMES").indexOf(abbr)+1}}function toInt(fn){return function(match){var value=fn(match);return parseInt(value,10)}}function fromFullMonthName(fn){return function(match){var month_name=fn(match);return $send($$($nesting,"MONTHNAMES").$compact(),"map",[],"downcase".$to_proc()).indexOf(month_name.$downcase())+1}}var fn,rule,i,match,rules=[{regexp:/^(\d{2})$/,year:current_year,month:current_month,day:toInt(match1)},{regexp:/^(\d{3})$/,year:current_year,month:0,day:toInt(match1)},{regexp:/^(\d{2})(\d{2})$/,year:current_year,month:toInt(match1),day:toInt(match2)},{regexp:/^(\d{2})(\d{3})$/,year:fromShortYear(toInt(match1)),month:0,day:toInt(match2)},{regexp:/^(\d{2})(\d{2})(\d{2})$/,year:fromShortYear(toInt(match1)),month:toInt(match2),day:toInt(match3)},{regexp:/^(\d{4})(\d{3})$/,year:toInt(match1),month:0,day:toInt(match2)},{regexp:/^(\d{4})(\d{2})(\d{2})$/,year:toInt(match1),month:toInt(match2),day:toInt(match3)},{regexp:/^([a-z]{3})[\s\.\/\-](\d{3,4})$/,year:toInt(match2),month:fromMonthAbbr(match1),day:1},{regexp:/^(\d{1,2})[\s\.\/\-]([a-z]{3})[\s\.\/\-](\d{3,4})$/i,year:toInt(match3),month:fromMonthAbbr(match2),day:toInt(match1)},{regexp:/^([a-z]{3})[\s\.\/\-](\d{1,2})[\s\.\/\-](\d{3,4})$/i,year:toInt(match3),month:fromMonthAbbr(match1),day:toInt(match2)},{regexp:/^(\d{3,4})[\s\.\/\-]([a-z]{3})[\s\.\/\-](\d{1,2})$/i,year:toInt(match1),month:fromMonthAbbr(match2),day:toInt(match3)},{regexp:/^(\-?\d{3,4})[\s\.\/\-](\d{1,2})[\s\.\/\-](\d{1,2})$/,year:toInt(match1),month:toInt(match2),day:toInt(match3)},{regexp:/^(\d{2})[\s\.\/\-](\d{1,2})[\s\.\/\-](\d{1,2})$/,year:(fn=toInt(match1),function(match){var value=fn(match);return comp?value+2e3:value}),month:toInt(match2),day:toInt(match3)},{regexp:/^(\d{1,2})[\s\.\/\-](\d{1,2})[\s\.\/\-](\-?\d{3,4})$/,year:toInt(match3),month:toInt(match2),day:toInt(match1)},{regexp:new RegExp("^("+$$($nesting,"DAYNAMES").$join("|")+")$","i"),year:current_year,month:current_month,day:function(fn){return function(match){var dayname=fn(match),wday=$send($$($nesting,"DAYNAMES"),"map",[],"downcase".$to_proc()).indexOf(dayname.$downcase());return current_day-current_wday+wday}}(match1)},{regexp:new RegExp("^("+full_month_name_regexp+")[\\s\\.\\/\\-](\\d{1,2})(th|nd|rd)[\\s\\.\\/\\-](\\-?\\d{3,4})$","i"),year:toInt(match4),month:fromFullMonthName(match1),day:toInt(match2)},{regexp:new RegExp("^("+full_month_name_regexp+")[\\s\\.\\/\\-](\\d{1,2})(th|nd|rd)","i"),year:current_year,month:fromFullMonthName(match1),day:toInt(match2)},{regexp:new RegExp("^(\\d{1,2})(th|nd|rd)[\\s\\.\\/\\-]("+full_month_name_regexp+")[\\s\\.\\/\\-](\\-?\\d{3,4})$","i"),year:toInt(match4),month:fromFullMonthName(match3),day:toInt(match1)},{regexp:new RegExp("^(\\-?\\d{3,4})[\\s\\.\\/\\-]("+full_month_name_regexp+")[\\s\\.\\/\\-](\\d{1,2})(th|nd|rd)$","i"),year:toInt(match1),month:fromFullMonthName(match2),day:toInt(match3)}];for(i=0;i<rules.length;i++)if(match=(rule=rules[i]).regexp.exec(string)){var year=rule.year;"function"==typeof year&&(year=year(match));var month=rule.month;"function"==typeof month&&(month=month(match)-1);var day=rule.day;"function"==typeof day&&(day=day(match));var result=new Date(year,month,day);return year>=0&&year<=1970&&result.setFullYear(year),this.$wrap(result)}return this.$raise($$($nesting,"ArgumentError"),"invalid date")},$parse$13.$$arity=-2),Opal.def(self,"$today",$today$14=function(){return this.$wrap(new Date)},$today$14.$$arity=0),Opal.def(self,"$gregorian_leap?",$gregorian_leap$ques$15=function(year){return new Date(year,1,29).getMonth()-1==0},$gregorian_leap$ques$15.$$arity=1)}(Opal.get_singleton_class(self),$nesting),Opal.def(self,"$initialize",$Date_initialize$16=function(year,month,day,start){return null==year&&(year=-4712),null==month&&(month=1),null==day&&(day=1),null==start&&(start=$$($nesting,"ITALY")),1582===year&&10===month&&day>4&&day<15&&(day=4),this.date=new Date(year,month-1,day)},$Date_initialize$16.$$arity=-1),Opal.def(self,"$-",$Date_$minus$17=function(date){if(date.$$is_number){var result=this.$clone();return result.date.setDate(this.date.getDate()-date),result}if(date.date)return Math.round((this.date-date.date)/864e5);this.$raise($$($nesting,"TypeError"))},$Date_$minus$17.$$arity=1),Opal.def(self,"$+",$Date_$plus$18=function(date){if(date.$$is_number){var result=this.$clone();return result.date.setDate(this.date.getDate()+date),result}this.$raise($$($nesting,"TypeError"))},$Date_$plus$18.$$arity=1),Opal.def(self,"$<",$Date_$lt$19=function(other){var a=this.date,b=other.date;return a.setHours(0,0,0,0),b.setHours(0,0,0,0),a<b},$Date_$lt$19.$$arity=1),Opal.def(self,"$<=",$Date_$lt_eq$20=function(other){var a=this.date,b=other.date;return a.setHours(0,0,0,0),b.setHours(0,0,0,0),a<=b},$Date_$lt_eq$20.$$arity=1),Opal.def(self,"$>",$Date_$gt$21=function(other){var a=this.date,b=other.date;return a.setHours(0,0,0,0),b.setHours(0,0,0,0),a>b},$Date_$gt$21.$$arity=1),Opal.def(self,"$>=",$Date_$gt_eq$22=function(other){var a=this.date,b=other.date;return a.setHours(0,0,0,0),b.setHours(0,0,0,0),a>=b},$Date_$gt_eq$22.$$arity=1),Opal.def(self,"$<=>",$Date_$lt_eq_gt$23=function(other){if(other.$$is_number)return this.$jd()["$<=>"](other);if($$($nesting,"Date")["$==="](other)){var a=this.date,b=other.date;return a.setHours(0,0,0,0),b.setHours(0,0,0,0),a<b?-1:a>b?1:0}return nil},$Date_$lt_eq_gt$23.$$arity=1),Opal.def(self,"$>>",$Date_$gt$gt$24=function(n){n.$$is_number||this.$raise($$($nesting,"TypeError"));var result=this.$clone(),date=result.date,cur=date.getDate();return date.setDate(1),date.setMonth(date.getMonth()+n),date.setDate(Math.min(cur,days_in_month(date.getFullYear(),date.getMonth()))),result},$Date_$gt$gt$24.$$arity=1),Opal.def(self,"$<<",$Date_$lt$lt$25=function(n){return n.$$is_number||this.$raise($$($nesting,"TypeError")),this["$>>"](-n)},$Date_$lt$lt$25.$$arity=1),$alias(self,"eql?","=="),Opal.def(self,"$clone",$Date_clone$26=function(){return $$($nesting,"Date").$wrap(new Date(this.date.getTime()))},$Date_clone$26.$$arity=0),Opal.def(self,"$day",$Date_day$27=function(){return this.date.getDate()},$Date_day$27.$$arity=0),Opal.def(self,"$friday?",$Date_friday$ques$28=function(){return this.$wday()["$=="](5)},$Date_friday$ques$28.$$arity=0),Opal.def(self,"$jd",$Date_jd$29=function(){var ggg,s,a,j1,jd,mm=this.date.getMonth()+1,dd=this.date.getDate(),yy=this.date.getFullYear(),hr=12;return hr=hr+0+0,ggg=1,yy<=1585&&(ggg=0),jd=-1*Math.floor(7*(Math.floor((mm+9)/12)+yy)/4),s=1,mm-9<0&&(s=-1),a=Math.abs(mm-9),j1=Math.floor(yy+s*Math.floor(a/7)),j1=-1*Math.floor(3*(Math.floor(j1/100)+1)/4),jd=(jd=jd+Math.floor(275*mm/9)+dd+ggg*j1)+1721027+2*ggg+367*yy-.5,jd+=hr/24},$Date_jd$29.$$arity=0),Opal.def(self,"$julian?",$Date_julian$ques$30=function(){return this.date<new Date(1582,9,15,12)},$Date_julian$ques$30.$$arity=0),Opal.def(self,"$monday?",$Date_monday$ques$31=function(){return this.$wday()["$=="](1)},$Date_monday$ques$31.$$arity=0),Opal.def(self,"$month",$Date_month$32=function(){return this.date.getMonth()+1},$Date_month$32.$$arity=0),Opal.def(self,"$next",$Date_next$33=function(){return $rb_plus(this,1)},$Date_next$33.$$arity=0),Opal.def(self,"$next_day",$Date_next_day$34=function(n){return null==n&&(n=1),$rb_plus(this,n)},$Date_next_day$34.$$arity=-1),Opal.def(self,"$next_month",$Date_next_month$35=function(n){null==n&&(n=1);var result=this.$clone(),date=result.date,cur=date.getDate();return date.setDate(1),date.setMonth(date.getMonth()+n),date.setDate(Math.min(cur,days_in_month(date.getFullYear(),date.getMonth()))),result},$Date_next_month$35.$$arity=-1),Opal.def(self,"$next_year",$Date_next_year$36=function(years){return null==years&&(years=1),this.$class().$new($rb_plus(this.$year(),years),this.$month(),this.$day())},$Date_next_year$36.$$arity=-1),Opal.def(self,"$prev_day",$Date_prev_day$37=function(n){return null==n&&(n=1),$rb_minus(this,n)},$Date_prev_day$37.$$arity=-1),Opal.def(self,"$prev_month",$Date_prev_month$38=function(n){null==n&&(n=1);var result=this.$clone(),date=result.date,cur=date.getDate();return date.setDate(1),date.setMonth(date.getMonth()-n),date.setDate(Math.min(cur,days_in_month(date.getFullYear(),date.getMonth()))),result},$Date_prev_month$38.$$arity=-1),Opal.def(self,"$prev_year",$Date_prev_year$39=function(years){return null==years&&(years=1),this.$class().$new($rb_minus(this.$year(),years),this.$month(),this.$day())},$Date_prev_year$39.$$arity=-1),Opal.def(self,"$saturday?",$Date_saturday$ques$40=function(){return this.$wday()["$=="](6)},$Date_saturday$ques$40.$$arity=0),Opal.def(self,"$strftime",$Date_strftime$41=function(format){return null==format&&(format=""),""==format?this.$to_s():this.date.$strftime(format)},$Date_strftime$41.$$arity=-1),$alias(self,"succ","next"),Opal.def(self,"$sunday?",$Date_sunday$ques$42=function(){return this.$wday()["$=="](0)},$Date_sunday$ques$42.$$arity=0),Opal.def(self,"$thursday?",$Date_thursday$ques$43=function(){return this.$wday()["$=="](4)},$Date_thursday$ques$43.$$arity=0),Opal.def(self,"$to_s",$Date_to_s$44=function(){var d=this.date,year=d.getFullYear(),month=d.getMonth()+1,day=d.getDate();return month<10&&(month="0"+month),day<10&&(day="0"+day),year+"-"+month+"-"+day},$Date_to_s$44.$$arity=0),Opal.def(self,"$to_time",$Date_to_time$45=function(){return $$($nesting,"Time").$new(this.$year(),this.$month(),this.$day())},$Date_to_time$45.$$arity=0),Opal.def(self,"$to_n",$Date_to_n$46=function(){return this.date},$Date_to_n$46.$$arity=0),Opal.def(self,"$tuesday?",$Date_tuesday$ques$47=function(){return this.$wday()["$=="](2)},$Date_tuesday$ques$47.$$arity=0),Opal.def(self,"$step",$Date_step$48=function(limit,step){var $$49,$$50,steps,result,lhs,rhs,$iter=$Date_step$48.$$p,block=$iter||nil,steps_count=nil;return $iter&&($Date_step$48.$$p=null),$iter&&($Date_step$48.$$p=null),null==step&&(step=1),steps_count=$rb_minus(limit,this).$to_i(),steps=$truthy($rb_lt((rhs=step,"number"==typeof(lhs=steps_count)&&"number"==typeof rhs?lhs*rhs:lhs["$*"](rhs)),0))?[]:$truthy($rb_lt(steps_count,0))?$send(Opal.Range.$new(0,steps_count["$-@"](),!1).$step(step.$abs()),"map",[],"-@".$to_proc()).$reverse():Opal.Range.$new(0,steps_count,!1).$step(step.$abs()),result=$send(steps,"map",[],($$49=function(i){var self=null==$$49.$$s?this:$$49.$$s;return null==i&&(i=nil),$rb_plus(self,i)},$$49.$$s=this,$$49.$$arity=1,$$49)),block!==nil?($send(result,"each",[],(($$50=function(i){null==$$50.$$s||$$50.$$s;return null==i&&(i=nil),Opal.yield1(block,i)}).$$s=this,$$50.$$arity=1,$$50)),this):result},$Date_step$48.$$arity=-2),Opal.def(self,"$upto",$Date_upto$51=function(max){var $iter=$Date_upto$51.$$p,block=$iter||nil;return $iter&&($Date_upto$51.$$p=null),$iter&&($Date_upto$51.$$p=null),$send(this,"step",[max,1],block.$to_proc())},$Date_upto$51.$$arity=1),Opal.def(self,"$downto",$Date_downto$52=function(min){var $iter=$Date_downto$52.$$p,block=$iter||nil;return $iter&&($Date_downto$52.$$p=null),$iter&&($Date_downto$52.$$p=null),$send(this,"step",[min,-1],block.$to_proc())},$Date_downto$52.$$arity=1),Opal.def(self,"$wday",$Date_wday$53=function(){return this.date.getDay()},$Date_wday$53.$$arity=0),Opal.def(self,"$wednesday?",$Date_wednesday$ques$54=function(){return this.$wday()["$=="](3)},$Date_wednesday$ques$54.$$arity=0),Opal.def(self,"$year",$Date_year$55=function(){return this.date.getFullYear()},$Date_year$55.$$arity=0),Opal.def(self,"$cwday",$Date_cwday$56=function(){return this.date.getDay()||7},$Date_cwday$56.$$arity=0),Opal.def(self,"$cweek",$Date_cweek$57=function(){var d=new Date(this.date);return d.setHours(0,0,0),d.setDate(d.getDate()+4-(d.getDay()||7)),Math.ceil(((d-new Date(d.getFullYear(),0,1))/864e5+1)/7)},$Date_cweek$57.$$arity=0)}($nesting[0],0,$nesting)};
