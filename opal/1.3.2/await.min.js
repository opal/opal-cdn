Opal.modules["promise/v2"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$truthy=Opal.truthy,$klass=Opal.klass,$send=Opal.send,$alias=Opal.alias;return Opal.add_stubs(["$warn","$instance_variable_set","$Array","$==","$length","$first","$tap","$attr_reader","$!=","$native?","$raise","$include?","$any?","$proc","$call","$nativity_check!","$gen_tracing_proc","$<<","$there_can_be_only_one!","$then","$to_proc","$fail","$always","$!","$>","$value","$unshift","$-","$prev","$trace","$light_nativity_check!","$nil?","$resolved?","$===","$rejected?","$map","$when","$new","$rescue","$resolve","$reject","$class","$+","$object_id","$inspect"]),$truthy("warning"==Opal.config.experimental_features_severity)&&self.$warn("PromiseV2 is a technology preview, which means it may change its behavior in the future until this warning is removed. If you are interested in this part, please make sure you track the async/await/promises tag on Opal issues: https://github.com/opal/opal/issues?q=label%3Aasync%2Fawait%2Fpromises"),function($base,$super,$parent_nesting){var $PromiseV2_native$ques$14,$PromiseV2_nativity_check$excl$15,$PromiseV2_light_nativity_check$excl$16,$PromiseV2_there_can_be_only_one$excl$17,$PromiseV2_gen_tracing_proc$18,$PromiseV2_resolve$20,$PromiseV2_reject$21,$PromiseV2_then$22,$PromiseV2_then$excl$24,$PromiseV2_fail$25,$PromiseV2_fail$excl$27,$PromiseV2_always$28,$PromiseV2_always$excl$30,$PromiseV2_trace$31,$PromiseV2_trace$excl$33,$PromiseV2_resolved$ques$34,$PromiseV2_rejected$ques$35,$PromiseV2_realized$ques$36,$PromiseV2_value$37,$PromiseV2_error$38,$PromiseV2_and$39,$PromiseV2_initialize$42,$PromiseV2_to_v1$43,$PromiseV2_inspect$46,self=$klass($base,Promise,"PromiseV2"),$nesting=[self].concat($parent_nesting);return self.$$prototype.type=self.$$prototype.next=self.$$prototype.realized=self.$$prototype.resolve_proc=self.$$prototype.reject_proc=self.$$prototype.value=nil,function(self,$parent_nesting){var $allocate$1,$when$2,$all_resolved$4,$any$6,$race$8,$resolve$10,$reject$12;[self].concat($parent_nesting);Opal.def(self,"$allocate",$allocate$1=function(){var $a,ok=nil,fail=nil,prom=nil;return ok=($a=[nil,nil])[0],fail=$a[1],(prom=new this.$$constructor((function(_ok,_fail){ok=_ok,fail=_fail}))).$instance_variable_set("@type","opal"),prom.$instance_variable_set("@resolve_proc",ok),prom.$instance_variable_set("@reject_proc",fail),prom},$allocate$1.$$arity=0),Opal.def(self,"$when",$when$2=function($a){var $post_args,promises,$$3,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),promises=$post_args,promises=self.$Array(promises.$length()["$=="](1)?promises.$first():promises),$send(Promise.all(promises),"tap",[],(($$3=function(prom){null==$$3.$$s||$$3.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","when")}).$$s=self,$$3.$$arity=1,$$3))},$when$2.$$arity=-1),$alias(self,"all","when"),Opal.def(self,"$all_resolved",$all_resolved$4=function($a){var $post_args,promises,$$5,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),promises=$post_args,promises=self.$Array(promises.$length()["$=="](1)?promises.$first():promises),$send(Promise.allResolved(promises),"tap",[],(($$5=function(prom){null==$$5.$$s||$$5.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","all_resolved")}).$$s=self,$$5.$$arity=1,$$5))},$all_resolved$4.$$arity=-1),Opal.def(self,"$any",$any$6=function($a){var $post_args,promises,$$7,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),promises=$post_args,promises=self.$Array(promises.$length()["$=="](1)?promises.$first():promises),$send(Promise.any(promises),"tap",[],(($$7=function(prom){null==$$7.$$s||$$7.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","any")}).$$s=self,$$7.$$arity=1,$$7))},$any$6.$$arity=-1),Opal.def(self,"$race",$race$8=function($a){var $post_args,promises,$$9,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),promises=$post_args,promises=self.$Array(promises.$length()["$=="](1)?promises.$first():promises),$send(Promise.race(promises),"tap",[],(($$9=function(prom){null==$$9.$$s||$$9.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","race")}).$$s=self,$$9.$$arity=1,$$9))},$race$8.$$arity=-1),Opal.def(self,"$resolve",$resolve$10=function(value){var $$11;return null==value&&(value=nil),$send(Promise.resolve(value),"tap",[],(($$11=function(prom){null==$$11.$$s||$$11.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","resolve"),prom.$instance_variable_set("@realized","resolve"),prom.$instance_variable_set("@value",value)}).$$s=this,$$11.$$arity=1,$$11))},$resolve$10.$$arity=-1),$alias(self,"value","resolve"),Opal.def(self,"$reject",$reject$12=function(value){var $$13;return null==value&&(value=nil),$send(Promise.reject(value),"tap",[],(($$13=function(prom){null==$$13.$$s||$$13.$$s;return null==prom&&(prom=nil),prom.$instance_variable_set("@type","reject"),prom.$instance_variable_set("@realized","reject"),prom.$instance_variable_set("@value",value)}).$$s=this,$$13.$$arity=1,$$13))},$reject$12.$$arity=-1),$alias(self,"error","reject")}(Opal.get_singleton_class(self),$nesting),self.$attr_reader("prev","next"),Opal.def(self,"$native?",$PromiseV2_native$ques$14=function(){return this.type["$!="]("opal")},$PromiseV2_native$ques$14.$$arity=0),Opal.def(self,"$nativity_check!",$PromiseV2_nativity_check$excl$15=function(){return $truthy(this["$native?"]())?this.$raise($$($nesting,"ArgumentError"),"this promise is native to JavaScript"):nil},$PromiseV2_nativity_check$excl$15.$$arity=0),Opal.def(self,"$light_nativity_check!",$PromiseV2_light_nativity_check$excl$16=function(){return $truthy(["reject","resolve","trace","always","fail","then"]["$include?"](this.type))?nil:$truthy(this["$native?"]())?this.$raise($$($nesting,"ArgumentError"),"this promise is native to JavaScript"):nil},$PromiseV2_light_nativity_check$excl$16.$$arity=0),Opal.def(self,"$there_can_be_only_one!",$PromiseV2_there_can_be_only_one$excl$17=function(){var self=this,$ret_or_1=nil;return $truthy($truthy($ret_or_1=self.next)?self.next["$any?"]():$ret_or_1)?self.$raise($$($nesting,"ArgumentError"),"a promise has already been chained"):nil},$PromiseV2_there_can_be_only_one$excl$17.$$arity=0),Opal.def(self,"$gen_tracing_proc",$PromiseV2_gen_tracing_proc$18=function(passing){var $$19,$iter=$PromiseV2_gen_tracing_proc$18.$$p,block=$iter||nil;return $iter&&($PromiseV2_gen_tracing_proc$18.$$p=null),$iter&&($PromiseV2_gen_tracing_proc$18.$$p=null),$send(this,"proc",[],(($$19=function(i){var res;null==$$19.$$s||$$19.$$s;return null==i&&(i=nil),res=passing.$call(i),Opal.yield1(block,res),res}).$$s=this,$$19.$$arity=1,$$19))},$PromiseV2_gen_tracing_proc$18.$$arity=1),Opal.def(self,"$resolve",$PromiseV2_resolve$20=function(value){return null==value&&(value=nil),this["$nativity_check!"](),$truthy(this.realized)&&this.$raise($$($nesting,"ArgumentError"),"this promise was already resolved"),this.value=value,this.realized="resolve",this.resolve_proc.$call(value),this},$PromiseV2_resolve$20.$$arity=-1),$alias(self,"resolve!","resolve"),Opal.def(self,"$reject",$PromiseV2_reject$21=function(value){return null==value&&(value=nil),this["$nativity_check!"](),$truthy(this.realized)&&this.$raise($$($nesting,"ArgumentError"),"this promise was already resolved"),this.value=value,this.realized="reject",this.reject_proc.$call(value),this},$PromiseV2_reject$21.$$arity=-1),$alias(self,"reject!","reject"),Opal.def(self,"$then",$PromiseV2_then$22=function(){var $$23,blk,$iter=$PromiseV2_then$22.$$p,block=$iter||nil,self=this,prom=nil,$ret_or_2=nil;return $iter&&($PromiseV2_then$22.$$p=null),$iter&&($PromiseV2_then$22.$$p=null),prom=nil,blk=$send(self,"gen_tracing_proc",[block],(($$23=function(val){null==$$23.$$s||$$23.$$s;return null==val&&(val=nil),prom.$instance_variable_set("@realized","resolve"),prom.$instance_variable_set("@value",val)}).$$s=self,$$23.$$arity=1,$$23)),(prom=self.then(blk)).$instance_variable_set("@prev",self),prom.$instance_variable_set("@type","then"),(self.next=$truthy($ret_or_2=self.next)?$ret_or_2:[])["$<<"](prom),prom},$PromiseV2_then$22.$$arity=0),Opal.def(self,"$then!",$PromiseV2_then$excl$24=function(){var $iter=$PromiseV2_then$excl$24.$$p,block=$iter||nil;return $iter&&($PromiseV2_then$excl$24.$$p=null),$iter&&($PromiseV2_then$excl$24.$$p=null),this["$there_can_be_only_one!"](),$send(this,"then",[],block.$to_proc())},$PromiseV2_then$excl$24.$$arity=0),$alias(self,"do","then"),$alias(self,"do!","then!"),Opal.def(self,"$fail",$PromiseV2_fail$25=function(){var $$26,blk,$iter=$PromiseV2_fail$25.$$p,block=$iter||nil,self=this,prom=nil,$ret_or_3=nil;return $iter&&($PromiseV2_fail$25.$$p=null),$iter&&($PromiseV2_fail$25.$$p=null),prom=nil,blk=$send(self,"gen_tracing_proc",[block],(($$26=function(val){null==$$26.$$s||$$26.$$s;return null==val&&(val=nil),prom.$instance_variable_set("@realized","resolve"),prom.$instance_variable_set("@value",val)}).$$s=self,$$26.$$arity=1,$$26)),(prom=self.catch(blk)).$instance_variable_set("@prev",self),prom.$instance_variable_set("@type","fail"),(self.next=$truthy($ret_or_3=self.next)?$ret_or_3:[])["$<<"](prom),prom},$PromiseV2_fail$25.$$arity=0),Opal.def(self,"$fail!",$PromiseV2_fail$excl$27=function(){var $iter=$PromiseV2_fail$excl$27.$$p,block=$iter||nil;return $iter&&($PromiseV2_fail$excl$27.$$p=null),$iter&&($PromiseV2_fail$excl$27.$$p=null),this["$there_can_be_only_one!"](),$send(this,"fail",[],block.$to_proc())},$PromiseV2_fail$excl$27.$$arity=0),$alias(self,"rescue","fail"),$alias(self,"catch","fail"),$alias(self,"rescue!","fail!"),$alias(self,"catch!","fail!"),Opal.def(self,"$always",$PromiseV2_always$28=function(){var $$29,blk,$iter=$PromiseV2_always$28.$$p,block=$iter||nil,self=this,prom=nil,$ret_or_4=nil;return $iter&&($PromiseV2_always$28.$$p=null),$iter&&($PromiseV2_always$28.$$p=null),prom=nil,blk=$send(self,"gen_tracing_proc",[block],(($$29=function(val){null==$$29.$$s||$$29.$$s;return null==val&&(val=nil),prom.$instance_variable_set("@realized","resolve"),prom.$instance_variable_set("@value",val)}).$$s=self,$$29.$$arity=1,$$29)),(prom=self.finally(blk)).$instance_variable_set("@prev",self),prom.$instance_variable_set("@type","always"),(self.next=$truthy($ret_or_4=self.next)?$ret_or_4:[])["$<<"](prom),prom},$PromiseV2_always$28.$$arity=0),Opal.def(self,"$always!",$PromiseV2_always$excl$30=function(){var $iter=$PromiseV2_always$excl$30.$$p,block=$iter||nil;return $iter&&($PromiseV2_always$excl$30.$$p=null),$iter&&($PromiseV2_always$excl$30.$$p=null),this["$there_can_be_only_one!"](),$send(this,"always",[],block.$to_proc())},$PromiseV2_always$excl$30.$$arity=0),$alias(self,"finally","always"),$alias(self,"ensure","always"),$alias(self,"finally!","always!"),$alias(self,"ensure!","always!"),Opal.def(self,"$trace",$PromiseV2_trace$31=function(depth){var $$32,$iter=$PromiseV2_trace$31.$$p,block=$iter||nil,prom=nil;return $iter&&($PromiseV2_trace$31.$$p=null),$iter&&($PromiseV2_trace$31.$$p=null),null==depth&&(depth=nil),prom=$send(this,"then",[],($$32=function(){var lhs,rhs,self=null==$$32.$$s?this:$$32.$$s,values=nil,$ret_or_5=nil,$ret_or_6=nil,val=nil;for(values=[],prom=self;$truthy((lhs=void 0,rhs=void 0,$truthy($ret_or_5=prom)?$truthy($ret_or_6=depth["$!"]())?$ret_or_6:(rhs=0,"number"==typeof(lhs=depth)&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)):$ret_or_5));){val=nil;try{val=prom.$value()}catch($err){if(!Opal.rescue($err,[$$($nesting,"ArgumentError")]))throw $err;try{val="native"}finally{Opal.pop_exception()}}values.$unshift(val),$truthy(depth)&&(depth=$rb_minus(depth,1)),prom=prom.$prev()}return Opal.yieldX(block,Opal.to_a(values))},$$32.$$s=this,$$32.$$arity=0,$$32)),prom.$instance_variable_set("@type","trace"),prom},$PromiseV2_trace$31.$$arity=-1),Opal.def(self,"$trace!",$PromiseV2_trace$excl$33=function($a){var args,$iter=$PromiseV2_trace$excl$33.$$p,block=$iter||nil,self=this;return $iter&&($PromiseV2_trace$excl$33.$$p=null),$iter&&($PromiseV2_trace$excl$33.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),self["$there_can_be_only_one!"](),$send(self,"trace",Opal.to_a(args),block.$to_proc())},$PromiseV2_trace$excl$33.$$arity=-1),Opal.def(self,"$resolved?",$PromiseV2_resolved$ques$34=function(){return this["$light_nativity_check!"](),this.realized["$=="]("resolve")},$PromiseV2_resolved$ques$34.$$arity=0),Opal.def(self,"$rejected?",$PromiseV2_rejected$ques$35=function(){return this["$light_nativity_check!"](),this.realized["$=="]("reject")},$PromiseV2_rejected$ques$35.$$arity=0),Opal.def(self,"$realized?",$PromiseV2_realized$ques$36=function(){return this["$light_nativity_check!"](),this.realized["$nil?"]()["$!"]()},$PromiseV2_realized$ques$36.$$arity=0),Opal.def(self,"$value",$PromiseV2_value$37=function(){return $truthy(this["$resolved?"]())?$truthy($$($nesting,"PromiseV2")["$==="](this.value))?this.value.$value():this.value:nil},$PromiseV2_value$37.$$arity=0),Opal.def(self,"$error",$PromiseV2_error$38=function(){return this["$light_nativity_check!"](),$truthy(this["$rejected?"]())?this.value:nil},$PromiseV2_error$38.$$arity=0),Opal.def(self,"$and",$PromiseV2_and$39=function($a){var $post_args,promises,$$40,$$41,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),promises=$send(promises=$post_args,"map",[],(($$40=function(i){null==$$40.$$s||$$40.$$s;return null==i&&(i=nil),$truthy($$($nesting,"PromiseV2")["$==="](i))?i:$$($nesting,"PromiseV2").$value(i)}).$$s=self,$$40.$$arity=1,$$40)),$send($send($$($nesting,"PromiseV2"),"when",[self].concat(Opal.to_a(promises))),"then",[],($$41=function(a,$b){var b;null==$$41.$$s||$$41.$$s;return null==a&&(a=nil),b=Opal.slice.call(arguments,1,arguments.length),[].concat(Opal.to_a(a)).concat(Opal.to_a(b))},$$41.$$s=self,$$41.$$arity=-2,$$41))},$PromiseV2_and$39.$$arity=-1),Opal.def(self,"$initialize",$PromiseV2_initialize$42=function(){var $iter=$PromiseV2_initialize$42.$$p,block=$iter||nil;return $iter&&($PromiseV2_initialize$42.$$p=null),$iter&&($PromiseV2_initialize$42.$$p=null),block!==nil?Opal.yield1(block,this):nil},$PromiseV2_initialize$42.$$arity=0),$alias(self,"to_v2","itself"),Opal.def(self,"$to_v1",$PromiseV2_to_v1$43=function(){var $$44,$$45,v1=nil;return v1=$$($nesting,"PromiseV1").$new(),$send($send(this,"then",[],(($$44=function(i){null==$$44.$$s||$$44.$$s;return null==i&&(i=nil),v1.$resolve(i)}).$$s=this,$$44.$$arity=1,$$44)),"rescue",[],(($$45=function(i){null==$$45.$$s||$$45.$$s;return null==i&&(i=nil),v1.$reject(i)}).$$s=this,$$45.$$arity=1,$$45)),v1},$PromiseV2_to_v1$43.$$arity=0),$alias(self,"to_n","itself"),Opal.def(self,"$inspect",$PromiseV2_inspect$46=function(){var self=this,result=nil,$ret_or_7=nil;return result="#<"+self.$class(),$truthy(self.type)?$truthy(["opal","resolve","reject"]["$include?"](self.type))||(result=$rb_plus(result,":"+self.type)):result=$rb_plus(result,":native"),$truthy(self.realized)&&(result=$rb_plus(result,":"+self.realized)),result=$rb_plus(result,"("+self.$object_id()+")"),$truthy($truthy($ret_or_7=self.next)?self.next["$any?"]():$ret_or_7)&&(result=$rb_plus(result," >> "+self.next.$inspect())),$truthy(self.value)&&(result=$rb_plus(result,": "+self.value.$inspect())),result=$rb_plus(result,">")},$PromiseV2_inspect$46.$$arity=0),nil&&"inspect"}($nesting[0],0,$nesting)},Opal.modules.await=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$coerce_to=Opal.coerce_to,$truthy=Opal.truthy,$klass=Opal.klass,$send=Opal.send,$module=Opal.module,$gvars=Opal.gvars,$alias=Opal.alias;Opal.add_stubs(["$warn","$require","$<","$<<","$[]","$+","$map_await","$to_proc","$when","$map","$empty?","$pop","$call","$new","$proc","$resolve","$*","$async?"]),$truthy("warning"==Opal.config.experimental_features_severity)&&self.$warn("Await functionality is a technology preview, which means it may change its behavior in the future unless this warning is removed. If you are interested in this part, please make sure you track the async/await/promises tag on Opal issues: https://github.com/opal/opal/issues?q=label%3Aasync%2Fawait%2Fpromises");var AsyncFunction=Object.getPrototypeOf((async function(){})).constructor;return self.$require("promise/v2"),function($base,$super,$parent_nesting){var $Array_map_await$1,$Array_each_await$2,self=$klass($base,null,"Array");[self].concat($parent_nesting);Opal.def(self,"$map_await",$Array_map_await$1=async function(){var lhs,rhs,$iter=$Array_map_await$1.$$p,block=$iter||nil,i=nil,results=nil;for($iter&&($Array_map_await$1.$$p=null),$iter&&($Array_map_await$1.$$p=null),i=0,results=[];$truthy((lhs=i,rhs=this.length,"number"==typeof lhs&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)));)results["$<<"](await Opal.yield1(block,this["$[]"](i))),i=$rb_plus(i,1);return results},$Array_map_await$1.$$arity=0),Opal.def(self,"$each_await",$Array_each_await$2=async function(){var $iter=$Array_each_await$2.$$p,block=$iter||nil;return $iter&&($Array_each_await$2.$$p=null),$iter&&($Array_each_await$2.$$p=null),await $send(this,"map_await",[],block.$to_proc()),this},$Array_each_await$2.$$arity=0)}($nesting[0],0,$nesting),function($base,$parent_nesting){var $Enumerable_each_async$3,self=$module($base,"Enumerable"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$each_async",$Enumerable_each_async$3=async function(){var $iter=$Enumerable_each_async$3.$$p,block=$iter||nil;return $iter&&($Enumerable_each_async$3.$$p=null),$iter&&($Enumerable_each_async$3.$$p=null),await $send($$($nesting,"PromiseV2"),"when",Opal.to_a($send(this,"map",[],block.$to_proc())))},$Enumerable_each_async$3.$$arity=0)}($nesting[0],$nesting),function($base,$parent_nesting){var $Kernel_exit$4,$Kernel_sleep$5,self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$exit",$Kernel_exit$4=async function(status){var $ret_or_1=nil,block=nil;for(null==$gvars.__at_exit__&&($gvars.__at_exit__=nil),null==status&&(status=!0),$gvars.__at_exit__=$truthy($ret_or_1=$gvars.__at_exit__)?$ret_or_1:[];!$truthy($gvars.__at_exit__["$empty?"]());)block=$gvars.__at_exit__.$pop(),await block.$call();return status=status.$$is_boolean?status?0:1:$coerce_to(status,$$($nesting,"Integer"),"to_int"),Opal.exit(status),nil},$Kernel_exit$4.$$arity=-1),Opal.def(self,"$sleep",$Kernel_sleep$5=function(seconds){var $$6,lhs,rhs,prom=nil;return prom=$$($nesting,"PromiseV2").$new(),setTimeout($send(this,"proc",[],(($$6=function(){null==$$6.$$s||$$6.$$s;return prom.$resolve()}).$$s=this,$$6.$$arity=0,$$6)),(rhs=1e3,"number"==typeof(lhs=seconds)&&"number"==typeof rhs?lhs*rhs:lhs["$*"](rhs))),prom},$Kernel_sleep$5.$$arity=1)}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Kernel");[self].concat($parent_nesting);$alias(self,"await","itself")}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Proc_async$ques$7,self=$klass($base,null,"Proc");[self].concat($parent_nesting);Opal.def(self,"$async?",$Proc_async$ques$7=function(){return this instanceof AsyncFunction},$Proc_async$ques$7.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Method_async$ques$8,self=$klass($base,null,"Method");[self].concat($parent_nesting);return self.$$prototype.method=nil,Opal.def(self,"$async?",$Method_async$ques$8=function(){return this.method["$async?"]()},$Method_async$ques$8.$$arity=0),nil&&"async?"}($nesting[0],0,$nesting)};
