Opal.modules.e2mmap=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$module=Opal.module,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$send=Opal.send,$alias=Opal.alias,$hash2=Opal.hash2,$gvars=Opal.gvars,$enc=Opal.enc;return Opal.add_stubs(["$<","$bind","$module_eval","$Raise","$class","$extend","$def_e2message","$def_exception","$instance_eval","$[]=","$-","$new","$const_defined?","$remove_const","$const_set","$e2mm_message","$nil?","$caller","$=~","$[]","$quote","$shift","$raise","$sprintf","$Fail","$inspect","$each","$ancestors"]),function($base,$parent_nesting){var $Exception2MessageMapper_extend_object$1,$Exception2MessageMapper_bind$2,$Exception2MessageMapper_Raise$6,$Exception2MessageMapper_def_e2message$7,$Exception2MessageMapper_def_exception$8,$Exception2MessageMapper_def_e2message$9,$Exception2MessageMapper_def_exception$11,$Exception2MessageMapper_Raise$14,$Exception2MessageMapper_e2mm_message$15,self=$module($base,"Exception2MessageMapper"),$nesting=[self].concat($parent_nesting);return Opal.const_set($nesting[0],"E2MM",$$($nesting,"Exception2MessageMapper")),Opal.defs($$($nesting,"E2MM"),"$extend_object",$Exception2MessageMapper_extend_object$1=function(cl){var lhs,rhs,$iter=$Exception2MessageMapper_extend_object$1.$$p;return $iter&&($Exception2MessageMapper_extend_object$1.$$p=null),$send2(this,$find_super(this,"extend_object",$Exception2MessageMapper_extend_object$1,!1,!0),"extend_object",[cl],$iter),$truthy((lhs=cl,rhs=$$($nesting,"E2MM"),"number"==typeof lhs&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)))?nil:cl.$bind(this)},$Exception2MessageMapper_extend_object$1.$$arity=1),Opal.def(self,"$bind",$Exception2MessageMapper_bind$2=function(cl){var $$3;return $send(this,"module_eval",[],($$3=function(){var $Raise$4,$included$5,self=null==$$3.$$s?this:$$3.$$s;return Opal.def(self,"$Raise",$Raise$4=function($a,$b){var $post_args,err,rest,self=this;return($post_args=Opal.slice.call(arguments,0,arguments.length)).length>0&&(err=$post_args[0],$post_args.splice(0,1)),null==err&&(err=nil),rest=$post_args,$send($$($nesting,"Exception2MessageMapper"),"Raise",[self.$class(),err].concat(Opal.to_a(rest)))},$Raise$4.$$arity=-1),$alias(self,"Fail","Raise"),function(self,$parent_nesting){[self].concat($parent_nesting);Opal.udef(self,"$included")}(Opal.get_singleton_class(self),$nesting),Opal.defs(self,"$included",$included$5=function(mod){return mod.$extend($$($nesting,"Exception2MessageMapper"))},$included$5.$$arity=1),nil&&"included"},$$3.$$s=this,$$3.$$arity=0,$$3))},$Exception2MessageMapper_bind$2.$$arity=1),Opal.def(self,"$Raise",$Exception2MessageMapper_Raise$6=function($a,$b){var $post_args,err,rest,self=this;return($post_args=Opal.slice.call(arguments,0,arguments.length)).length>0&&(err=$post_args[0],$post_args.splice(0,1)),null==err&&(err=nil),rest=$post_args,$send($$($nesting,"E2MM"),"Raise",[self,err].concat(Opal.to_a(rest)))},$Exception2MessageMapper_Raise$6.$$arity=-1),$alias(self,"Fail","Raise"),$alias(self,"fail","Raise"),Opal.def(self,"$def_e2message",$Exception2MessageMapper_def_e2message$7=function(c,m){return $$($nesting,"E2MM").$def_e2message(this,c,m)},$Exception2MessageMapper_def_e2message$7.$$arity=2),Opal.def(self,"$def_exception",$Exception2MessageMapper_def_exception$8=function(n,m,s){return null==s&&(s=$$($nesting,"StandardError")),$$($nesting,"E2MM").$def_exception(this,n,m,s)},$Exception2MessageMapper_def_exception$8.$$arity=-3),self.MessageMap=$hash2([],{}),Opal.defs($$($nesting,"E2MM"),"$def_e2message",$Exception2MessageMapper_def_e2message$9=function(k,c,m){var $$10;return $send($$($nesting,"E2MM"),"instance_eval",[],($$10=function(){var $writer,self=null==$$10.$$s?this:$$10.$$s;return null==self.MessageMap&&(self.MessageMap=nil),$writer=[[k,c],m],$send(self.MessageMap,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},$$10.$$s=this,$$10.$$arity=0,$$10)),c},$Exception2MessageMapper_def_e2message$9.$$arity=3),Opal.defs($$($nesting,"E2MM"),"$def_exception",$Exception2MessageMapper_def_exception$11=function(k,n,m,s){var $$12,$$13,e;return null==s&&(s=$$($nesting,"StandardError")),e=$$($nesting,"Class").$new(s),$send($$($nesting,"E2MM"),"instance_eval",[],($$12=function(){var $writer,self=null==$$12.$$s?this:$$12.$$s;return null==self.MessageMap&&(self.MessageMap=nil),$writer=[[k,e],m],$send(self.MessageMap,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},$$12.$$s=this,$$12.$$arity=0,$$12)),$truthy(k["$const_defined?"](n,!1))&&$send(k,"module_eval",[],(($$13=function(){return(null==$$13.$$s?this:$$13.$$s).$remove_const(n)}).$$s=this,$$13.$$arity=0,$$13)),k.$const_set(n,e)},$Exception2MessageMapper_def_exception$11.$$arity=-4),Opal.defs($$($nesting,"E2MM"),"$Raise",$Exception2MessageMapper_Raise$14=function($a,$b,$c){var $post_args,klass,err,rest,self=this,form=nil,b=nil;return null==$gvars["@"]&&($gvars["@"]=nil),($post_args=Opal.slice.call(arguments,0,arguments.length)).length>0&&(klass=$post_args[0],$post_args.splice(0,1)),null==klass&&(klass=$$($nesting,"E2MM")),$post_args.length>0&&(err=$post_args[0],$post_args.splice(0,1)),null==err&&(err=nil),rest=$post_args,$truthy(form=self.$e2mm_message(klass,err))?(b=$truthy($gvars["@"]["$nil?"]())?self.$caller(1):$gvars["@"],$truthy(b["$[]"](0)["$=~"](Opal.regexp(["^",$$($nesting,"Regexp").$quote($enc("./e2mmap.rb","US-ASCII")),":"])))&&b.$shift(),self.$raise(err,$send(self,"sprintf",[form].concat(Opal.to_a(rest))),b)):$$($nesting,"E2MM").$Fail($$($nesting,"E2MM"),$$($nesting,"ErrNotRegisteredException"),err.$inspect())},$Exception2MessageMapper_Raise$14.$$arity=-1),function(self,$parent_nesting){[self].concat($parent_nesting);$alias(self,"Fail","Raise")}(Opal.get_singleton_class($$($nesting,"E2MM")),$nesting),Opal.defs($$($nesting,"E2MM"),"$e2mm_message",$Exception2MessageMapper_e2mm_message$15=function(klass,exp){try{var $$16;return $send(klass.$ancestors(),"each",[],($$16=function(c){var mes,self=null==$$16.$$s?this:$$16.$$s;if(null==self.MessageMap&&(self.MessageMap=nil),null==c&&(c=nil),!$truthy(mes=self.MessageMap["$[]"]([c,exp])))return nil;Opal.ret(mes)},$$16.$$s=this,$$16.$$arity=1,$$16)),nil}catch($returner){if($returner===Opal.returner)return $returner.$v;throw $returner}},$Exception2MessageMapper_e2mm_message$15.$$arity=2),function(self,$parent_nesting){[self].concat($parent_nesting);$alias(self,"message","e2mm_message")}(Opal.get_singleton_class(self),$nesting),$$($nesting,"E2MM").$def_exception($$($nesting,"E2MM"),"ErrNotRegisteredException","not registered exception(%s)")}($nesting[0],$nesting)};
