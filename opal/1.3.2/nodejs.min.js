Opal.modules.native=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$module=Opal.module,$truthy=Opal.truthy,$send=Opal.send,$hash2=Opal.hash2,$range=Opal.range,$alias=Opal.alias,$klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$gvars=Opal.gvars;return Opal.add_stubs(["$try_convert","$native?","$respond_to?","$to_n","$raise","$inspect","$Native","$proc","$map!","$end_with?","$define_method","$[]","$convert","$call","$to_proc","$new","$each","$native_reader","$native_writer","$extend","$warn","$include","$is_a?","$map","$to_a","$_Array","$method_missing","$bind","$instance_method","$slice","$-","$length","$[]=","$enum_for","$===","$>=","$<<","$each_pair","$method_defined?","$_initialize","$name","$native_module"]),function($base,$parent_nesting){var $Native_is_a$ques$1,$Native_try_convert$2,$Native_convert$3,$Native_call$4,$Native_proc$5,$Native_included$22,self=$module($base,"Native"),$nesting=[self].concat($parent_nesting);Opal.defs(self,"$is_a?",$Native_is_a$ques$1=function(object,klass){try{return object instanceof this.$try_convert(klass)}catch(e){return!1}},$Native_is_a$ques$1.$$arity=2),Opal.defs(self,"$try_convert",$Native_try_convert$2=function(value,default$){return null==default$&&(default$=nil),this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():default$},$Native_try_convert$2.$$arity=-2),Opal.defs(self,"$convert",$Native_convert$3=function(value){return this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():void this.$raise($$($nesting,"ArgumentError"),value.$inspect()+" isn't native")},$Native_convert$3.$$arity=1),Opal.defs(self,"$call",$Native_call$4=function(obj,key,$a){var args,$iter=$Native_call$4.$$p,block=$iter||nil,self=this;$iter&&($Native_call$4.$$p=null),$iter&&($Native_call$4.$$p=null),args=Opal.slice.call(arguments,2,arguments.length);var prop=obj[key];if(prop instanceof Function){for(var converted=new Array(args.length),i=0,l=args.length;i<l;i++){var item=args[i],conv=self.$try_convert(item);converted[i]=conv===nil?item:conv}return block!==nil&&converted.push(block),self.$Native(prop.apply(obj,converted))}return self.$Native(prop)},$Native_call$4.$$arity=-3),Opal.defs(self,"$proc",$Native_proc$5=function(){var $$6,$iter=$Native_proc$5.$$p,block=$iter||nil;return $iter&&($Native_proc$5.$$p=null),$iter&&($Native_proc$5.$$p=null),$truthy(block)||this.$raise($$($nesting,"LocalJumpError"),"no block given"),$send($$$("::","Kernel"),"proc",[],($$6=function($a){var $post_args,args,$$7,self=null==$$6.$$s?this:$$6.$$s,instance=nil;if($post_args=Opal.slice.call(arguments,0,arguments.length),$send(args=$post_args,"map!",[],($$7=function(arg){var self=null==$$7.$$s?this:$$7.$$s;return null==arg&&(arg=nil),self.$Native(arg)},$$7.$$s=self,$$7.$$arity=1,$$7)),instance=self.$Native(this),this===Opal.global)return block.apply(self,args);var self_=block.$$s;block.$$s=null;try{return block.apply(instance,args)}finally{block.$$s=self_}},$$6.$$s=this,$$6.$$arity=-1,$$6))},$Native_proc$5.$$arity=0),function($base,$parent_nesting){var $Helpers_alias_native$8,$Helpers_native_reader$12,$Helpers_native_writer$15,$Helpers_native_accessor$18,self=$module($base,"Helpers"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$alias_native",$Helpers_alias_native$8=function(new$,$a,$b){var $post_args,$kwargs,old,as,$$9,$$10,$$11,$iter=$Helpers_alias_native$8.$$p,self=this;if($iter&&($Helpers_alias_native$8.$$p=null),$post_args=Opal.slice.call(arguments,1,arguments.length),null==($kwargs=Opal.extract_kwargs($post_args)))$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return $post_args.length>0&&(old=$post_args[0],$post_args.splice(0,1)),null==old&&(old=new$),null==(as=$kwargs.$$smap.as)&&(as=nil),$truthy(old["$end_with?"]("="))?$send(self,"define_method",[new$],($$9=function(value){var self=null==$$9.$$s?this:$$9.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.native[old["$[]"]($range(0,-2,!1))]=$$($nesting,"Native").$convert(value),value},$$9.$$s=self,$$9.$$arity=1,$$9)):$truthy(as)?$send(self,"define_method",[new$],($$10=function($c){var args,self=null==$$10.$$s?this:$$10.$$s,$iter=$$10.$$p,block=$iter||nil,value=nil;return null==self.native&&(self.native=nil),$iter&&($$10.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),value=$send($$($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc()),$truthy(value)?as.$new(value.$to_n()):nil},$$10.$$s=self,$$10.$$arity=-1,$$10)):$send(self,"define_method",[new$],($$11=function($c){var args,self=null==$$11.$$s?this:$$11.$$s,$iter=$$11.$$p,block=$iter||nil;return null==self.native&&(self.native=nil),$iter&&($$11.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),$send($$($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc())},$$11.$$s=self,$$11.$$arity=-1,$$11))},$Helpers_alias_native$8.$$arity=-2),Opal.def(self,"$native_reader",$Helpers_native_reader$12=function($a){var $post_args,$$13,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),$send($post_args,"each",[],($$13=function(name){var $$14,self=null==$$13.$$s?this:$$13.$$s;return null==name&&(name=nil),$send(self,"define_method",[name],($$14=function(){var self=null==$$14.$$s?this:$$14.$$s;return null==self.native&&(self.native=nil),self.$Native(self.native[name])},$$14.$$s=self,$$14.$$arity=0,$$14))},$$13.$$s=self,$$13.$$arity=1,$$13))},$Helpers_native_reader$12.$$arity=-1),Opal.def(self,"$native_writer",$Helpers_native_writer$15=function($a){var $post_args,$$16,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),$send($post_args,"each",[],($$16=function(name){var $$17,self=null==$$16.$$s?this:$$16.$$s;return null==name&&(name=nil),$send(self,"define_method",[name+"="],($$17=function(value){var self=null==$$17.$$s?this:$$17.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.$Native(self.native[name]=value)},$$17.$$s=self,$$17.$$arity=1,$$17))},$$16.$$s=self,$$16.$$arity=1,$$16))},$Helpers_native_writer$15.$$arity=-1),Opal.def(self,"$native_accessor",$Helpers_native_accessor$18=function($a){var names,self=this;return names=Opal.slice.call(arguments,0,arguments.length),$send(self,"native_reader",Opal.to_a(names)),$send(self,"native_writer",Opal.to_a(names))},$Helpers_native_accessor$18.$$arity=-1)}($nesting[0],$nesting),function($base,$parent_nesting){var $Wrapper_initialize$19,$Wrapper_to_n$20,$Wrapper_included$21,self=$module($base,"Wrapper"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$initialize",$Wrapper_initialize$19=function(native$){return $truthy($$$("::","Kernel")["$native?"](native$))||$$$("::","Kernel").$raise($$($nesting,"ArgumentError"),native$.$inspect()+" isn't native"),this.native=native$},$Wrapper_initialize$19.$$arity=1),Opal.def(self,"$to_n",$Wrapper_to_n$20=function(){return null==this.native&&(this.native=nil),this.native},$Wrapper_to_n$20.$$arity=0),Opal.defs(self,"$included",$Wrapper_included$21=function(klass){return klass.$extend($$($nesting,"Helpers"))},$Wrapper_included$21.$$arity=1)}($nesting[0],$nesting),Opal.defs(self,"$included",$Native_included$22=function(base){return this.$warn("Including ::Native is deprecated. Please include Native::Wrapper instead."),base.$include($$($nesting,"Wrapper"))},$Native_included$22.$$arity=1)}($nesting[0],$nesting),function($base,$parent_nesting){var $Kernel_native$ques$23,$Kernel_Native$24,$Kernel_Array$27,self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$native?",$Kernel_native$ques$23=function(value){return null==value||!value.$$class},$Kernel_native$ques$23.$$arity=1),Opal.def(self,"$Native",$Kernel_Native$24=function(obj){var $$25,$$26,$iter=$Kernel_Native$24.$$p;return $iter&&($Kernel_Native$24.$$p=null),$truthy(null==obj)?nil:$truthy(this["$native?"](obj))?$$$($$($nesting,"Native"),"Object").$new(obj):$truthy(obj["$is_a?"]($$($nesting,"Array")))?$send(obj,"map",[],($$25=function(o){var self=null==$$25.$$s?this:$$25.$$s;return null==o&&(o=nil),self.$Native(o)},$$25.$$s=this,$$25.$$arity=1,$$25)):$truthy(obj["$is_a?"]($$($nesting,"Proc")))?$send(this,"proc",[],($$26=function($a){var args,self=null==$$26.$$s?this:$$26.$$s,$iter=$$26.$$p,block=$iter||nil;return $iter&&($$26.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),self.$Native($send(obj,"call",Opal.to_a(args),block.$to_proc()))},$$26.$$s=this,$$26.$$arity=-1,$$26)):obj},$Kernel_Native$24.$$arity=1),$alias(self,"_Array","Array"),Opal.def(self,"$Array",$Kernel_Array$27=function(object,$a){var args,$iter=$Kernel_Array$27.$$p,block=$iter||nil,self=this;return $iter&&($Kernel_Array$27.$$p=null),$iter&&($Kernel_Array$27.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),$truthy(self["$native?"](object))?$send($$$($$($nesting,"Native"),"Array"),"new",[object].concat(Opal.to_a(args)),block.$to_proc()).$to_a():self.$_Array(object)},$Kernel_Array$27.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Object_$eq_eq$28,$Object_has_key$ques$29,$Object_each$30,$Object_$$$31,$Object_$$$eq$32,$Object_merge$excl$33,$Object_respond_to$ques$34,$Object_respond_to_missing$ques$35,$Object_method_missing$36,$Object_nil$ques$37,$Object_is_a$ques$38,$Object_instance_of$ques$39,$Object_class$40,$Object_to_a$41,$Object_inspect$42,self=$klass($base,$super,"Object");[self].concat($parent_nesting);self.$$prototype.native=nil,self.$include($$$($$$("::","Native"),"Wrapper")),Opal.def(self,"$==",$Object_$eq_eq$28=function(other){return this.native===$$$("::","Native").$try_convert(other)},$Object_$eq_eq$28.$$arity=1),Opal.def(self,"$has_key?",$Object_has_key$ques$29=function(name){return Opal.hasOwnProperty.call(this.native,name)},$Object_has_key$ques$29.$$arity=1),$alias(self,"key?","has_key?"),$alias(self,"include?","has_key?"),$alias(self,"member?","has_key?"),Opal.def(self,"$each",$Object_each$30=function($a){var args,$iter=$Object_each$30.$$p,$yield=$iter||nil,self=this;if($iter&&($Object_each$30.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),$yield!==nil){for(var key in self.native)Opal.yieldX($yield,[key,self.native[key]]);return self}return $send(self,"method_missing",["each"].concat(Opal.to_a(args)))},$Object_each$30.$$arity=-1),Opal.def(self,"$[]",$Object_$$$31=function(key){var prop=this.native[key];return prop instanceof Function?prop:$$$("::","Native").$call(this.native,key)},$Object_$$$31.$$arity=1),Opal.def(self,"$[]=",$Object_$$$eq$32=function(key,value){var native$;return native$=$$$("::","Native").$try_convert(value),$truthy(native$===nil)?this.native[key]=value:this.native[key]=native$},$Object_$$$eq$32.$$arity=2),Opal.def(self,"$merge!",$Object_merge$excl$33=function(other){for(var prop in other=$$$("::","Native").$convert(other))this.native[prop]=other[prop];return this},$Object_merge$excl$33.$$arity=1),Opal.def(self,"$respond_to?",$Object_respond_to$ques$34=function(name,include_all){return null==include_all&&(include_all=!1),$$$("::","Kernel").$instance_method("respond_to?").$bind(this).$call(name,include_all)},$Object_respond_to$ques$34.$$arity=-2),Opal.def(self,"$respond_to_missing?",$Object_respond_to_missing$ques$35=function(name,include_all){return null==include_all&&(include_all=!1),Opal.hasOwnProperty.call(this.native,name)},$Object_respond_to_missing$ques$35.$$arity=-2),Opal.def(self,"$method_missing",$Object_method_missing$36=function(mid,$a){var args,$iter=$Object_method_missing$36.$$p,block=$iter||nil,self=this,$writer=nil;return $iter&&($Object_method_missing$36.$$p=null),$iter&&($Object_method_missing$36.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),"="===mid.charAt(mid.length-1)?($writer=[mid.$slice(0,$rb_minus(mid.$length(),1)),args["$[]"](0)],$send(self,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]):$send($$$("::","Native"),"call",[self.native,mid].concat(Opal.to_a(args)),block.$to_proc())},$Object_method_missing$36.$$arity=-2),Opal.def(self,"$nil?",$Object_nil$ques$37=function(){return!1},$Object_nil$ques$37.$$arity=0),Opal.def(self,"$is_a?",$Object_is_a$ques$38=function(klass){return Opal.is_a(this,klass)},$Object_is_a$ques$38.$$arity=1),$alias(self,"kind_of?","is_a?"),Opal.def(self,"$instance_of?",$Object_instance_of$ques$39=function(klass){return this.$$class===klass},$Object_instance_of$ques$39.$$arity=1),Opal.def(self,"$class",$Object_class$40=function(){return this.$$class},$Object_class$40.$$arity=0),Opal.def(self,"$to_a",$Object_to_a$41=function(options){var $iter=$Object_to_a$41.$$p,block=$iter||nil;return $iter&&($Object_to_a$41.$$p=null),$iter&&($Object_to_a$41.$$p=null),null==options&&(options=$hash2([],{})),$send($$$($$$("::","Native"),"Array"),"new",[this.native,options],block.$to_proc()).$to_a()},$Object_to_a$41.$$arity=-1),Opal.def(self,"$inspect",$Object_inspect$42=function(){return"#<Native:"+String(this.native)+">"},$Object_inspect$42.$$arity=0)}($$($nesting,"Native"),$$($nesting,"BasicObject"),$nesting),function($base,$super,$parent_nesting){var $Array_initialize$43,$Array_each$44,$Array_$$$45,$Array_$$$eq$46,$Array_last$47,$Array_length$48,$Array_inspect$49,self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting);self.$$prototype.named=self.$$prototype.native=self.$$prototype.get=self.$$prototype.block=self.$$prototype.set=self.$$prototype.length=nil,self.$include($$$($$($nesting,"Native"),"Wrapper")),self.$include($$($nesting,"Enumerable")),Opal.def(self,"$initialize",$Array_initialize$43=function(native$,options){var $iter=$Array_initialize$43.$$p,block=$iter||nil,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil;return $iter&&($Array_initialize$43.$$p=null),$iter&&($Array_initialize$43.$$p=null),null==options&&(options=$hash2([],{})),$send2(this,$find_super(this,"initialize",$Array_initialize$43,!1,!0),"initialize",[native$],null),this.get=$truthy($ret_or_1=options["$[]"]("get"))?$ret_or_1:options["$[]"]("access"),this.named=options["$[]"]("named"),this.set=$truthy($ret_or_2=options["$[]"]("set"))?$ret_or_2:options["$[]"]("access"),this.length=$truthy($ret_or_3=options["$[]"]("length"))?$ret_or_3:"length",this.block=block,$truthy(null==this.$length())?this.$raise($$($nesting,"ArgumentError"),"no length found on the array-like object"):nil},$Array_initialize$43.$$arity=-2),Opal.def(self,"$each",$Array_each$44=function(){var $iter=$Array_each$44.$$p,block=$iter||nil;if($iter&&($Array_each$44.$$p=null),$iter&&($Array_each$44.$$p=null),!$truthy(block))return this.$enum_for("each");for(var i=0,length=this.$length();i<length;i++)Opal.yield1(block,this["$[]"](i));return this},$Array_each$44.$$arity=0),Opal.def(self,"$[]",$Array_$$$45=function(index){var self=this,result=nil,$case=nil;return $case=index,result=$$($nesting,"String")["$==="]($case)||$$($nesting,"Symbol")["$==="]($case)?$truthy(self.named)?self.native[self.named](index):self.native[index]:$$($nesting,"Integer")["$==="]($case)?$truthy(self.get)?self.native[self.get](index):self.native[index]:nil,$truthy(result)?$truthy(self.block)?self.block.$call(result):self.$Native(result):nil},$Array_$$$45.$$arity=1),Opal.def(self,"$[]=",$Array_$$$eq$46=function(index,value){return $truthy(this.set)?this.native[this.set](index,$$($nesting,"Native").$convert(value)):this.native[index]=$$($nesting,"Native").$convert(value)},$Array_$$$eq$46.$$arity=2),Opal.def(self,"$last",$Array_last$47=function(count){var lhs,rhs,index=nil,result=nil;if(null==count&&(count=nil),$truthy(count)){for(index=$rb_minus(this.$length(),1),result=[];$truthy((rhs=0,"number"==typeof(lhs=index)&&"number"==typeof rhs?lhs>=rhs:lhs["$>="](rhs)));)result["$<<"](this["$[]"](index)),index=$rb_minus(index,1);return result}return this["$[]"]($rb_minus(this.$length(),1))},$Array_last$47.$$arity=-1),Opal.def(self,"$length",$Array_length$48=function(){return this.native[this.length]},$Array_length$48.$$arity=0),$alias(self,"to_ary","to_a"),Opal.def(self,"$inspect",$Array_inspect$49=function(){return this.$to_a().$inspect()},$Array_inspect$49.$$arity=0)}($$($nesting,"Native"),0,$nesting),function($base,$super,$parent_nesting){var $Numeric_to_n$50,self=$klass($base,null,"Numeric");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Numeric_to_n$50=function(){return this.valueOf()},$Numeric_to_n$50.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Proc_to_n$51,self=$klass($base,null,"Proc");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Proc_to_n$51=function(){return this},$Proc_to_n$51.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $String_to_n$52,self=$klass($base,null,"String");[self].concat($parent_nesting);Opal.def(self,"$to_n",$String_to_n$52=function(){return this.valueOf()},$String_to_n$52.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Regexp_to_n$53,self=$klass($base,null,"Regexp");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Regexp_to_n$53=function(){return this.valueOf()},$Regexp_to_n$53.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $MatchData_to_n$54,self=$klass($base,null,"MatchData");[self].concat($parent_nesting);self.$$prototype.matches=nil,Opal.def(self,"$to_n",$MatchData_to_n$54=function(){return this.matches},$MatchData_to_n$54.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Struct_to_n$55,self=$klass($base,null,"Struct"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$to_n",$Struct_to_n$55=function(){var $$56,result=nil;return result={},$send(this,"each_pair",[],(($$56=function(name,value){null==$$56.$$s||$$56.$$s;return null==name&&(name=nil),null==value&&(value=nil),result[name]=$$($nesting,"Native").$try_convert(value,value)}).$$s=this,$$56.$$arity=2,$$56)),result},$Struct_to_n$55.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Array_to_n$57,self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$to_n",$Array_to_n$57=function(){for(var result=[],i=0,length=this.length;i<length;i++){var obj=this[i];result.push($$($nesting,"Native").$try_convert(obj,obj))}return result},$Array_to_n$57.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Boolean_to_n$58,self=$klass($base,null,"Boolean");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Boolean_to_n$58=function(){return this.valueOf()},$Boolean_to_n$58.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Time_to_n$59,self=$klass($base,null,"Time");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Time_to_n$59=function(){return this},$Time_to_n$59.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $NilClass_to_n$60,self=$klass($base,null,"NilClass");[self].concat($parent_nesting);Opal.def(self,"$to_n",$NilClass_to_n$60=function(){return null},$NilClass_to_n$60.$$arity=0)}($nesting[0],0,$nesting),$truthy($$($nesting,"Hash")["$method_defined?"]("_initialize"))||function($base,$super,$parent_nesting){var $Hash_initialize$61,$Hash_to_n$62,self=$klass($base,null,"Hash"),$nesting=[self].concat($parent_nesting);$alias(self,"_initialize","initialize"),Opal.def(self,"$initialize",$Hash_initialize$61=function(defaults){var $iter=$Hash_initialize$61.$$p,block=$iter||nil,self=this;if($iter&&($Hash_initialize$61.$$p=null),$iter&&($Hash_initialize$61.$$p=null),null!=defaults&&(void 0===defaults.constructor||defaults.constructor===Object)){var key,value,smap=self.$$smap,keys=self.$$keys;for(key in defaults)!(value=defaults[key])||void 0!==value.constructor&&value.constructor!==Object?value&&value.$$is_array?(value=value.map((function(item){return!item||void 0!==item.constructor&&item.constructor!==Object?self.$Native(item):$$($nesting,"Hash").$new(item)})),smap[key]=value):smap[key]=self.$Native(value):smap[key]=$$($nesting,"Hash").$new(value),keys.push(key);return self}return $send(self,"_initialize",[defaults],block.$to_proc())},$Hash_initialize$61.$$arity=-1),Opal.def(self,"$to_n",$Hash_to_n$62=function(){for(var key,value,result={},keys=this.$$keys,smap=this.$$smap,i=0,length=keys.length;i<length;i++)value=(key=keys[i]).$$is_string?smap[key]:(key=key.key).value,result[key]=$$($nesting,"Native").$try_convert(value,value);return result},$Hash_to_n$62.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Module_native_module$63,self=$klass($base,null,"Module");[self].concat($parent_nesting);Opal.def(self,"$native_module",$Module_native_module$63=function(){return Opal.global[this.$name()]=this},$Module_native_module$63.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Class_native_alias$64,$Class_native_class$65,self=$klass($base,null,"Class"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$native_alias",$Class_native_alias$64=function(new_jsid,existing_mid){var aliased=this.prototype["$"+existing_mid];aliased||this.$raise($$($nesting,"NameError").$new("undefined method `"+existing_mid+"' for class `"+this.$inspect()+"'",existing_mid)),this.prototype[new_jsid]=aliased},$Class_native_alias$64.$$arity=2),Opal.def(self,"$native_class",$Class_native_class$65=function(){return this.$native_module(),this.new=this.$new},$Class_native_class$65.$$arity=0)}($nesting[0],0,$nesting),$gvars.$=$gvars.global=self.$Native(Opal.global)},Opal.modules["nodejs/kernel"]=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$module=Opal.module,$hash2=Opal.hash2,$truthy=Opal.truthy,$gvars=Opal.gvars,$klass=Opal.klass;return Opal.add_stubs(["$require","$warn","$to_str","$is_a?","$first","$shift","$to_n","$merge","$empty?","$===","$[]","$new","$!=","$raise","$==","$encode","$to_s","$attr_reader"]),self.$require("native"),Opal.exit=process.exit,function($base,$parent_nesting){var $Kernel_node_require$1,$Kernel_system$2,$Kernel_$$3,self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting);null==self.__child_process__&&(self.__child_process__=nil),Opal.const_set($nesting[0],"NODE_REQUIRE",require),self.__child_process__=require("child_process");var __child_process__=self.__child_process__;Opal.def(self,"$node_require",$Kernel_node_require$1=function(path){return this.$warn("[DEPRECATION] node_require is deprecated. Please use `require('module')` instead."),$$($nesting,"NODE_REQUIRE")(path.$to_str())},$Kernel_node_require$1.$$arity=1),Opal.def(self,"$system",$Kernel_system$2=function($a,$b){var $post_args,$kwargs,argv,exception,self=this,env=nil,cmdname=nil,out=nil,status=nil,pid=nil,$ret_or_1=nil;if($post_args=Opal.slice.call(arguments,0,arguments.length),null==($kwargs=Opal.extract_kwargs($post_args)))$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return argv=$post_args,null==(exception=$kwargs.$$smap.exception)&&(exception=!1),env=$hash2([],{}),$truthy(argv.$first()["$is_a?"]($$($nesting,"Hash")))&&(env=argv.$shift()),env=$$($nesting,"ENV").$merge(env).$to_n(),cmdname=argv.$shift(),out=$truthy(argv["$empty?"]())?__child_process__.spawnSync(cmdname,{shell:!0,stdio:"inherit",env:env}):$truthy($$($nesting,"Array")["$==="](cmdname))?__child_process__.spawnSync(cmdname["$[]"](0),argv,{argv0:cmdname["$[]"](1),stdio:"inherit",env:env}):__child_process__.spawnSync(cmdname,argv,{stdio:"inherit",env:env}),status=out.status,$truthy(null===status)&&(status=127),pid=out.pid,$gvars["?"]=$$$($$($nesting,"Process"),"Status").$new(status,pid),$truthy($truthy($ret_or_1=exception)?status["$!="](0):$ret_or_1)&&self.$raise("Command failed with exit "+status+": "+cmdname),status["$=="](0)},$Kernel_system$2.$$arity=-1),Opal.def(self,"$`",$Kernel_$$3=function(cmdline){return $$($nesting,"Buffer").$new(__child_process__.execSync(cmdline)).$to_s().$encode("UTF-8")},$Kernel_$$3.$$arity=1)}($nesting[0],$nesting),function($base,$parent_nesting){var $nesting=[$module($base,"Process")].concat($parent_nesting);(function($base,$super,$parent_nesting){var $Status_initialize$4,$Status_exitstatus$5,$Status_success$ques$6,$Status_inspect$7,self=$klass($base,null,"Status");[self].concat($parent_nesting);self.$$prototype.status=self.$$prototype.pid=nil,Opal.def(self,"$initialize",$Status_initialize$4=function(status,pid){var $a;return $a=[status,pid],this.status=$a[0],this.pid=$a[1],$a},$Status_initialize$4.$$arity=2),Opal.def(self,"$exitstatus",$Status_exitstatus$5=function(){return this.status},$Status_exitstatus$5.$$arity=0),self.$attr_reader("pid"),Opal.def(self,"$success?",$Status_success$ques$6=function(){return this.status["$=="](0)},$Status_success$ques$6.$$arity=0),Opal.def(self,"$inspect",$Status_inspect$7=function(){return"#<Process::Status: pid "+this.pid+" exit "+this.status+">"},$Status_inspect$7.$$arity=0)})($nesting[0],0,$nesting)}($nesting[0],$nesting),Opal.const_set($nesting[0],"ARGV",process.argv.slice(2)),$$($nesting,"ARGV").$first()["$=="]("--")?$$($nesting,"ARGV").$shift():nil},Opal.modules["corelib/file"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$truthy=Opal.truthy,$klass=Opal.klass,$alias=Opal.alias,$range=Opal.range,$send=Opal.send;return Opal.add_stubs(["$respond_to?","$to_path","$pwd","$split","$sub","$+","$unshift","$join","$home","$raise","$start_with?","$absolute_path","$coerce_to!","$basename","$empty?","$rindex","$[]","$nil?","$==","$-","$length","$gsub","$find","$=~","$map","$each_with_index","$flatten","$reject","$to_proc","$end_with?"]),function($base,$super,$parent_nesting){var self=$klass($base,$super,"File"),$nesting=[self].concat($parent_nesting),windows_root_rx=nil;return Opal.const_set($nesting[0],"Separator",Opal.const_set($nesting[0],"SEPARATOR","/")),Opal.const_set($nesting[0],"ALT_SEPARATOR",nil),Opal.const_set($nesting[0],"PATH_SEPARATOR",":"),Opal.const_set($nesting[0],"FNM_SYSCASE",0),windows_root_rx=/^[a-zA-Z]:(?:\\|\/)/,function(self,$parent_nesting){var $absolute_path$1,$expand_path$2,$dirname$3,$basename$4,$extname$5,$exist$ques$6,$directory$ques$7,$join$9,$split$12,$nesting=[self].concat($parent_nesting);function $coerce_to_path(path){return $truthy(path["$respond_to?"]("to_path"))&&(path=path.$to_path()),path=$$($nesting,"Opal")["$coerce_to!"](path,$$($nesting,"String"),"to_str")}function $sep_chars(){return $$($nesting,"ALT_SEPARATOR")===nil?Opal.escape_regexp($$($nesting,"SEPARATOR")):Opal.escape_regexp($rb_plus($$($nesting,"SEPARATOR"),$$($nesting,"ALT_SEPARATOR")))}return Opal.def(self,"$absolute_path",$absolute_path$1=function(path,basedir){var sep,sep_chars,path_abs,basedir_abs,part,new_parts=nil,$ret_or_1=nil,parts=nil,leading_sep=nil,abs=nil,new_path=nil;null==basedir&&(basedir=nil),sep=$$($nesting,"SEPARATOR"),sep_chars=$sep_chars(),new_parts=[],path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path,basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$($nesting,"Dir").$pwd(),path_abs=path.substr(0,sep.length)===sep||windows_root_rx.test(path),basedir_abs=basedir.substr(0,sep.length)===sep||windows_root_rx.test(basedir),$truthy(path_abs)?(parts=path.$split(Opal.regexp(["[",sep_chars,"]"])),leading_sep=windows_root_rx.test(path)?"":path.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=!0):(parts=$rb_plus(basedir.$split(Opal.regexp(["[",sep_chars,"]"])),path.$split(Opal.regexp(["[",sep_chars,"]"]))),leading_sep=windows_root_rx.test(basedir)?"":basedir.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=basedir_abs);for(var i=0,ii=parts.length;i<ii;i++)(part=parts[i])===nil||""===part&&(0===new_parts.length||abs)||"."===part&&(0===new_parts.length||abs)||(".."===part?new_parts.pop():new_parts.push(part));return abs||"."===parts[0]||new_parts.$unshift("."),new_path=new_parts.$join(sep),$truthy(abs)&&(new_path=$rb_plus(leading_sep,new_path)),new_path},$absolute_path$1.$$arity=-2),Opal.def(self,"$expand_path",$expand_path$2=function(path,basedir){var sep,sep_chars,home=nil,leading_sep=nil,home_path_regexp=nil;return null==basedir&&(basedir=nil),sep=$$($nesting,"SEPARATOR"),sep_chars=$sep_chars(),$truthy("~"===path[0]||basedir&&"~"===basedir[0])&&(home=$$($nesting,"Dir").$home(),$truthy(home)||this.$raise($$($nesting,"ArgumentError"),"couldn't find HOME environment -- expanding `~'"),leading_sep=windows_root_rx.test(home)?"":home.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),$truthy(home["$start_with?"](leading_sep))||this.$raise($$($nesting,"ArgumentError"),"non-absolute home"),home=$rb_plus(home,sep),home_path_regexp=Opal.regexp(["^\\~(?:",sep,"|$)"]),path=path.$sub(home_path_regexp,home),$truthy(basedir)&&(basedir=basedir.$sub(home_path_regexp,home))),this.$absolute_path(path,basedir)},$expand_path$2.$$arity=-2),$alias(self,"realpath","expand_path"),Opal.def(self,"$dirname",$dirname$3=function(path){var sep_chars;sep_chars=$sep_chars();var absolute=(path=$coerce_to_path(path)).match(new RegExp("^["+sep_chars+"]"));return""===(path=(path=(path=path.replace(new RegExp("["+sep_chars+"]+$"),"")).replace(new RegExp("[^"+sep_chars+"]+$"),"")).replace(new RegExp("["+sep_chars+"]+$"),""))?absolute?"/":".":path},$dirname$3.$$arity=1),Opal.def(self,"$basename",$basename$4=function(name,suffix){var sep_chars;return null==suffix&&(suffix=nil),sep_chars=$sep_chars(),0==(name=$coerce_to_path(name)).length||(suffix=suffix!==nil?$$($nesting,"Opal")["$coerce_to!"](suffix,$$($nesting,"String"),"to_str"):null,name=(name=name.replace(new RegExp("(.)["+sep_chars+"]*$"),"$1")).replace(new RegExp("^(?:.*["+sep_chars+"])?([^"+sep_chars+"]+)$"),"$1"),".*"===suffix?name=name.replace(/\.[^\.]+$/,""):null!==suffix&&(suffix=Opal.escape_regexp(suffix),name=name.replace(new RegExp(suffix+"$"),""))),name},$basename$4.$$arity=-2),Opal.def(self,"$extname",$extname$5=function(path){var lhs,rhs,filename=nil,last_dot_idx=nil,$ret_or_2=nil;return path=$coerce_to_path(path),filename=this.$basename(path),$truthy(filename["$empty?"]())?"":(last_dot_idx=filename["$[]"]($range(1,-1,!1)).$rindex("."),$truthy($truthy($ret_or_2=last_dot_idx["$nil?"]())?$ret_or_2:$rb_plus(last_dot_idx,1)["$=="]((lhs=filename.$length(),rhs=1,"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs))))?"":filename["$[]"](Opal.Range.$new($rb_plus(last_dot_idx,1),-1,!1)))},$extname$5.$$arity=1),Opal.def(self,"$exist?",$exist$ques$6=function(path){return null!=Opal.modules[path]},$exist$ques$6.$$arity=1),$alias(self,"exists?","exist?"),Opal.def(self,"$directory?",$directory$ques$7=function(path){var $$8,files=nil;for(var key in files=[],Opal.modules)files.push(key);return path=path.$gsub(Opal.regexp(["(^.",$$($nesting,"SEPARATOR"),"+|",$$($nesting,"SEPARATOR"),"+$)"])),$send(files,"find",[],(($$8=function(f){null==$$8.$$s||$$8.$$s;return null==f&&(f=nil),f["$=~"](Opal.regexp(["^",path]))}).$$s=this,$$8.$$arity=1,$$8))},$directory$ques$7.$$arity=1),Opal.def(self,"$join",$join$9=function($a){var $post_args,paths,$$10,$$11,self=this,result=nil;return $post_args=Opal.slice.call(arguments,0,arguments.length),$truthy((paths=$post_args)["$empty?"]())?"":(result="",paths=$send(paths.$flatten().$each_with_index(),"map",[],(($$10=function(item,index){null==$$10.$$s||$$10.$$s;var $ret_or_3=nil,$ret_or_4=nil;return null==item&&(item=nil),null==index&&(index=nil),$truthy($truthy($ret_or_3=index["$=="](0))?item["$empty?"]():$ret_or_3)||$truthy($truthy($ret_or_4=paths.$length()["$=="]($rb_plus(index,1)))?item["$empty?"]():$ret_or_4)?$$($nesting,"SEPARATOR"):item}).$$s=self,$$10.$$arity=2,$$10)),paths=$send(paths,"reject",[],"empty?".$to_proc()),$send(paths,"each_with_index",[],(($$11=function(item,index){null==$$11.$$s||$$11.$$s;var next_item=nil,$ret_or_5=nil,$ret_or_6=nil;return null==item&&(item=nil),null==index&&(index=nil),next_item=paths["$[]"]($rb_plus(index,1)),$truthy(next_item["$nil?"]())?result=""+result+item:($truthy($truthy($ret_or_5=item["$end_with?"]($$($nesting,"SEPARATOR")))?next_item["$start_with?"]($$($nesting,"SEPARATOR")):$ret_or_5)&&(item=item.$sub(Opal.regexp([$$($nesting,"SEPARATOR"),"+$"]),"")),result=$truthy($truthy($ret_or_6=item["$end_with?"]($$($nesting,"SEPARATOR")))?$ret_or_6:next_item["$start_with?"]($$($nesting,"SEPARATOR")))?""+result+item:""+result+item+$$($nesting,"SEPARATOR"))}).$$s=self,$$11.$$arity=2,$$11)),result)},$join$9.$$arity=-1),Opal.def(self,"$split",$split$12=function(path){return path.$split($$($nesting,"SEPARATOR"))},$split$12.$$arity=1),nil&&"split"}(Opal.get_singleton_class(self),$nesting)}($nesting[0],$$($nesting,"IO"),$nesting)},Opal.modules["nodejs/file"]=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$truthy=Opal.truthy,$alias=Opal.alias,$send2=Opal.send2,$find_super=Opal.find_super;Opal.add_stubs(["$require","$raise","$warn","$const_get","$new","$const_defined?","$const_set","$size","$respond_to?","$path","$join","$call","$exist?","$realpath","$!=","$close","$to_path","$pwd","$to_str","$include?","$delete","$match?","$sub","$attr_reader"]),self.$require("corelib/file");var errno_code,warnings={},errno_codes=["EACCES","EISDIR","EMFILE","ENOENT","EPERM"];function handle_unsupported_feature(message){switch(Opal.config.unsupported_features_severity){case"error":$$($nesting,"Kernel").$raise($$($nesting,"NotImplementedError"),message);break;case"warning":!function(string){if(warnings[string])return;warnings[string]=!0,self.$warn(string)}(message)}}function executeIOAction(action){try{return action()}catch(error){if(errno_codes.indexOf(error.code)>=0)throw $$($nesting,"Errno").$const_get(error.code).$new(error.message);throw error}}for(var i=0,ii=errno_codes.length;i<ii;i++)errno_code=errno_codes[i],$$($nesting,"Errno")["$const_defined?"](errno_code)||$$($nesting,"Errno").$const_set(errno_code,$$($nesting,"Class").$new($$($nesting,"SystemCallError")));return function($base,$super,$parent_nesting){var $File_read$1,$File_write$2,$File_delete$3,$File_exist$ques$4,$File_realpath$5,$File_join$6,$File_directory$ques$7,$File_file$ques$8,$File_readable$ques$9,$File_size$10,$File_open$11,$File_stat$12,$File_mtime$13,$File_symlink$ques$14,$File_absolute_path$15,$File_initialize$16,$File_sysread$17,$File_write$18,$File_flush$19,$File_close$20,$File_mtime$21,self=$klass($base,$super,"File"),$nesting=[self].concat($parent_nesting);null==self.__fs__&&(self.__fs__=nil),null==self.__path__&&(self.__path__=nil),null==self.__util__&&(self.__util__=nil),self.$$prototype.eof=self.$$prototype.binary_flag=self.$$prototype.path=self.$$prototype.fd=nil,self.__fs__=require("fs"),self.__path__=require("path"),self.__util__=require("util");var __fs__=self.__fs__,__path__=self.__path__,__util__=self.__util__,__TextEncoder__="undefined"!=typeof TextEncoder?TextEncoder:__util__.TextEncoder,__utf8TextDecoder__=new("undefined"!=typeof TextDecoder?TextDecoder:__util__.TextDecoder)("utf8"),__textEncoder__=new __TextEncoder__;$truthy(__path__.sep!==$$($nesting,"Separator"))&&Opal.const_set($nesting[0],"ALT_SEPARATOR",__path__.sep),Opal.defs(self,"$read",$File_read$1=function(path){return executeIOAction((function(){return __fs__.readFileSync(path).toString()}))},$File_read$1.$$arity=1),Opal.defs(self,"$write",$File_write$2=function(path,data){return executeIOAction((function(){return __fs__.writeFileSync(path,data)})),data.$size()},$File_write$2.$$arity=2),Opal.defs(self,"$delete",$File_delete$3=function(path){return executeIOAction((function(){return __fs__.unlinkSync(path)}))},$File_delete$3.$$arity=1),function(self,$parent_nesting){[self].concat($parent_nesting);$alias(self,"unlink","delete")}(Opal.get_singleton_class(self),$nesting),Opal.defs(self,"$exist?",$File_exist$ques$4=function(path){return $truthy(path["$respond_to?"]("path"))&&(path=path.$path()),executeIOAction((function(){return __fs__.existsSync(path)}))},$File_exist$ques$4.$$arity=1),Opal.defs(self,"$realpath",$File_realpath$5=function(pathname,dir_string,cache){var $iter=$File_realpath$5.$$p,block=$iter||nil;if($iter&&($File_realpath$5.$$p=null),$iter&&($File_realpath$5.$$p=null),null==dir_string&&(dir_string=nil),null==cache&&(cache=nil),$truthy(dir_string)&&(pathname=this.$join(dir_string,pathname)),block===nil)return executeIOAction((function(){return __fs__.realpathSync(pathname,cache)}));__fs__.realpath(pathname,cache,(function(error,realpath){error?Opal.IOError.$new(error.message):block.$call(realpath)}))},$File_realpath$5.$$arity=-2),Opal.defs(self,"$join",$File_join$6=function($a){var paths;return paths=Opal.slice.call(arguments,0,arguments.length),__path__.posix.join.apply(__path__,paths)},$File_join$6.$$arity=-1),Opal.defs(self,"$directory?",$File_directory$ques$7=function(path){var result=nil,realpath=nil;return!!$truthy(this["$exist?"](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(path).isDirectory()})),$truthy(result)||(realpath=this.$realpath(path),$truthy(realpath["$!="](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(realpath).isDirectory()})))),result)},$File_directory$ques$7.$$arity=1),Opal.defs(self,"$file?",$File_file$ques$8=function(path){var result=nil,realpath=nil;return!!$truthy(this["$exist?"](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(path).isFile()})),$truthy(result)||(realpath=this.$realpath(path),$truthy(realpath["$!="](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(realpath).isFile()})))),result)},$File_file$ques$8.$$arity=1),Opal.defs(self,"$readable?",$File_readable$ques$9=function(path){return!!$truthy(this["$exist?"](path))&&"\n        try {\n          __fs__.accessSync(path, __fs__.R_OK);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      "},$File_readable$ques$9.$$arity=1),Opal.defs(self,"$size",$File_size$10=function(path){return executeIOAction((function(){return __fs__.lstatSync(path).size}))},$File_size$10.$$arity=1),Opal.defs(self,"$open",$File_open$11=function(path,mode){var $iter=$File_open$11.$$p,$yield=$iter||nil,file=nil;return $iter&&($File_open$11.$$p=null),null==mode&&(mode="r"),file=this.$new(path,mode),$yield!==nil?function(){try{return Opal.yield1($yield,file)}finally{file.$close()}}():file},$File_open$11.$$arity=-2),Opal.defs(self,"$stat",$File_stat$12=function(path){return $truthy(path["$respond_to?"]("path"))&&(path=path.$path()),$$$($$($nesting,"File"),"Stat").$new(path)},$File_stat$12.$$arity=1),Opal.defs(self,"$mtime",$File_mtime$13=function(path){return executeIOAction((function(){return __fs__.statSync(path).mtime}))},$File_mtime$13.$$arity=1),Opal.defs(self,"$symlink?",$File_symlink$ques$14=function(path){return executeIOAction((function(){return __fs__.lstatSync(path).isSymbolicLink()}))},$File_symlink$ques$14.$$arity=1),Opal.defs(self,"$absolute_path",$File_absolute_path$15=function(path,basedir){var $ret_or_1=nil;return null==basedir&&(basedir=nil),path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path,basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$($nesting,"Dir").$pwd(),__path__.normalize(__path__.resolve(basedir.$to_str(),path.$to_str())).split(__path__.sep).join(__path__.posix.sep)},$File_absolute_path$15.$$arity=-2),Opal.def(self,"$initialize",$File_initialize$16=function(path,flags){var fd,$iter=$File_initialize$16.$$p,encoding_option_rx=nil;return $iter&&($File_initialize$16.$$p=null),null==flags&&(flags="r"),this.binary_flag=flags["$include?"]("b"),flags=flags.$delete("b"),$truthy((encoding_option_rx=/:(.*)/)["$match?"](flags))&&(handle_unsupported_feature("Encoding option (:encoding) is unsupported by Node.js openSync method and will be removed."),flags=flags.$sub(encoding_option_rx,"")),this.path=path,fd=executeIOAction((function(){return __fs__.openSync(path,flags)})),$send2(this,$find_super(this,"initialize",$File_initialize$16,!1,!0),"initialize",[fd,flags],null)},$File_initialize$16.$$arity=-2),self.$attr_reader("path"),Opal.def(self,"$sysread",$File_sysread$17=function(bytes){var self=this,res=nil;if($truthy(self.eof))return self.$raise($$($nesting,"EOFError"),"end of file reached");if($truthy(self.binary_flag)){var content,buf=executeIOAction((function(){return __fs__.readFileSync(self.path)}));content=function(bytes){for(var i=0;i<bytes.length;)if(9===bytes[i]||10===bytes[i]||13===bytes[i]||32<=bytes[i]&&bytes[i]<=126)i+=1;else if(194<=bytes[i]&&bytes[i]<=223&&128<=bytes[i+1]&&bytes[i+1]<=191)i+=2;else if(224===bytes[i]&&160<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191||(225<=bytes[i]&&bytes[i]<=236||238===bytes[i]||239===bytes[i])&&128<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191||237===bytes[i]&&128<=bytes[i+1]&&bytes[i+1]<=159&&128<=bytes[i+2]&&bytes[i+2]<=191)i+=3;else{if(!(240===bytes[i]&&144<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191||241<=bytes[i]&&bytes[i]<=243&&128<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191||244===bytes[i]&&128<=bytes[i+1]&&bytes[i+1]<=143&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191))return!1;i+=4}return!0}(buf)?buf.toString("utf8"):__utf8TextDecoder__.decode(__textEncoder__.encode(buf.toString("binary"))),res=content}else res=executeIOAction((function(){return __fs__.readFileSync(self.path).toString("utf8")}));return self.eof=!0,self.lineno=res.$size(),res},$File_sysread$17.$$arity=1),Opal.def(self,"$write",$File_write$18=function(string){var self=this;return executeIOAction((function(){return __fs__.writeSync(self.fd,string)}))},$File_write$18.$$arity=1),Opal.def(self,"$flush",$File_flush$19=function(){var self=this;return executeIOAction((function(){return __fs__.fsyncSync(self.fd)}))},$File_flush$19.$$arity=0),Opal.def(self,"$close",$File_close$20=function(){var $iter=$File_close$20.$$p,self=this;return $iter&&($File_close$20.$$p=null),executeIOAction((function(){return __fs__.closeSync(self.fd)})),$send2(self,$find_super(self,"close",$File_close$20,!1,!0),"close",[],$iter)},$File_close$20.$$arity=0),Opal.def(self,"$mtime",$File_mtime$21=function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).mtime}))},$File_mtime$21.$$arity=0)}($nesting[0],$$($nesting,"IO"),$nesting),function($base,$super,$parent_nesting){var $Stat_initialize$22,$Stat_file$ques$23,$Stat_mtime$24,self=$klass($base,null,"Stat");[self].concat($parent_nesting);null==self.__fs__&&(self.__fs__=nil),self.$$prototype.path=nil,self.__fs__=require("fs");var __fs__=self.__fs__;return Opal.def(self,"$initialize",$Stat_initialize$22=function(path){return this.path=path},$Stat_initialize$22.$$arity=1),Opal.def(self,"$file?",$Stat_file$ques$23=function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).isFile()}))},$Stat_file$ques$23.$$arity=0),Opal.def(self,"$mtime",$Stat_mtime$24=function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).mtime}))},$Stat_mtime$24.$$arity=0),nil&&"mtime"}($$($nesting,"File"),0,$nesting)},Opal.modules["nodejs/dir"]=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$klass=Opal.klass,$truthy=Opal.truthy,$send=Opal.send,$alias=Opal.alias;return Opal.add_stubs(["$respond_to?","$flat_map","$to_path","$coerce_to!"]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Dir"),$nesting=[self].concat($parent_nesting);null==self.__glob__&&(self.__glob__=nil),null==self.__fs__&&(self.__fs__=nil),null==self.__path__&&(self.__path__=nil),null==self.__os__&&(self.__os__=nil),self.__glob__=require("glob"),self.__fs__=require("fs"),self.__path__=require("path"),self.__os__=require("os");var __glob__=self.__glob__,__fs__=self.__fs__,__path__=self.__path__,__os__=self.__os__;return function(self,$parent_nesting){var $$$1,$pwd$2,$home$3,$chdir$4,$mkdir$5,$entries$6,$glob$7,$nesting=[self].concat($parent_nesting);return Opal.def(self,"$[]",$$$1=function(glob){return __glob__.sync(glob)},$$$1.$$arity=1),Opal.def(self,"$pwd",$pwd$2=function(){return process.cwd().split(__path__.sep).join(__path__.posix.sep)},$pwd$2.$$arity=0),Opal.def(self,"$home",$home$3=function(){return __os__.homedir()},$home$3.$$arity=0),Opal.def(self,"$chdir",$chdir$4=function(path){return process.chdir(path)},$chdir$4.$$arity=1),Opal.def(self,"$mkdir",$mkdir$5=function(path){return __fs__.mkdirSync(path)},$mkdir$5.$$arity=1),Opal.def(self,"$entries",$entries$6=function(dirname){for(var result=[],entries=__fs__.readdirSync(dirname),i=0,ii=entries.length;i<ii;i++)result.push(entries[i]);return result},$entries$6.$$arity=1),Opal.def(self,"$glob",$glob$7=function(pattern){var $$8;return $truthy(pattern["$respond_to?"]("each"))||(pattern=[pattern]),$send(pattern,"flat_map",[],(($$8=function(subpattern){null==$$8.$$s||$$8.$$s;return null==subpattern&&(subpattern=nil),$truthy(subpattern["$respond_to?"]("to_path"))&&(subpattern=subpattern.$to_path()),subpattern=$$($nesting,"Opal")["$coerce_to!"](subpattern,$$($nesting,"String"),"to_str"),__glob__.sync(subpattern)}).$$s=this,$$8.$$arity=1,$$8))},$glob$7.$$arity=1),$alias(self,"getwd","pwd")}(Opal.get_singleton_class(self),$nesting)}($nesting[0],0,$nesting)},Opal.modules["nodejs/io"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var $$5,$$6,self=Opal.top,$nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$klass=Opal.klass,$alias=Opal.alias,$lambda=Opal.lambda,$send=Opal.send,$writer=nil;Opal.add_stubs(["$attr_reader","$initialize_before_node_io","$write","$read","$write_proc=","$-","$read_proc=","$tty="]);var __fs__=require("fs");return function($base,$super,$parent_nesting){var $IO_initialize$1,$IO_write$2,$IO_read$3,$IO_binread$4,self=$klass($base,null,"IO"),$nesting=[self].concat($parent_nesting);self.__fs__=__fs__,self.$attr_reader("lineno"),$alias(self,"initialize_before_node_io","initialize"),Opal.def(self,"$initialize",$IO_initialize$1=function(fd,flags){return null==flags&&(flags="r"),this.lineno=0,this.$initialize_before_node_io(fd,flags)},$IO_initialize$1.$$arity=-2),Opal.defs(self,"$write",$IO_write$2=function(path,data){return $$($nesting,"File").$write(path,data)},$IO_write$2.$$arity=2),Opal.defs(self,"$read",$IO_read$3=function(path){return $$($nesting,"File").$read(path)},$IO_read$3.$$arity=1),Opal.defs(self,"$binread",$IO_binread$4=function(path){return function(action){try{return action()}catch(error){if("EACCES"===error.code||"EISDIR"===error.code||"EMFILE"===error.code||"ENOENT"===error.code||"EPERM"===error.code)throw Opal.IOError.$new(error.message);throw error}}((function(){return __fs__.readFileSync(path).toString("binary")}))},$IO_binread$4.$$arity=1)}($nesting[0],0,$nesting),$writer=[$lambda(($$5=function(string){null==$$5.$$s||$$5.$$s;return null==string&&(string=nil),process.stdout.write(string)},$$5.$$s=self,$$5.$$arity=1,$$5))],$send($$($nesting,"STDOUT"),"write_proc=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[$lambda(($$6=function(string){null==$$6.$$s||$$6.$$s;return null==string&&(string=nil),process.stderr.write(string)},$$6.$$s=self,$$6.$$arity=1,$$6))],$send($$($nesting,"STDERR"),"write_proc=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[function(_count){var count,buf=Buffer.alloc(65536);try{count=__fs__.readSync(this.fd,buf,0,65536,null)}catch(e){return nil}return 0==count?nil:buf.toString("utf8",0,count)}],$send($$($nesting,"STDIN"),"read_proc=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[!0],$send($$($nesting,"STDIN"),"tty=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[!0],$send($$($nesting,"STDOUT"),"tty=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[!0],$send($$($nesting,"STDERR"),"tty=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},Opal.modules["nodejs/argf"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $writer,$nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$gvars=Opal.gvars,$truthy=Opal.truthy,$send=Opal.send,$alias=Opal.alias;return Opal.add_stubs(["$new","$include","$filename","$==","$open","$argv","$shift","$close","$file","$closed?","$enum_for","$gets","$nil?","$+","$loop","$read","$-","$length","$>","$to_a","$each","$attr_accessor","$rewind","$!","$fileno","$eof?","$lineno="]),Opal.const_set($nesting[0],"ARGF",$$($nesting,"Object").$new()),function(self,$parent_nesting){var $inspect$1,$argv$2,$file$3,$filename$4,$close$5,$closed$ques$6,$each$7,$gets$8,$read$9,$readlines$11,$rewind$12,$fileno$13,$eof$ques$14,$nesting=[self].concat($parent_nesting);self.$include($$($nesting,"Enumerable")),Opal.def(self,"$inspect",$inspect$1=function(){return"ARGF"},$inspect$1.$$arity=0),Opal.def(self,"$argv",$argv$2=function(){return $$($nesting,"ARGV")},$argv$2.$$arity=0),Opal.def(self,"$file",$file$3=function(){var self=this,fn=nil,$ret_or_1=nil;return null==self.file&&(self.file=nil),null==$gvars.stdin&&($gvars.stdin=nil),(fn=self.$filename())["$=="]("-")?$gvars.stdin:self.file=$truthy($ret_or_1=self.file)?$ret_or_1:$$($nesting,"File").$open(fn,"r")},$file$3.$$arity=0),Opal.def(self,"$filename",$filename$4=function(){var $ret_or_2=nil;return null==this.filename&&(this.filename=nil),null==this.last_filename&&(this.last_filename=nil),$truthy(this.filename)?this.filename:this.$argv()["$=="](["-"])?"-":this.$argv()["$=="]([])?$truthy($ret_or_2=this.last_filename)?$ret_or_2:"-":(this.file=nil,this.filename=this.last_filename=this.$argv().$shift())},$filename$4.$$arity=0),Opal.def(self,"$close",$close$5=function(){return this.$file().$close(),this.filename=nil,this},$close$5.$$arity=0),Opal.def(self,"$closed?",$closed$ques$6=function(){return this.$file()["$closed?"]()},$closed$ques$6.$$arity=0),Opal.def(self,"$each",$each$7=function($a){var args,$iter=$each$7.$$p,block=$iter||nil,self=this,l=nil;if($iter&&($each$7.$$p=null),$iter&&($each$7.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),block===nil)return self.$enum_for("each");for(;$truthy(l=$send(self,"gets",Opal.to_a(args)));)Opal.yield1(block,l)},$each$7.$$arity=-1),Opal.def(self,"$gets",$gets$8=function($a){var args,self=this,s=nil;return null==self.lineno&&(self.lineno=nil),args=Opal.slice.call(arguments,0,arguments.length),s=$send(self.$file(),"gets",Opal.to_a(args)),$truthy(s["$nil?"]())&&(self.$close(),s=$send(self.$file(),"gets",Opal.to_a(args))),$truthy(s)&&(self.lineno=$rb_plus(self.lineno,1)),s},$gets$8.$$arity=-1),Opal.def(self,"$read",$read$9=function(len){var $$10,self=this,buf=nil;return null==len&&(len=nil),buf="",function(){var $brk=Opal.new_brk();try{return $send(self,"loop",[],($$10=function(){var lhs,rhs,self=null==$$10.$$s?this:$$10.$$s,r=nil,$ret_or_3=nil,$ret_or_4=nil;if(null==self.filename&&(self.filename=nil),r=self.$file().$read(len),$truthy(r)&&(buf=$rb_plus(buf,r),len=$rb_minus(len,r.$length())),self.$file().$close(),!$truthy($truthy($ret_or_3=$truthy($ret_or_4=len)?(rhs=0,"number"==typeof(lhs=len)&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)):$ret_or_4)?self.filename:$ret_or_3))return nil;Opal.brk(nil,$brk)},$$10.$$s=self,$$10.$$brk=$brk,$$10.$$arity=0,$$10))}catch(err){if(err===$brk)return err.$v;throw err}}()},$read$9.$$arity=-1),Opal.def(self,"$readlines",$readlines$11=function($a){var args,self=this;return args=Opal.slice.call(arguments,0,arguments.length),$send(self,"each",Opal.to_a(args)).$to_a()},$readlines$11.$$arity=-1),self.$attr_accessor("lineno"),Opal.def(self,"$rewind",$rewind$12=function(){var f=nil;this.lineno=1,f=this.$file();try{f.$rewind()}catch($err){if(!Opal.rescue($err,[$$($nesting,"StandardError")]))throw $err;Opal.pop_exception()}return 0},$rewind$12.$$arity=0),Opal.def(self,"$fileno",$fileno$13=function(){var self=this,$ret_or_5=nil;return null==self.filename&&(self.filename=nil),null==self.last_filename&&(self.last_filename=nil),$truthy($truthy($ret_or_5=self.filename["$!"]())?self.last_filename:$ret_or_5)?0:self.$file().$fileno()},$fileno$13.$$arity=0),Opal.def(self,"$eof?",$eof$ques$14=function(){return this.$file()["$eof?"]()},$eof$ques$14.$$arity=0),$alias(self,"to_io","file"),$alias(self,"to_i","fileno"),$alias(self,"skip","close"),$alias(self,"path","filename"),$alias(self,"each_line","each"),$alias(self,"eof","eof?")}(Opal.get_singleton_class($$($nesting,"ARGF")),$nesting),$writer=[1],$send($$($nesting,"ARGF"),"lineno=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},Opal.modules["nodejs/open-uri"]=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$module=(Opal.$$$,Opal.$$,Opal.module);return function($base,$parent_nesting){var $OpenURI_request$1,$OpenURI_data$2,self=$module($base,"OpenURI");[self].concat($parent_nesting);null==self.__xmlhttprequest__&&(self.__xmlhttprequest__=nil),self.__xmlhttprequest__=require("unxhr");var __XMLHttpRequest__=self.__xmlhttprequest__.XMLHttpRequest;return Opal.defs(self,"$request",$OpenURI_request$1=function(uri){var xhr=new __XMLHttpRequest__;return xhr.open("GET",uri,!1),xhr.responseType="arraybuffer",xhr.send(),xhr},$OpenURI_request$1.$$arity=1),Opal.defs(self,"$data",$OpenURI_data$2=function(req){for(var arrayBuffer=req.response,byteArray=new Uint8Array(arrayBuffer),result=[],i=0;i<byteArray.byteLength;i++)result.push(byteArray[i]);return result},$OpenURI_data$2.$$arity=1),nil&&"data"}($nesting[0],$nesting)},Opal.modules["corelib/comparable"]=function(Opal){function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)}function $rb_lt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$falsy=Opal.falsy,$module=Opal.module,$truthy=Opal.truthy;return Opal.add_stubs(["$>","$<","$===","$raise","$class","$<=>","$equal?"]),function($base,$parent_nesting){var $Comparable_$eq_eq$1,$Comparable_$gt$2,$Comparable_$gt_eq$3,$Comparable_$lt$4,$Comparable_$lt_eq$5,$Comparable_between$ques$6,$Comparable_clamp$7,self=$module($base,"Comparable"),$nesting=[self].concat($parent_nesting),$case=nil;function normalize(what){return Opal.is_a(what,Opal.Integer)?what:$rb_gt(what,0)?1:$rb_lt(what,0)?-1:0}function cmp_or_fail(lhs,rhs){var cmp=lhs["$<=>"](rhs);return $falsy(cmp)&&function(lhs,rhs){var class_name;$case=rhs,class_name=nil["$==="]($case)||(!0)["$==="]($case)||(!1)["$==="]($case)||$$($nesting,"Integer")["$==="]($case)||$$($nesting,"Float")["$==="]($case)?rhs.$inspect():rhs.$$class,self.$raise($$($nesting,"ArgumentError"),"comparison of "+lhs.$class()+" with "+class_name+" failed")}(lhs,rhs),normalize(cmp)}return Opal.def(self,"$==",$Comparable_$eq_eq$1=function(other){var cmp;return!!$truthy(this["$equal?"](other))||this["$<=>"]!=Opal.Kernel["$<=>"]&&(this.$$comparable?(delete this.$$comparable,!1):!!$truthy(cmp=this["$<=>"](other))&&0==normalize(cmp))},$Comparable_$eq_eq$1.$$arity=1),Opal.def(self,"$>",$Comparable_$gt$2=function(other){return cmp_or_fail(this,other)>0},$Comparable_$gt$2.$$arity=1),Opal.def(self,"$>=",$Comparable_$gt_eq$3=function(other){return cmp_or_fail(this,other)>=0},$Comparable_$gt_eq$3.$$arity=1),Opal.def(self,"$<",$Comparable_$lt$4=function(other){return cmp_or_fail(this,other)<0},$Comparable_$lt$4.$$arity=1),Opal.def(self,"$<=",$Comparable_$lt_eq$5=function(other){return cmp_or_fail(this,other)<=0},$Comparable_$lt_eq$5.$$arity=1),Opal.def(self,"$between?",$Comparable_between$ques$6=function(min,max){return!$rb_lt(this,min)&&!$rb_gt(this,max)},$Comparable_between$ques$6.$$arity=2),Opal.def(self,"$clamp",$Comparable_clamp$7=function(min,max){var c,excl;if(null==max&&(max=nil),max===nil&&(Opal.is_a(min,Opal.Range)||this.$raise($$($nesting,"TypeError"),"wrong argument type "+min.$class()+" (expected Range)"),excl=min.excl,max=min.end,min=min.begin,max!==nil&&excl&&this.$raise($$($nesting,"ArgumentError"),"cannot clamp with an exclusive range")),min!==nil&&max!==nil&&cmp_or_fail(min,max)>0&&this.$raise($$($nesting,"ArgumentError"),"min argument must be smaller than max argument"),min!==nil){if(0==(c=cmp_or_fail(this,min)))return this;if(c<0)return min}return max!==nil&&(c=cmp_or_fail(this,max))>0?max:this},$Comparable_clamp$7.$$arity=-2),nil&&"clamp"}($nesting[0],$nesting)},Opal.modules.pathname=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$truthy=Opal.truthy,$send=Opal.send,$alias=Opal.alias,$module=Opal.module;return Opal.add_stubs(["$require","$include","$quote","$===","$to_s","$path","$respond_to?","$to_path","$is_a?","$nil?","$raise","$class","$==","$new","$pwd","$attr_reader","$!","$relative?","$chop_basename","$basename","$=~","$source","$[]","$rindex","$sub","$absolute?","$expand_path","$plus","$unshift","$length","$!=","$empty?","$first","$shift","$+","$join","$dirname","$pop","$reverse_each","$directory?","$extname","$<=>","$nonzero?","$proc","$casecmp","$cleanpath","$inspect","$include?","$fill","$map","$entries"]),self.$require("corelib/comparable"),function($base,$super,$parent_nesting){var $Pathname_initialize$1,$Pathname_pwd$2,$Pathname_$eq_eq$3,$Pathname_absolute$ques$4,$Pathname_relative$ques$5,$Pathname_chop_basename$6,$Pathname_root$ques$7,$Pathname_parent$8,$Pathname_sub$9,$Pathname_cleanpath$10,$Pathname_to_path$11,$Pathname_hash$12,$Pathname_expand_path$13,$Pathname_$plus$14,$Pathname_plus$15,$Pathname_join$16,$Pathname_split$18,$Pathname_dirname$19,$Pathname_basename$20,$Pathname_directory$ques$21,$Pathname_extname$22,$Pathname_$lt_eq_gt$23,$Pathname$24,$Pathname$25,$Pathname_relative_path_from$26,$Pathname_entries$27,self=$klass($base,null,"Pathname"),$nesting=[self].concat($parent_nesting);self.$$prototype.path=nil,self.$include($$($nesting,"Comparable")),Opal.const_set($nesting[0],"SEPARATOR_PAT",Opal.regexp([$$($nesting,"Regexp").$quote($$$($$($nesting,"File"),"SEPARATOR"))])),Opal.def(self,"$initialize",$Pathname_initialize$1=function(path){return $truthy($$($nesting,"Pathname")["$==="](path))?this.path=path.$path().$to_s():$truthy(path["$respond_to?"]("to_path"))?this.path=path.$to_path():$truthy(path["$is_a?"]($$($nesting,"String")))?this.path=path:$truthy(path["$nil?"]())?this.$raise($$($nesting,"TypeError"),"no implicit conversion of nil into String"):this.$raise($$($nesting,"TypeError"),"no implicit conversion of "+path.$class()+" into String"),this.path["$=="]("\0")?this.$raise($$($nesting,"ArgumentError")):nil},$Pathname_initialize$1.$$arity=1),Opal.defs(self,"$pwd",$Pathname_pwd$2=function(){return this.$new($$($nesting,"Dir").$pwd())},$Pathname_pwd$2.$$arity=0),self.$attr_reader("path"),Opal.def(self,"$==",$Pathname_$eq_eq$3=function(other){return other.$path()["$=="](this.path)},$Pathname_$eq_eq$3.$$arity=1),Opal.def(self,"$absolute?",$Pathname_absolute$ques$4=function(){return this["$relative?"]()["$!"]()},$Pathname_absolute$ques$4.$$arity=0),Opal.def(self,"$relative?",$Pathname_relative$ques$5=function(){var $b,$c,path=nil,r=nil;for(path=this.path;$truthy(r=this.$chop_basename(path));)$c=r,path=null==($b=Opal.to_ary($c))[0]?nil:$b[0];return path["$=="]("")},$Pathname_relative$ques$5.$$arity=0),Opal.def(self,"$chop_basename",$Pathname_chop_basename$6=function(path){var base;return base=$$($nesting,"File").$basename(path),$truthy($$($nesting,"Regexp").$new("^"+$$$($$($nesting,"Pathname"),"SEPARATOR_PAT").$source()+"?$")["$=~"](base))?nil:[path["$[]"](0,path.$rindex(base)),base]},$Pathname_chop_basename$6.$$arity=1),Opal.def(self,"$root?",$Pathname_root$ques$7=function(){return this.path["$=="]("/")},$Pathname_root$ques$7.$$arity=0),Opal.def(self,"$parent",$Pathname_parent$8=function(){var self=this,new_path=nil;return(new_path=self.path.$sub(/\/([^\/]+\/?$)/,""))["$=="]("")&&(new_path=$truthy(self["$absolute?"]())?"/":"."),$$($nesting,"Pathname").$new(new_path)},$Pathname_parent$8.$$arity=0),Opal.def(self,"$sub",$Pathname_sub$9=function($a){var args,self=this;return args=Opal.slice.call(arguments,0,arguments.length),$$($nesting,"Pathname").$new($send(self.path,"sub",Opal.to_a(args)))},$Pathname_sub$9.$$arity=-1),Opal.def(self,"$cleanpath",$Pathname_cleanpath$10=function(){return Opal.normalize(this.path)},$Pathname_cleanpath$10.$$arity=0),Opal.def(self,"$to_path",$Pathname_to_path$11=function(){return this.path},$Pathname_to_path$11.$$arity=0),Opal.def(self,"$hash",$Pathname_hash$12=function(){return this.path},$Pathname_hash$12.$$arity=0),Opal.def(self,"$expand_path",$Pathname_expand_path$13=function(){return $$($nesting,"Pathname").$new($$($nesting,"File").$expand_path(this.path))},$Pathname_expand_path$13.$$arity=0),Opal.def(self,"$+",$Pathname_$plus$14=function(other){return $truthy($$($nesting,"Pathname")["$==="](other))||(other=$$($nesting,"Pathname").$new(other)),$$($nesting,"Pathname").$new(this.$plus(this.path,other.$to_s()))},$Pathname_$plus$14.$$arity=1),Opal.def(self,"$plus",$Pathname_plus$15=function(path1,path2){var $b,$c,prefix2=nil,index_list2=nil,basename_list2=nil,r2=nil,basename2=nil,prefix1=nil,$ret_or_1=nil,r1=nil,basename1=nil,$ret_or_2=nil,$ret_or_3=nil,$ret_or_4=nil,$ret_or_5=nil,suffix2=nil;for(prefix2=path2,index_list2=[],basename_list2=[];$truthy(r2=this.$chop_basename(prefix2));)$c=r2,prefix2=null==($b=Opal.to_ary($c))[0]?nil:$b[0],basename2=null==$b[1]?nil:$b[1],index_list2.$unshift(prefix2.$length()),basename_list2.$unshift(basename2);if($truthy(prefix2["$!="]("")))return path2;for(prefix1=path1;$truthy(!0);){for(;$truthy($truthy($ret_or_1=basename_list2["$empty?"]()["$!"]())?basename_list2.$first()["$=="]("."):$ret_or_1);)index_list2.$shift(),basename_list2.$shift();if(!$truthy(r1=this.$chop_basename(prefix1)))break;if($c=r1,$b=Opal.to_ary($c),prefix1=null==$b[0]?nil:$b[0],!(basename1=null==$b[1]?nil:$b[1])["$=="](".")){if($truthy($truthy($ret_or_2=$truthy($ret_or_3=basename1["$=="](".."))?$ret_or_3:basename_list2["$empty?"]())?$ret_or_2:basename_list2.$first()["$!="](".."))){prefix1=$rb_plus(prefix1,basename1);break}index_list2.$shift(),basename_list2.$shift()}}if(r1=this.$chop_basename(prefix1),$truthy($truthy($ret_or_4=r1["$!"]())?Opal.regexp([$$($nesting,"SEPARATOR_PAT")])["$=~"]($$($nesting,"File").$basename(prefix1)):$ret_or_4))for(;$truthy($truthy($ret_or_5=basename_list2["$empty?"]()["$!"]())?basename_list2.$first()["$=="](".."):$ret_or_5);)index_list2.$shift(),basename_list2.$shift();return $truthy(basename_list2["$empty?"]()["$!"]())?(suffix2=path2["$[]"](Opal.Range.$new(index_list2.$first(),-1,!1)),$truthy(r1)?$$($nesting,"File").$join(prefix1,suffix2):$rb_plus(prefix1,suffix2)):$truthy(r1)?prefix1:$$($nesting,"File").$dirname(prefix1)},$Pathname_plus$15.$$arity=2),Opal.def(self,"$join",$Pathname_join$16=function($a){try{var $post_args,args,$$17,self=this,result=nil;return $post_args=Opal.slice.call(arguments,0,arguments.length),$truthy((args=$post_args)["$empty?"]())?self:(result=args.$pop(),$truthy($$($nesting,"Pathname")["$==="](result))||(result=$$($nesting,"Pathname").$new(result)),$truthy(result["$absolute?"]())?result:($send(args,"reverse_each",[],(($$17=function(arg){null==$$17.$$s||$$17.$$s;if(null==arg&&(arg=nil),$truthy($$($nesting,"Pathname")["$==="](arg))||(arg=$$($nesting,"Pathname").$new(arg)),result=$rb_plus(arg,result),!$truthy(result["$absolute?"]()))return nil;Opal.ret(result)}).$$s=self,$$17.$$arity=1,$$17)),$rb_plus(self,result)))}catch($returner){if($returner===Opal.returner)return $returner.$v;throw $returner}},$Pathname_join$16.$$arity=-1),Opal.def(self,"$split",$Pathname_split$18=function(){return[this.$dirname(),this.$basename()]},$Pathname_split$18.$$arity=0),Opal.def(self,"$dirname",$Pathname_dirname$19=function(){return $$($nesting,"Pathname").$new($$($nesting,"File").$dirname(this.path))},$Pathname_dirname$19.$$arity=0),Opal.def(self,"$basename",$Pathname_basename$20=function(){return $$($nesting,"Pathname").$new($$($nesting,"File").$basename(this.path))},$Pathname_basename$20.$$arity=0),Opal.def(self,"$directory?",$Pathname_directory$ques$21=function(){return $$($nesting,"File")["$directory?"](this.path)},$Pathname_directory$ques$21.$$arity=0),Opal.def(self,"$extname",$Pathname_extname$22=function(){return $$($nesting,"File").$extname(this.path)},$Pathname_extname$22.$$arity=0),Opal.def(self,"$<=>",$Pathname_$lt_eq_gt$23=function(other){return this.$path()["$<=>"](other.$path())},$Pathname_$lt_eq_gt$23.$$arity=1),$alias(self,"eql?","=="),$alias(self,"===","=="),$alias(self,"to_str","to_path"),$alias(self,"to_s","to_path"),Opal.const_set($nesting[0],"SAME_PATHS",$truthy($$$($$($nesting,"File"),"FNM_SYSCASE")["$nonzero?"]())?$send(self,"proc",[],(($Pathname$24=function(a,b){return null==$Pathname$24.$$s||$Pathname$24.$$s,null==a&&(a=nil),null==b&&(b=nil),a.$casecmp(b)["$=="](0)}).$$s=self,$Pathname$24.$$arity=2,$Pathname$24)):$send(self,"proc",[],(($Pathname$25=function(a,b){return null==$Pathname$25.$$s||$Pathname$25.$$s,null==a&&(a=nil),null==b&&(b=nil),a["$=="](b)}).$$s=self,$Pathname$25.$$arity=2,$Pathname$25))),Opal.def(self,"$relative_path_from",$Pathname_relative_path_from$26=function(base_directory){var $b,$c,dest_directory,dest_prefix=nil,dest_names=nil,r=nil,basename=nil,base_prefix=nil,base_names=nil,$ret_or_6=nil,$ret_or_7=nil,relpath_names=nil;for(dest_directory=this.$cleanpath().$to_s(),base_directory=base_directory.$cleanpath().$to_s(),dest_prefix=dest_directory,dest_names=[];$truthy(r=this.$chop_basename(dest_prefix));)$c=r,dest_prefix=null==($b=Opal.to_ary($c))[0]?nil:$b[0],basename=null==$b[1]?nil:$b[1],$truthy(basename["$!="]("."))&&dest_names.$unshift(basename);for(base_prefix=base_directory,base_names=[];$truthy(r=this.$chop_basename(base_prefix));)$c=r,base_prefix=null==($b=Opal.to_ary($c))[0]?nil:$b[0],basename=null==$b[1]?nil:$b[1],$truthy(basename["$!="]("."))&&base_names.$unshift(basename);for($truthy($$($nesting,"SAME_PATHS")["$[]"](dest_prefix,base_prefix))||this.$raise($$($nesting,"ArgumentError"),"different prefix: "+dest_prefix.$inspect()+" and "+base_directory.$inspect());$truthy($truthy($ret_or_6=$truthy($ret_or_7=dest_names["$empty?"]()["$!"]())?base_names["$empty?"]()["$!"]():$ret_or_7)?$$($nesting,"SAME_PATHS")["$[]"](dest_names.$first(),base_names.$first()):$ret_or_6);)dest_names.$shift(),base_names.$shift();return $truthy(base_names["$include?"](".."))&&this.$raise($$($nesting,"ArgumentError"),"base_directory has ..: "+base_directory.$inspect()),base_names.$fill(".."),relpath_names=$rb_plus(base_names,dest_names),$truthy(relpath_names["$empty?"]())?$$($nesting,"Pathname").$new("."):$$($nesting,"Pathname").$new($send($$($nesting,"File"),"join",Opal.to_a(relpath_names)))},$Pathname_relative_path_from$26.$$arity=1),Opal.def(self,"$entries",$Pathname_entries$27=function(){var $$28;return $send($$($nesting,"Dir").$entries(this.path),"map",[],($$28=function(f){var self=null==$$28.$$s?this:$$28.$$s;return null==f&&(f=nil),self.$class().$new(f)},$$28.$$s=this,$$28.$$arity=1,$$28))},$Pathname_entries$27.$$arity=0)}($nesting[0],0,$nesting),function($base,$parent_nesting){var $Kernel_Pathname$29,self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting);return Opal.def(self,"$Pathname",$Kernel_Pathname$29=function(path){return $$($nesting,"Pathname").$new(path)},$Kernel_Pathname$29.$$arity=1),nil&&"Pathname"}($nesting[0],$nesting)},Opal.modules["nodejs/pathname"]=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$klass=Opal.klass;return Opal.add_stubs(["$require","$include","$to_str","$!","$absolute?"]),self.$require("pathname"),function($base,$super,$parent_nesting){var $Pathname_absolute$ques$1,$Pathname_relative$ques$2,$Pathname_to_path$3,self=$klass($base,null,"Pathname"),$nesting=[self].concat($parent_nesting);null==self.__path__&&(self.__path__=nil),self.$$prototype.path=nil,self.$include($$($nesting,"Comparable")),self.__path__=require("path");var __path__=self.__path__;return Opal.def(self,"$absolute?",$Pathname_absolute$ques$1=function(){return __path__.isAbsolute(this.path.$to_str())},$Pathname_absolute$ques$1.$$arity=0),Opal.def(self,"$relative?",$Pathname_relative$ques$2=function(){return this["$absolute?"]()["$!"]()},$Pathname_relative$ques$2.$$arity=0),Opal.def(self,"$to_path",$Pathname_to_path$3=function(){return this.path},$Pathname_to_path$3.$$arity=0),nil&&"to_path"}($nesting[0],0,$nesting)},Opal.modules["nodejs/env"]=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$alias=Opal.alias,$truthy=Opal.truthy,$send=Opal.send;return Opal.add_stubs(["$new","$to_s","$key?","$[]","$raise","$to_h","$keys","$merge"]),Opal.const_set($nesting[0],"ENV",$$($nesting,"Object").$new()),function(self,$parent_nesting){var $$$1,$$$eq$2,$key$ques$3,$empty$ques$4,$keys$5,$delete$6,$fetch$7,$to_s$8,$to_h$9,$merge$11,$nesting=[self].concat($parent_nesting);return Opal.def(self,"$[]",$$$1=function(name){return process.env[name]||nil},$$$1.$$arity=1),Opal.def(self,"$[]=",$$$eq$2=function(name,value){return process.env[name.$to_s()]=value.$to_s()},$$$eq$2.$$arity=2),Opal.def(self,"$key?",$key$ques$3=function(name){return process.env.hasOwnProperty(name)},$key$ques$3.$$arity=1),$alias(self,"has_key?","key?"),$alias(self,"include?","key?"),$alias(self,"member?","key?"),Opal.def(self,"$empty?",$empty$ques$4=function(){return 0===Object.keys(process.env).length},$empty$ques$4.$$arity=0),Opal.def(self,"$keys",$keys$5=function(){return Object.keys(process.env)},$keys$5.$$arity=0),Opal.def(self,"$delete",$delete$6=function(name){var value=process.env[name]||nil;return delete process.env[name],value},$delete$6.$$arity=1),Opal.def(self,"$fetch",$fetch$7=function(key,default_value){var $iter=$fetch$7.$$p,block=$iter||nil;return $iter&&($fetch$7.$$p=null),$iter&&($fetch$7.$$p=null),$truthy(this["$key?"](key))?this["$[]"](key):block!==nil?Opal.yield1(block,key):$truthy(void 0===default_value)?this.$raise($$($nesting,"KeyError"),"key not found"):default_value},$fetch$7.$$arity=-2),Opal.def(self,"$to_s",$to_s$8=function(){return"ENV"},$to_s$8.$$arity=0),$alias(self,"inspect","to_s"),Opal.def(self,"$to_h",$to_h$9=function(){var $$10;return $send(this.$keys(),"to_h",[],($$10=function(k){var self=null==$$10.$$s?this:$$10.$$s;return null==k&&(k=nil),[k,self["$[]"](k)]},$$10.$$s=this,$$10.$$arity=1,$$10))},$to_h$9.$$arity=0),$alias(self,"to_hash","to_h"),Opal.def(self,"$merge",$merge$11=function(keys){return this.$to_h().$merge(keys)},$merge$11.$$arity=1),nil&&"merge"}(Opal.get_singleton_class($$($nesting,"ENV")),$nesting)},Opal.modules.nodejs=function(Opal){var self=Opal.top,$nesting=[],$module=(Opal.nil,Opal.$$$,Opal.$$,Opal.module);return Opal.add_stubs(["$require"]),function($base,$parent_nesting){[$module($base,"NodeJS")].concat($parent_nesting)}($nesting[0],$nesting),self.$require("nodejs/kernel"),self.$require("nodejs/file"),self.$require("nodejs/dir"),self.$require("nodejs/io"),self.$require("nodejs/argf"),self.$require("nodejs/open-uri"),self.$require("nodejs/pathname"),self.$require("nodejs/env")};
