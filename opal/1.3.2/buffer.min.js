Opal.modules.native=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$module=Opal.module,$truthy=Opal.truthy,$send=Opal.send,$hash2=Opal.hash2,$range=Opal.range,$alias=Opal.alias,$klass=Opal.klass,$send2=Opal.send2,$find_super=Opal.find_super,$gvars=Opal.gvars;return Opal.add_stubs(["$try_convert","$native?","$respond_to?","$to_n","$raise","$inspect","$Native","$proc","$map!","$end_with?","$define_method","$[]","$convert","$call","$to_proc","$new","$each","$native_reader","$native_writer","$extend","$warn","$include","$is_a?","$map","$to_a","$_Array","$method_missing","$bind","$instance_method","$slice","$-","$length","$[]=","$enum_for","$===","$>=","$<<","$each_pair","$method_defined?","$_initialize","$name","$native_module"]),function($base,$parent_nesting){var $Native_is_a$ques$1,$Native_try_convert$2,$Native_convert$3,$Native_call$4,$Native_proc$5,$Native_included$22,self=$module($base,"Native"),$nesting=[self].concat($parent_nesting);Opal.defs(self,"$is_a?",$Native_is_a$ques$1=function(object,klass){try{return object instanceof this.$try_convert(klass)}catch(e){return!1}},$Native_is_a$ques$1.$$arity=2),Opal.defs(self,"$try_convert",$Native_try_convert$2=function(value,default$){return null==default$&&(default$=nil),this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():default$},$Native_try_convert$2.$$arity=-2),Opal.defs(self,"$convert",$Native_convert$3=function(value){return this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():void this.$raise($$($nesting,"ArgumentError"),value.$inspect()+" isn't native")},$Native_convert$3.$$arity=1),Opal.defs(self,"$call",$Native_call$4=function(obj,key,$a){var args,$iter=$Native_call$4.$$p,block=$iter||nil,self=this;$iter&&($Native_call$4.$$p=null),$iter&&($Native_call$4.$$p=null),args=Opal.slice.call(arguments,2,arguments.length);var prop=obj[key];if(prop instanceof Function){for(var converted=new Array(args.length),i=0,l=args.length;i<l;i++){var item=args[i],conv=self.$try_convert(item);converted[i]=conv===nil?item:conv}return block!==nil&&converted.push(block),self.$Native(prop.apply(obj,converted))}return self.$Native(prop)},$Native_call$4.$$arity=-3),Opal.defs(self,"$proc",$Native_proc$5=function(){var $$6,$iter=$Native_proc$5.$$p,block=$iter||nil;return $iter&&($Native_proc$5.$$p=null),$iter&&($Native_proc$5.$$p=null),$truthy(block)||this.$raise($$($nesting,"LocalJumpError"),"no block given"),$send($$$("::","Kernel"),"proc",[],($$6=function($a){var $post_args,args,$$7,self=null==$$6.$$s?this:$$6.$$s,instance=nil;if($post_args=Opal.slice.call(arguments,0,arguments.length),$send(args=$post_args,"map!",[],($$7=function(arg){var self=null==$$7.$$s?this:$$7.$$s;return null==arg&&(arg=nil),self.$Native(arg)},$$7.$$s=self,$$7.$$arity=1,$$7)),instance=self.$Native(this),this===Opal.global)return block.apply(self,args);var self_=block.$$s;block.$$s=null;try{return block.apply(instance,args)}finally{block.$$s=self_}},$$6.$$s=this,$$6.$$arity=-1,$$6))},$Native_proc$5.$$arity=0),function($base,$parent_nesting){var $Helpers_alias_native$8,$Helpers_native_reader$12,$Helpers_native_writer$15,$Helpers_native_accessor$18,self=$module($base,"Helpers"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$alias_native",$Helpers_alias_native$8=function(new$,$a,$b){var $post_args,$kwargs,old,as,$$9,$$10,$$11,$iter=$Helpers_alias_native$8.$$p,self=this;if($iter&&($Helpers_alias_native$8.$$p=null),$post_args=Opal.slice.call(arguments,1,arguments.length),null==($kwargs=Opal.extract_kwargs($post_args)))$kwargs=$hash2([],{});else if(!$kwargs.$$is_hash)throw Opal.ArgumentError.$new("expected kwargs");return $post_args.length>0&&(old=$post_args[0],$post_args.splice(0,1)),null==old&&(old=new$),null==(as=$kwargs.$$smap.as)&&(as=nil),$truthy(old["$end_with?"]("="))?$send(self,"define_method",[new$],($$9=function(value){var self=null==$$9.$$s?this:$$9.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.native[old["$[]"]($range(0,-2,!1))]=$$($nesting,"Native").$convert(value),value},$$9.$$s=self,$$9.$$arity=1,$$9)):$truthy(as)?$send(self,"define_method",[new$],($$10=function($c){var args,self=null==$$10.$$s?this:$$10.$$s,$iter=$$10.$$p,block=$iter||nil,value=nil;return null==self.native&&(self.native=nil),$iter&&($$10.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),value=$send($$($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc()),$truthy(value)?as.$new(value.$to_n()):nil},$$10.$$s=self,$$10.$$arity=-1,$$10)):$send(self,"define_method",[new$],($$11=function($c){var args,self=null==$$11.$$s?this:$$11.$$s,$iter=$$11.$$p,block=$iter||nil;return null==self.native&&(self.native=nil),$iter&&($$11.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),$send($$($nesting,"Native"),"call",[self.native,old].concat(Opal.to_a(args)),block.$to_proc())},$$11.$$s=self,$$11.$$arity=-1,$$11))},$Helpers_alias_native$8.$$arity=-2),Opal.def(self,"$native_reader",$Helpers_native_reader$12=function($a){var $post_args,$$13,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),$send($post_args,"each",[],($$13=function(name){var $$14,self=null==$$13.$$s?this:$$13.$$s;return null==name&&(name=nil),$send(self,"define_method",[name],($$14=function(){var self=null==$$14.$$s?this:$$14.$$s;return null==self.native&&(self.native=nil),self.$Native(self.native[name])},$$14.$$s=self,$$14.$$arity=0,$$14))},$$13.$$s=self,$$13.$$arity=1,$$13))},$Helpers_native_reader$12.$$arity=-1),Opal.def(self,"$native_writer",$Helpers_native_writer$15=function($a){var $post_args,$$16,self=this;return $post_args=Opal.slice.call(arguments,0,arguments.length),$send($post_args,"each",[],($$16=function(name){var $$17,self=null==$$16.$$s?this:$$16.$$s;return null==name&&(name=nil),$send(self,"define_method",[name+"="],($$17=function(value){var self=null==$$17.$$s?this:$$17.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.$Native(self.native[name]=value)},$$17.$$s=self,$$17.$$arity=1,$$17))},$$16.$$s=self,$$16.$$arity=1,$$16))},$Helpers_native_writer$15.$$arity=-1),Opal.def(self,"$native_accessor",$Helpers_native_accessor$18=function($a){var names,self=this;return names=Opal.slice.call(arguments,0,arguments.length),$send(self,"native_reader",Opal.to_a(names)),$send(self,"native_writer",Opal.to_a(names))},$Helpers_native_accessor$18.$$arity=-1)}($nesting[0],$nesting),function($base,$parent_nesting){var $Wrapper_initialize$19,$Wrapper_to_n$20,$Wrapper_included$21,self=$module($base,"Wrapper"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$initialize",$Wrapper_initialize$19=function(native$){return $truthy($$$("::","Kernel")["$native?"](native$))||$$$("::","Kernel").$raise($$($nesting,"ArgumentError"),native$.$inspect()+" isn't native"),this.native=native$},$Wrapper_initialize$19.$$arity=1),Opal.def(self,"$to_n",$Wrapper_to_n$20=function(){return null==this.native&&(this.native=nil),this.native},$Wrapper_to_n$20.$$arity=0),Opal.defs(self,"$included",$Wrapper_included$21=function(klass){return klass.$extend($$($nesting,"Helpers"))},$Wrapper_included$21.$$arity=1)}($nesting[0],$nesting),Opal.defs(self,"$included",$Native_included$22=function(base){return this.$warn("Including ::Native is deprecated. Please include Native::Wrapper instead."),base.$include($$($nesting,"Wrapper"))},$Native_included$22.$$arity=1)}($nesting[0],$nesting),function($base,$parent_nesting){var $Kernel_native$ques$23,$Kernel_Native$24,$Kernel_Array$27,self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$native?",$Kernel_native$ques$23=function(value){return null==value||!value.$$class},$Kernel_native$ques$23.$$arity=1),Opal.def(self,"$Native",$Kernel_Native$24=function(obj){var $$25,$$26,$iter=$Kernel_Native$24.$$p;return $iter&&($Kernel_Native$24.$$p=null),$truthy(null==obj)?nil:$truthy(this["$native?"](obj))?$$$($$($nesting,"Native"),"Object").$new(obj):$truthy(obj["$is_a?"]($$($nesting,"Array")))?$send(obj,"map",[],($$25=function(o){var self=null==$$25.$$s?this:$$25.$$s;return null==o&&(o=nil),self.$Native(o)},$$25.$$s=this,$$25.$$arity=1,$$25)):$truthy(obj["$is_a?"]($$($nesting,"Proc")))?$send(this,"proc",[],($$26=function($a){var args,self=null==$$26.$$s?this:$$26.$$s,$iter=$$26.$$p,block=$iter||nil;return $iter&&($$26.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),self.$Native($send(obj,"call",Opal.to_a(args),block.$to_proc()))},$$26.$$s=this,$$26.$$arity=-1,$$26)):obj},$Kernel_Native$24.$$arity=1),$alias(self,"_Array","Array"),Opal.def(self,"$Array",$Kernel_Array$27=function(object,$a){var args,$iter=$Kernel_Array$27.$$p,block=$iter||nil,self=this;return $iter&&($Kernel_Array$27.$$p=null),$iter&&($Kernel_Array$27.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),$truthy(self["$native?"](object))?$send($$$($$($nesting,"Native"),"Array"),"new",[object].concat(Opal.to_a(args)),block.$to_proc()).$to_a():self.$_Array(object)},$Kernel_Array$27.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Object_$eq_eq$28,$Object_has_key$ques$29,$Object_each$30,$Object_$$$31,$Object_$$$eq$32,$Object_merge$excl$33,$Object_respond_to$ques$34,$Object_respond_to_missing$ques$35,$Object_method_missing$36,$Object_nil$ques$37,$Object_is_a$ques$38,$Object_instance_of$ques$39,$Object_class$40,$Object_to_a$41,$Object_inspect$42,self=$klass($base,$super,"Object");[self].concat($parent_nesting);self.$$prototype.native=nil,self.$include($$$($$$("::","Native"),"Wrapper")),Opal.def(self,"$==",$Object_$eq_eq$28=function(other){return this.native===$$$("::","Native").$try_convert(other)},$Object_$eq_eq$28.$$arity=1),Opal.def(self,"$has_key?",$Object_has_key$ques$29=function(name){return Opal.hasOwnProperty.call(this.native,name)},$Object_has_key$ques$29.$$arity=1),$alias(self,"key?","has_key?"),$alias(self,"include?","has_key?"),$alias(self,"member?","has_key?"),Opal.def(self,"$each",$Object_each$30=function($a){var args,$iter=$Object_each$30.$$p,$yield=$iter||nil,self=this;if($iter&&($Object_each$30.$$p=null),args=Opal.slice.call(arguments,0,arguments.length),$yield!==nil){for(var key in self.native)Opal.yieldX($yield,[key,self.native[key]]);return self}return $send(self,"method_missing",["each"].concat(Opal.to_a(args)))},$Object_each$30.$$arity=-1),Opal.def(self,"$[]",$Object_$$$31=function(key){var prop=this.native[key];return prop instanceof Function?prop:$$$("::","Native").$call(this.native,key)},$Object_$$$31.$$arity=1),Opal.def(self,"$[]=",$Object_$$$eq$32=function(key,value){var native$;return native$=$$$("::","Native").$try_convert(value),$truthy(native$===nil)?this.native[key]=value:this.native[key]=native$},$Object_$$$eq$32.$$arity=2),Opal.def(self,"$merge!",$Object_merge$excl$33=function(other){for(var prop in other=$$$("::","Native").$convert(other))this.native[prop]=other[prop];return this},$Object_merge$excl$33.$$arity=1),Opal.def(self,"$respond_to?",$Object_respond_to$ques$34=function(name,include_all){return null==include_all&&(include_all=!1),$$$("::","Kernel").$instance_method("respond_to?").$bind(this).$call(name,include_all)},$Object_respond_to$ques$34.$$arity=-2),Opal.def(self,"$respond_to_missing?",$Object_respond_to_missing$ques$35=function(name,include_all){return null==include_all&&(include_all=!1),Opal.hasOwnProperty.call(this.native,name)},$Object_respond_to_missing$ques$35.$$arity=-2),Opal.def(self,"$method_missing",$Object_method_missing$36=function(mid,$a){var args,$iter=$Object_method_missing$36.$$p,block=$iter||nil,self=this,$writer=nil;return $iter&&($Object_method_missing$36.$$p=null),$iter&&($Object_method_missing$36.$$p=null),args=Opal.slice.call(arguments,1,arguments.length),"="===mid.charAt(mid.length-1)?($writer=[mid.$slice(0,$rb_minus(mid.$length(),1)),args["$[]"](0)],$send(self,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]):$send($$$("::","Native"),"call",[self.native,mid].concat(Opal.to_a(args)),block.$to_proc())},$Object_method_missing$36.$$arity=-2),Opal.def(self,"$nil?",$Object_nil$ques$37=function(){return!1},$Object_nil$ques$37.$$arity=0),Opal.def(self,"$is_a?",$Object_is_a$ques$38=function(klass){return Opal.is_a(this,klass)},$Object_is_a$ques$38.$$arity=1),$alias(self,"kind_of?","is_a?"),Opal.def(self,"$instance_of?",$Object_instance_of$ques$39=function(klass){return this.$$class===klass},$Object_instance_of$ques$39.$$arity=1),Opal.def(self,"$class",$Object_class$40=function(){return this.$$class},$Object_class$40.$$arity=0),Opal.def(self,"$to_a",$Object_to_a$41=function(options){var $iter=$Object_to_a$41.$$p,block=$iter||nil;return $iter&&($Object_to_a$41.$$p=null),$iter&&($Object_to_a$41.$$p=null),null==options&&(options=$hash2([],{})),$send($$$($$$("::","Native"),"Array"),"new",[this.native,options],block.$to_proc()).$to_a()},$Object_to_a$41.$$arity=-1),Opal.def(self,"$inspect",$Object_inspect$42=function(){return"#<Native:"+String(this.native)+">"},$Object_inspect$42.$$arity=0)}($$($nesting,"Native"),$$($nesting,"BasicObject"),$nesting),function($base,$super,$parent_nesting){var $Array_initialize$43,$Array_each$44,$Array_$$$45,$Array_$$$eq$46,$Array_last$47,$Array_length$48,$Array_inspect$49,self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting);self.$$prototype.named=self.$$prototype.native=self.$$prototype.get=self.$$prototype.block=self.$$prototype.set=self.$$prototype.length=nil,self.$include($$$($$($nesting,"Native"),"Wrapper")),self.$include($$($nesting,"Enumerable")),Opal.def(self,"$initialize",$Array_initialize$43=function(native$,options){var $iter=$Array_initialize$43.$$p,block=$iter||nil,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil;return $iter&&($Array_initialize$43.$$p=null),$iter&&($Array_initialize$43.$$p=null),null==options&&(options=$hash2([],{})),$send2(this,$find_super(this,"initialize",$Array_initialize$43,!1,!0),"initialize",[native$],null),this.get=$truthy($ret_or_1=options["$[]"]("get"))?$ret_or_1:options["$[]"]("access"),this.named=options["$[]"]("named"),this.set=$truthy($ret_or_2=options["$[]"]("set"))?$ret_or_2:options["$[]"]("access"),this.length=$truthy($ret_or_3=options["$[]"]("length"))?$ret_or_3:"length",this.block=block,$truthy(null==this.$length())?this.$raise($$($nesting,"ArgumentError"),"no length found on the array-like object"):nil},$Array_initialize$43.$$arity=-2),Opal.def(self,"$each",$Array_each$44=function(){var $iter=$Array_each$44.$$p,block=$iter||nil;if($iter&&($Array_each$44.$$p=null),$iter&&($Array_each$44.$$p=null),!$truthy(block))return this.$enum_for("each");for(var i=0,length=this.$length();i<length;i++)Opal.yield1(block,this["$[]"](i));return this},$Array_each$44.$$arity=0),Opal.def(self,"$[]",$Array_$$$45=function(index){var self=this,result=nil,$case=nil;return $case=index,result=$$($nesting,"String")["$==="]($case)||$$($nesting,"Symbol")["$==="]($case)?$truthy(self.named)?self.native[self.named](index):self.native[index]:$$($nesting,"Integer")["$==="]($case)?$truthy(self.get)?self.native[self.get](index):self.native[index]:nil,$truthy(result)?$truthy(self.block)?self.block.$call(result):self.$Native(result):nil},$Array_$$$45.$$arity=1),Opal.def(self,"$[]=",$Array_$$$eq$46=function(index,value){return $truthy(this.set)?this.native[this.set](index,$$($nesting,"Native").$convert(value)):this.native[index]=$$($nesting,"Native").$convert(value)},$Array_$$$eq$46.$$arity=2),Opal.def(self,"$last",$Array_last$47=function(count){var lhs,rhs,index=nil,result=nil;if(null==count&&(count=nil),$truthy(count)){for(index=$rb_minus(this.$length(),1),result=[];$truthy((rhs=0,"number"==typeof(lhs=index)&&"number"==typeof rhs?lhs>=rhs:lhs["$>="](rhs)));)result["$<<"](this["$[]"](index)),index=$rb_minus(index,1);return result}return this["$[]"]($rb_minus(this.$length(),1))},$Array_last$47.$$arity=-1),Opal.def(self,"$length",$Array_length$48=function(){return this.native[this.length]},$Array_length$48.$$arity=0),$alias(self,"to_ary","to_a"),Opal.def(self,"$inspect",$Array_inspect$49=function(){return this.$to_a().$inspect()},$Array_inspect$49.$$arity=0)}($$($nesting,"Native"),0,$nesting),function($base,$super,$parent_nesting){var $Numeric_to_n$50,self=$klass($base,null,"Numeric");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Numeric_to_n$50=function(){return this.valueOf()},$Numeric_to_n$50.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Proc_to_n$51,self=$klass($base,null,"Proc");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Proc_to_n$51=function(){return this},$Proc_to_n$51.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $String_to_n$52,self=$klass($base,null,"String");[self].concat($parent_nesting);Opal.def(self,"$to_n",$String_to_n$52=function(){return this.valueOf()},$String_to_n$52.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Regexp_to_n$53,self=$klass($base,null,"Regexp");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Regexp_to_n$53=function(){return this.valueOf()},$Regexp_to_n$53.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $MatchData_to_n$54,self=$klass($base,null,"MatchData");[self].concat($parent_nesting);self.$$prototype.matches=nil,Opal.def(self,"$to_n",$MatchData_to_n$54=function(){return this.matches},$MatchData_to_n$54.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Struct_to_n$55,self=$klass($base,null,"Struct"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$to_n",$Struct_to_n$55=function(){var $$56,result=nil;return result={},$send(this,"each_pair",[],(($$56=function(name,value){null==$$56.$$s||$$56.$$s;return null==name&&(name=nil),null==value&&(value=nil),result[name]=$$($nesting,"Native").$try_convert(value,value)}).$$s=this,$$56.$$arity=2,$$56)),result},$Struct_to_n$55.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Array_to_n$57,self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$to_n",$Array_to_n$57=function(){for(var result=[],i=0,length=this.length;i<length;i++){var obj=this[i];result.push($$($nesting,"Native").$try_convert(obj,obj))}return result},$Array_to_n$57.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Boolean_to_n$58,self=$klass($base,null,"Boolean");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Boolean_to_n$58=function(){return this.valueOf()},$Boolean_to_n$58.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Time_to_n$59,self=$klass($base,null,"Time");[self].concat($parent_nesting);Opal.def(self,"$to_n",$Time_to_n$59=function(){return this},$Time_to_n$59.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $NilClass_to_n$60,self=$klass($base,null,"NilClass");[self].concat($parent_nesting);Opal.def(self,"$to_n",$NilClass_to_n$60=function(){return null},$NilClass_to_n$60.$$arity=0)}($nesting[0],0,$nesting),$truthy($$($nesting,"Hash")["$method_defined?"]("_initialize"))||function($base,$super,$parent_nesting){var $Hash_initialize$61,$Hash_to_n$62,self=$klass($base,null,"Hash"),$nesting=[self].concat($parent_nesting);$alias(self,"_initialize","initialize"),Opal.def(self,"$initialize",$Hash_initialize$61=function(defaults){var $iter=$Hash_initialize$61.$$p,block=$iter||nil,self=this;if($iter&&($Hash_initialize$61.$$p=null),$iter&&($Hash_initialize$61.$$p=null),null!=defaults&&(void 0===defaults.constructor||defaults.constructor===Object)){var key,value,smap=self.$$smap,keys=self.$$keys;for(key in defaults)!(value=defaults[key])||void 0!==value.constructor&&value.constructor!==Object?value&&value.$$is_array?(value=value.map((function(item){return!item||void 0!==item.constructor&&item.constructor!==Object?self.$Native(item):$$($nesting,"Hash").$new(item)})),smap[key]=value):smap[key]=self.$Native(value):smap[key]=$$($nesting,"Hash").$new(value),keys.push(key);return self}return $send(self,"_initialize",[defaults],block.$to_proc())},$Hash_initialize$61.$$arity=-1),Opal.def(self,"$to_n",$Hash_to_n$62=function(){for(var key,value,result={},keys=this.$$keys,smap=this.$$smap,i=0,length=keys.length;i<length;i++)value=(key=keys[i]).$$is_string?smap[key]:(key=key.key).value,result[key]=$$($nesting,"Native").$try_convert(value,value);return result},$Hash_to_n$62.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Module_native_module$63,self=$klass($base,null,"Module");[self].concat($parent_nesting);Opal.def(self,"$native_module",$Module_native_module$63=function(){return Opal.global[this.$name()]=this},$Module_native_module$63.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Class_native_alias$64,$Class_native_class$65,self=$klass($base,null,"Class"),$nesting=[self].concat($parent_nesting);Opal.def(self,"$native_alias",$Class_native_alias$64=function(new_jsid,existing_mid){var aliased=this.prototype["$"+existing_mid];aliased||this.$raise($$($nesting,"NameError").$new("undefined method `"+existing_mid+"' for class `"+this.$inspect()+"'",existing_mid)),this.prototype[new_jsid]=aliased},$Class_native_alias$64.$$arity=2),Opal.def(self,"$native_class",$Class_native_class$65=function(){return this.$native_module(),this.new=this.$new},$Class_native_class$65.$$arity=0)}($nesting[0],0,$nesting),$gvars.$=$gvars.global=self.$Native(Opal.global)},Opal.modules["buffer/array"]=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$gvars=Opal.gvars,$send2=Opal.send2,$find_super=Opal.find_super,$truthy=Opal.truthy,$alias=Opal.alias;return Opal.add_stubs(["$include","$[]","$name_for","$attr_reader","$==","$for","$to_n","$enum_for"]),function($base,$super,$parent_nesting){var $nesting=[$klass($base,null,"Buffer")].concat($parent_nesting);return function($base,$super,$parent_nesting){var $Array_for$1,$Array_initialize$2,$Array_bits$3,$Array_$$$4,$Array_$$$eq$5,$Array_bytesize$6,$Array_each$7,$Array_length$8,$Array_merge$excl$9,self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting);return self.$$prototype.native=nil,self.$include($$$($$($nesting,"Native"),"Wrapper")),Opal.defs(self,"$for",$Array_for$1=function(bits,type){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]($$($nesting,"Buffer").$name_for(bits,type)+"Array")},$Array_for$1.$$arity=2),self.$include($$($nesting,"Enumerable")),self.$attr_reader("buffer","type"),Opal.def(self,"$initialize",$Array_initialize$2=function(buffer,bits,type){var $iter=$Array_initialize$2.$$p;if($iter&&($Array_initialize$2.$$p=null),null==bits&&(bits=nil),null==type&&(type=nil),$$($nesting,"Native")["$=="](buffer))$send2(this,$find_super(this,"initialize",$Array_initialize$2,!1,!0),"initialize",[buffer],null);else{var klass=$$($nesting,"Array").$for(bits,type);$send2(this,$find_super(this,"initialize",$Array_initialize$2,!1,!0),"initialize",[new klass(buffer.$to_n())],null)}return this.buffer=buffer,this.type=type},$Array_initialize$2.$$arity=-2),Opal.def(self,"$bits",$Array_bits$3=function(){return 8*this.native.BYTES_PER_ELEMENT},$Array_bits$3.$$arity=0),Opal.def(self,"$[]",$Array_$$$4=function(index,offset){return null==offset&&(offset=nil),$truthy(offset)?this.native.subarray(index,offset):this.native[index]},$Array_$$$4.$$arity=-2),Opal.def(self,"$[]=",$Array_$$$eq$5=function(index,value){return this.native[index]=value},$Array_$$$eq$5.$$arity=2),Opal.def(self,"$bytesize",$Array_bytesize$6=function(){return this.native.byteLength},$Array_bytesize$6.$$arity=0),Opal.def(self,"$each",$Array_each$7=function(){var $iter=$Array_each$7.$$p,$yield=$iter||nil;if($iter&&($Array_each$7.$$p=null),$yield===nil)return this.$enum_for("each");for(var i=0,length=this.native.length;i<length;i++)Opal.yield1($yield,this.native[i]);return this},$Array_each$7.$$arity=0),Opal.def(self,"$length",$Array_length$8=function(){return this.native.length},$Array_length$8.$$arity=0),Opal.def(self,"$merge!",$Array_merge$excl$9=function(other,offset){return this.native.set(other.$to_n(),offset)},$Array_merge$excl$9.$$arity=-2),$alias(self,"size","length")}($nesting[0],0,$nesting)}($nesting[0],0,$nesting)},Opal.modules["buffer/view"]=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$gvars=Opal.gvars,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$alias=Opal.alias;return Opal.add_stubs(["$include","$!","$nil?","$[]","$attr_reader","$native?","$to_n","$name_for"]),function($base,$super,$parent_nesting){var $nesting=[$klass($base,null,"Buffer")].concat($parent_nesting);return function($base,$super,$parent_nesting){var $View_supported$ques$1,$View_initialize$2,$View_length$3,$View_get$4,$View_set$5,$View_get_int8$6,$View_set_int8$7,$View_get_uint8$8,$View_set_uint8$9,$View_get_int16$10,$View_set_int16$11,$View_get_uint16$12,$View_set_uint16$13,$View_get_int32$14,$View_set_int32$15,$View_get_uint32$16,$View_set_uint32$17,$View_get_float32$18,$View_set_float32$19,$View_get_float64$20,$View_set_float64$21,self=$klass($base,null,"View"),$nesting=[self].concat($parent_nesting);return self.$$prototype.native=nil,self.$include($$$($$($nesting,"Native"),"Wrapper")),Opal.defs(self,"$supported?",$View_supported$ques$1=function(){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]("DataView")["$nil?"]()["$!"]()},$View_supported$ques$1.$$arity=0),self.$attr_reader("buffer","offset"),Opal.def(self,"$initialize",$View_initialize$2=function(buffer,offset,length){var $iter=$View_initialize$2.$$p,$ret_or_1=nil;return $iter&&($View_initialize$2.$$p=null),null==offset&&(offset=nil),null==length&&(length=nil),$truthy(this["$native?"](buffer))?$send2(this,$find_super(this,"initialize",$View_initialize$2,!1,!0),"initialize",[buffer],null):$truthy($truthy($ret_or_1=offset)?length:$ret_or_1)?$send2(this,$find_super(this,"initialize",$View_initialize$2,!1,!0),"initialize",[new DataView(buffer.$to_n(),offset.$to_n(),length.$to_n())],null):$truthy(offset)?$send2(this,$find_super(this,"initialize",$View_initialize$2,!1,!0),"initialize",[new DataView(buffer.$to_n(),offset.$to_n())],null):$send2(this,$find_super(this,"initialize",$View_initialize$2,!1,!0),"initialize",[new DataView(buffer.$to_n())],null),this.buffer=buffer,this.offset=offset},$View_initialize$2.$$arity=-2),Opal.def(self,"$length",$View_length$3=function(){return this.native.byteLength},$View_length$3.$$arity=0),$alias(self,"size","length"),Opal.def(self,"$get",$View_get$4=function(offset,bits,type,little){return null==bits&&(bits=8),null==type&&(type="unsigned"),null==little&&(little=!1),this.native["get"+$$($nesting,"Buffer").$name_for(bits,type)](offset,little)},$View_get$4.$$arity=-2),$alias(self,"[]","get"),Opal.def(self,"$set",$View_set$5=function(offset,value,bits,type,little){return null==bits&&(bits=8),null==type&&(type="unsigned"),null==little&&(little=!1),this.native["set"+$$($nesting,"Buffer").$name_for(bits,type)](offset,value,little)},$View_set$5.$$arity=-3),$alias(self,"[]=","set"),Opal.def(self,"$get_int8",$View_get_int8$6=function(offset,little){return null==little&&(little=!1),this.native.getInt8(offset,little)},$View_get_int8$6.$$arity=-2),Opal.def(self,"$set_int8",$View_set_int8$7=function(offset,value,little){return null==little&&(little=!1),this.native.setInt8(offset,value,little)},$View_set_int8$7.$$arity=-3),Opal.def(self,"$get_uint8",$View_get_uint8$8=function(offset,little){return null==little&&(little=!1),this.native.getUint8(offset,little)},$View_get_uint8$8.$$arity=-2),Opal.def(self,"$set_uint8",$View_set_uint8$9=function(offset,value,little){return null==little&&(little=!1),this.native.setUint8(offset,value,little)},$View_set_uint8$9.$$arity=-3),Opal.def(self,"$get_int16",$View_get_int16$10=function(offset,little){return null==little&&(little=!1),this.native.getInt16(offset,little)},$View_get_int16$10.$$arity=-2),Opal.def(self,"$set_int16",$View_set_int16$11=function(offset,value,little){return null==little&&(little=!1),this.native.setInt16(offset,value,little)},$View_set_int16$11.$$arity=-3),Opal.def(self,"$get_uint16",$View_get_uint16$12=function(offset,little){return null==little&&(little=!1),this.native.getUint16(offset,little)},$View_get_uint16$12.$$arity=-2),Opal.def(self,"$set_uint16",$View_set_uint16$13=function(offset,value,little){return null==little&&(little=!1),this.native.setUint16(offset,value,little)},$View_set_uint16$13.$$arity=-3),Opal.def(self,"$get_int32",$View_get_int32$14=function(offset,little){return null==little&&(little=!1),this.native.getInt32(offset,little)},$View_get_int32$14.$$arity=-2),Opal.def(self,"$set_int32",$View_set_int32$15=function(offset,value,little){return null==little&&(little=!1),this.native.setInt32(offset,value,little)},$View_set_int32$15.$$arity=-3),Opal.def(self,"$get_uint32",$View_get_uint32$16=function(offset,little){return null==little&&(little=!1),this.native.getUint32(offset,little)},$View_get_uint32$16.$$arity=-2),Opal.def(self,"$set_uint32",$View_set_uint32$17=function(offset,value,little){return null==little&&(little=!1),this.native.setUint32(offset,value,little)},$View_set_uint32$17.$$arity=-3),Opal.def(self,"$get_float32",$View_get_float32$18=function(offset,little){return null==little&&(little=!1),this.native.getFloat32(offset,little)},$View_get_float32$18.$$arity=-2),Opal.def(self,"$set_float32",$View_set_float32$19=function(offset,value,little){return null==little&&(little=!1),this.native.setFloat32(offset,value,little)},$View_set_float32$19.$$arity=-3),Opal.def(self,"$get_float64",$View_get_float64$20=function(offset,little){return null==little&&(little=!1),this.native.getFloat64(offset,little)},$View_get_float64$20.$$arity=-2),Opal.def(self,"$set_float64",$View_set_float64$21=function(offset,value,little){return null==little&&(little=!1),this.native.setFloat64(offset,value,little)},$View_set_float64$21.$$arity=-3),nil&&"set_float64"}($nesting[0],0,$nesting)}($nesting[0],0,$nesting)},Opal.modules.buffer=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$klass=Opal.klass,$gvars=Opal.gvars,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$alias=Opal.alias;return Opal.add_stubs(["$require","$include","$!","$nil?","$[]","$===","$native?","$new","$pack","$to_a"]),self.$require("native"),self.$require("buffer/array"),self.$require("buffer/view"),function($base,$super,$parent_nesting){var $Buffer_supported$ques$1,$Buffer_name_for$2,$Buffer_initialize$3,$Buffer_length$4,$Buffer_to_a$5,$Buffer_view$6,$Buffer_to_s$7,self=$klass($base,null,"Buffer"),$nesting=[self].concat($parent_nesting);return self.$$prototype.native=nil,self.$include($$$($$($nesting,"Native"),"Wrapper")),Opal.defs(self,"$supported?",$Buffer_supported$ques$1=function(){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]("ArrayBuffer")["$nil?"]()["$!"]()},$Buffer_supported$ques$1.$$arity=0),Opal.defs(self,"$name_for",$Buffer_name_for$2=function(bits,type){var $case=nil;return""+("unsigned"["$==="]($case=type)?"Uint":"signed"["$==="]($case)?"Int":"float"["$==="]($case)?"Float":nil)+bits},$Buffer_name_for$2.$$arity=2),Opal.def(self,"$initialize",$Buffer_initialize$3=function(size,bits){var $iter=$Buffer_initialize$3.$$p;return $iter&&($Buffer_initialize$3.$$p=null),null==bits&&(bits=8),$truthy(this["$native?"](size))?$send2(this,$find_super(this,"initialize",$Buffer_initialize$3,!1,!0),"initialize",[size],null):$send2(this,$find_super(this,"initialize",$Buffer_initialize$3,!1,!0),"initialize",[new ArrayBuffer(size*(bits/8))],null)},$Buffer_initialize$3.$$arity=-2),Opal.def(self,"$length",$Buffer_length$4=function(){return this.native.byteLength},$Buffer_length$4.$$arity=0),$alias(self,"size","length"),Opal.def(self,"$to_a",$Buffer_to_a$5=function(bits,type){return null==bits&&(bits=8),null==type&&(type="unsigned"),$$($nesting,"Array").$new(this,bits,type)},$Buffer_to_a$5.$$arity=-1),Opal.def(self,"$view",$Buffer_view$6=function(offset,length){return null==offset&&(offset=nil),null==length&&(length=nil),$$($nesting,"View").$new(this,offset,length)},$Buffer_view$6.$$arity=-1),Opal.def(self,"$to_s",$Buffer_to_s$7=function(){return this.$to_a().$to_a().$pack("c*")},$Buffer_to_s$7.$$arity=0),nil&&"to_s"}($nesting[0],0,$nesting)};
