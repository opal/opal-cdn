Opal.modules.observer=function(Opal){Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$module=Opal.module,$truthy=Opal.truthy,$hash2=Opal.hash2,$send=Opal.send;return Opal.add_stubs(["$respond_to?","$raise","$new","$to_s","$[]=","$-","$delete","$clear","$size","$each","$send"]),function($base,$parent_nesting){var $Observable_add_observer$1,$Observable_delete_observer$2,$Observable_delete_observers$3,$Observable_count_observers$4,$Observable_changed$5,$Observable_changed$ques$6,$Observable_notify_observers$7,self=$module($base,"Observable"),$nesting=[self].concat($parent_nesting);return Opal.def(self,"$add_observer",$Observable_add_observer$1=function(observer,func){var $a,$writer,lhs,rhs;return null==this.observer_peers&&(this.observer_peers=nil),null==func&&(func="update"),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)||(this.observer_peers=$hash2([],{})),$truthy(observer["$respond_to?"](func))||this.$raise($$($nesting,"NoMethodError").$new("observer does not respond to `"+func.$to_s()+"'",func.$to_s())),$writer=[observer,func],$send(this.observer_peers,"[]=",Opal.to_a($writer)),$writer[(lhs=$writer.length,rhs=1,"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs))]},$Observable_add_observer$1.$$arity=-2),Opal.def(self,"$delete_observer",$Observable_delete_observer$2=function(observer){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$delete(observer):nil},$Observable_delete_observer$2.$$arity=1),Opal.def(self,"$delete_observers",$Observable_delete_observers$3=function(){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$clear():nil},$Observable_delete_observers$3.$$arity=0),Opal.def(self,"$count_observers",$Observable_count_observers$4=function(){var $a;return null==this.observer_peers&&(this.observer_peers=nil),$truthy(null!=($a=this.observer_peers)&&$a!==nil?"instance-variable":nil)?this.observer_peers.$size():0},$Observable_count_observers$4.$$arity=0),Opal.def(self,"$changed",$Observable_changed$5=function(state){return null==state&&(state=!0),this.observer_state=state},$Observable_changed$5.$$arity=-1),Opal.def(self,"$changed?",$Observable_changed$ques$6=function(){var $a,self=this,$ret_or_1=nil;return null==self.observer_state&&(self.observer_state=nil),!!$truthy($truthy(($a=self.observer_state,$ret_or_1=null!=$a&&$a!==nil?"instance-variable":nil))?self.observer_state:$ret_or_1)},$Observable_changed$ques$6.$$arity=0),Opal.def(self,"$notify_observers",$Observable_notify_observers$7=function($a){var $post_args,arg,$b,$c,$$8,self=this,$ret_or_2=nil;return null==self.observer_state&&(self.observer_state=nil),null==self.observer_peers&&(self.observer_peers=nil),$post_args=Opal.slice.call(arguments,0,arguments.length),arg=$post_args,$truthy($truthy(($b=self.observer_state,$ret_or_2=null!=$b&&$b!==nil?"instance-variable":nil))?self.observer_state:$ret_or_2)?($truthy(null!=($c=self.observer_peers)&&$c!==nil?"instance-variable":nil)&&$send(self.observer_peers,"each",[],(($$8=function(k,v){null==$$8.$$s||$$8.$$s;return null==k&&(k=nil),null==v&&(v=nil),$send(k,"send",[v].concat(Opal.to_a(arg)))}).$$s=self,$$8.$$arity=2,$$8)),self.observer_state=!1):nil},$Observable_notify_observers$7.$$arity=-1),nil&&"notify_observers"}($nesting[0],$nesting)};
