Opal.modules.prettyprint=function(Opal){function $rb_times(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs*rhs:lhs["$*"](rhs)}function $rb_lt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs<rhs:lhs["$<"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$klass=Opal.klass,$send=Opal.send,$truthy=Opal.truthy;return Opal.add_stubs(["$dup","$lambda","$*","$new","$to_proc","$flush","$attr_reader","$last","$<","$+","$deq","$empty?","$breakables","$shift","$output","$-","$width","$!","$===","$first","$length","$<<","$add","$break_outmost_groups","$group","$breakable","$break?","$call","$text","$group_sub","$nest","$depth","$push","$enq","$pop","$delete","$each","$clear","$indent","$current_group","$newline","$genspace","$group_queue","$[]","$downto","$slice!","$break","$[]="]),function($base,$super,$parent_nesting){var $PrettyPrint_format$1,$PrettyPrint_singleline_format$3,$PrettyPrint_initialize$4,$PrettyPrint_current_group$6,$PrettyPrint_break_outmost_groups$7,$PrettyPrint_text$8,$PrettyPrint_fill_breakable$9,$PrettyPrint_breakable$11,$PrettyPrint_group$12,$PrettyPrint_group_sub$15,$PrettyPrint_nest$16,$PrettyPrint_flush$17,self=$klass($base,null,"PrettyPrint"),$nesting=[self].concat($parent_nesting);return self.$$prototype.group_stack=self.$$prototype.maxwidth=self.$$prototype.output_width=self.$$prototype.buffer_width=self.$$prototype.group_queue=self.$$prototype.buffer=self.$$prototype.output=self.$$prototype.newline=self.$$prototype.genspace=self.$$prototype.indent=nil,Opal.defs($$($nesting,"PrettyPrint"),"$format",$PrettyPrint_format$1=function(output,maxwidth,newline,genspace){var $$2,$iter=$PrettyPrint_format$1.$$p,$yield=$iter||nil,q=nil;return $iter&&($PrettyPrint_format$1.$$p=null),null==output&&(output="".$dup()),null==maxwidth&&(maxwidth=79),null==newline&&(newline="\n"),null==genspace&&(genspace=$send(this,"lambda",[],(($$2=function(n){null==$$2.$$s||$$2.$$s;return null==n&&(n=nil),$rb_times(" ",n)}).$$s=this,$$2.$$arity=1,$$2))),q=$send($$($nesting,"PrettyPrint"),"new",[output,maxwidth,newline],genspace.$to_proc()),Opal.yield1($yield,q),q.$flush(),output},$PrettyPrint_format$1.$$arity=-1),Opal.defs($$($nesting,"PrettyPrint"),"$singleline_format",$PrettyPrint_singleline_format$3=function(output,maxwidth,newline,genspace){var q,$iter=$PrettyPrint_singleline_format$3.$$p,$yield=$iter||nil;return $iter&&($PrettyPrint_singleline_format$3.$$p=null),null==output&&(output="".$dup()),null==maxwidth&&(maxwidth=nil),null==newline&&(newline=nil),null==genspace&&(genspace=nil),q=$$($nesting,"SingleLine").$new(output),Opal.yield1($yield,q),output},$PrettyPrint_singleline_format$3.$$arity=-1),Opal.def(self,"$initialize",$PrettyPrint_initialize$4=function(output,maxwidth,newline){var $$5,root_group,$iter=$PrettyPrint_initialize$4.$$p,genspace=$iter||nil,self=this,$ret_or_1=nil;return $iter&&($PrettyPrint_initialize$4.$$p=null),$iter&&($PrettyPrint_initialize$4.$$p=null),null==output&&(output="".$dup()),null==maxwidth&&(maxwidth=79),null==newline&&(newline="\n"),self.output=output,self.maxwidth=maxwidth,self.newline=newline,self.genspace=$truthy($ret_or_1=genspace)?$ret_or_1:$send(self,"lambda",[],(($$5=function(n){return null==$$5.$$s||$$5.$$s,null==n&&(n=nil),$rb_times(" ",n)}).$$s=self,$$5.$$arity=1,$$5)),self.output_width=0,self.buffer_width=0,self.buffer=[],root_group=$$($nesting,"Group").$new(0),self.group_stack=[root_group],self.group_queue=$$($nesting,"GroupQueue").$new(root_group),self.indent=0},$PrettyPrint_initialize$4.$$arity=-1),self.$attr_reader("output"),self.$attr_reader("maxwidth"),self.$attr_reader("newline"),self.$attr_reader("genspace"),self.$attr_reader("indent"),self.$attr_reader("group_queue"),Opal.def(self,"$current_group",$PrettyPrint_current_group$6=function(){return this.group_stack.$last()},$PrettyPrint_current_group$6.$$arity=0),Opal.def(self,"$break_outmost_groups",$PrettyPrint_break_outmost_groups$7=function(){for(var self=this,group=nil,data=nil,$ret_or_2=nil,text=nil;$truthy($rb_lt(self.maxwidth,$rb_plus(self.output_width,self.buffer_width)));){if(!$truthy(group=self.group_queue.$deq()))return nil;for(;!$truthy(group.$breakables()["$empty?"]());)data=self.buffer.$shift(),self.output_width=data.$output(self.output,self.output_width),self.buffer_width=$rb_minus(self.buffer_width,data.$width());for(;$truthy($truthy($ret_or_2=self.buffer["$empty?"]()["$!"]())?$$($nesting,"Text")["$==="](self.buffer.$first()):$ret_or_2);)text=self.buffer.$shift(),self.output_width=text.$output(self.output,self.output_width),self.buffer_width=$rb_minus(self.buffer_width,text.$width())}},$PrettyPrint_break_outmost_groups$7.$$arity=0),Opal.def(self,"$text",$PrettyPrint_text$8=function(obj,width){var text=nil;return null==width&&(width=obj.$length()),$truthy(this.buffer["$empty?"]())?(this.output["$<<"](obj),this.output_width=$rb_plus(this.output_width,width)):(text=this.buffer.$last(),$truthy($$($nesting,"Text")["$==="](text))||(text=$$($nesting,"Text").$new(),this.buffer["$<<"](text)),text.$add(obj,width),this.buffer_width=$rb_plus(this.buffer_width,width),this.$break_outmost_groups())},$PrettyPrint_text$8.$$arity=-2),Opal.def(self,"$fill_breakable",$PrettyPrint_fill_breakable$9=function(sep,width){var $$10;return null==sep&&(sep=" "),null==width&&(width=sep.$length()),$send(this,"group",[],(($$10=function(){return(null==$$10.$$s?this:$$10.$$s).$breakable(sep,width)}).$$s=this,$$10.$$arity=0,$$10))},$PrettyPrint_fill_breakable$9.$$arity=-1),Opal.def(self,"$breakable",$PrettyPrint_breakable$11=function(sep,width){var group=nil;return null==sep&&(sep=" "),null==width&&(width=sep.$length()),group=this.group_stack.$last(),$truthy(group["$break?"]())?(this.$flush(),this.output["$<<"](this.newline),this.output["$<<"](this.genspace.$call(this.indent)),this.output_width=this.indent,this.buffer_width=0):(this.buffer["$<<"]($$($nesting,"Breakable").$new(sep,width,this)),this.buffer_width=$rb_plus(this.buffer_width,width),this.$break_outmost_groups())},$PrettyPrint_breakable$11.$$arity=-1),Opal.def(self,"$group",$PrettyPrint_group$12=function(indent,open_obj,close_obj,open_width,close_width){var $$13,$iter=$PrettyPrint_group$12.$$p,$yield=$iter||nil;return $iter&&($PrettyPrint_group$12.$$p=null),null==indent&&(indent=0),null==open_obj&&(open_obj=""),null==close_obj&&(close_obj=""),null==open_width&&(open_width=open_obj.$length()),null==close_width&&(close_width=close_obj.$length()),this.$text(open_obj,open_width),$send(this,"group_sub",[],($$13=function(){var $$14,self=null==$$13.$$s?this:$$13.$$s;return $send(self,"nest",[indent],(($$14=function(){null==$$14.$$s||$$14.$$s;return Opal.yieldX($yield,[])}).$$s=self,$$14.$$arity=0,$$14))},$$13.$$s=this,$$13.$$arity=0,$$13)),this.$text(close_obj,close_width)},$PrettyPrint_group$12.$$arity=-1),Opal.def(self,"$group_sub",$PrettyPrint_group_sub$15=function(){var $iter=$PrettyPrint_group_sub$15.$$p,$yield=$iter||nil,self=this,group=nil;return $iter&&($PrettyPrint_group_sub$15.$$p=null),group=$$($nesting,"Group").$new($rb_plus(self.group_stack.$last().$depth(),1)),self.group_stack.$push(group),self.group_queue.$enq(group),function(){try{return Opal.yieldX($yield,[])}finally{self.group_stack.$pop(),$truthy(group.$breakables()["$empty?"]())&&self.group_queue.$delete(group)}}()},$PrettyPrint_group_sub$15.$$arity=0),Opal.def(self,"$nest",$PrettyPrint_nest$16=function(indent){var $iter=$PrettyPrint_nest$16.$$p,$yield=$iter||nil,self=this;return $iter&&($PrettyPrint_nest$16.$$p=null),self.indent=$rb_plus(self.indent,indent),function(){try{return Opal.yieldX($yield,[])}finally{self.indent=$rb_minus(self.indent,indent)}}()},$PrettyPrint_nest$16.$$arity=1),Opal.def(self,"$flush",$PrettyPrint_flush$17=function(){var $$18;return $send(this.buffer,"each",[],($$18=function(data){var self=null==$$18.$$s?this:$$18.$$s;return null==self.output&&(self.output=nil),null==self.output_width&&(self.output_width=nil),null==data&&(data=nil),self.output_width=data.$output(self.output,self.output_width)},$$18.$$s=this,$$18.$$arity=1,$$18)),this.buffer.$clear(),this.buffer_width=0},$PrettyPrint_flush$17.$$arity=0),function($base,$super,$parent_nesting){var $Text_initialize$19,$Text_output$20,$Text_add$22,self=$klass($base,null,"Text");[self].concat($parent_nesting);self.$$prototype.objs=self.$$prototype.width=nil,Opal.def(self,"$initialize",$Text_initialize$19=function(){return this.objs=[],this.width=0},$Text_initialize$19.$$arity=0),self.$attr_reader("width"),Opal.def(self,"$output",$Text_output$20=function(out,output_width){var $$21;return $send(this.objs,"each",[],(($$21=function(obj){null==$$21.$$s||$$21.$$s;return null==obj&&(obj=nil),out["$<<"](obj)}).$$s=this,$$21.$$arity=1,$$21)),$rb_plus(output_width,this.width)},$Text_output$20.$$arity=2),Opal.def(self,"$add",$Text_add$22=function(obj,width){return this.objs["$<<"](obj),this.width=$rb_plus(this.width,width)},$Text_add$22.$$arity=2)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Breakable_initialize$23,$Breakable_output$24,self=$klass($base,null,"Breakable");[self].concat($parent_nesting);self.$$prototype.group=self.$$prototype.pp=self.$$prototype.indent=self.$$prototype.obj=self.$$prototype.width=nil,Opal.def(self,"$initialize",$Breakable_initialize$23=function(sep,width,q){return this.obj=sep,this.width=width,this.pp=q,this.indent=q.$indent(),this.group=q.$current_group(),this.group.$breakables().$push(this)},$Breakable_initialize$23.$$arity=3),self.$attr_reader("obj"),self.$attr_reader("width"),self.$attr_reader("indent"),Opal.def(self,"$output",$Breakable_output$24=function(out,output_width){return this.group.$breakables().$shift(),$truthy(this.group["$break?"]())?(out["$<<"](this.pp.$newline()),out["$<<"](this.pp.$genspace().$call(this.indent)),this.indent):($truthy(this.group.$breakables()["$empty?"]())&&this.pp.$group_queue().$delete(this.group),out["$<<"](this.obj),$rb_plus(output_width,this.width))},$Breakable_output$24.$$arity=2)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Group_initialize$25,$Group_break$26,$Group_break$ques$27,$Group_first$ques$28,self=$klass($base,null,"Group");[self].concat($parent_nesting);self.$$prototype.break=nil,Opal.def(self,"$initialize",$Group_initialize$25=function(depth){return this.depth=depth,this.breakables=[],this.break=!1},$Group_initialize$25.$$arity=1),self.$attr_reader("depth"),self.$attr_reader("breakables"),Opal.def(self,"$break",$Group_break$26=function(){return this.break=!0},$Group_break$26.$$arity=0),Opal.def(self,"$break?",$Group_break$ques$27=function(){return this.break},$Group_break$ques$27.$$arity=0),Opal.def(self,"$first?",$Group_first$ques$28=function(){var $a;return!$truthy(($a=this.first,null!=$a&&$a!==nil?"instance-variable":nil))&&(this.first=!1,!0)},$Group_first$ques$28.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $GroupQueue_initialize$29,$GroupQueue_enq$31,$GroupQueue_deq$32,$GroupQueue_delete$36,self=$klass($base,null,"GroupQueue");[self].concat($parent_nesting);self.$$prototype.queue=nil,Opal.def(self,"$initialize",$GroupQueue_initialize$29=function($a){var groups,$$30,self=this;return groups=Opal.slice.call(arguments,0,arguments.length),self.queue=[],$send(groups,"each",[],($$30=function(g){var self=null==$$30.$$s?this:$$30.$$s;return null==g&&(g=nil),self.$enq(g)},$$30.$$s=self,$$30.$$arity=1,$$30))},$GroupQueue_initialize$29.$$arity=-1),Opal.def(self,"$enq",$GroupQueue_enq$31=function(group){var depth;for(depth=group.$depth();!$truthy($rb_lt(depth,this.queue.$length()));)this.queue["$<<"]([]);return this.queue["$[]"](depth)["$<<"](group)},$GroupQueue_enq$31.$$arity=1),Opal.def(self,"$deq",$GroupQueue_deq$32=function(){try{var $$33;return $send(this.queue,"each",[],($$33=function(gs){var $$34,$$35,self=null==$$33.$$s?this:$$33.$$s;return null==gs&&(gs=nil),$send($rb_minus(gs.$length(),1),"downto",[0],(($$34=function(i){null==$$34.$$s||$$34.$$s;var group=nil;if(null==i&&(i=nil),$truthy(gs["$[]"](i).$breakables()["$empty?"]()))return nil;(group=gs["$slice!"](i,1).$first()).$break(),Opal.ret(group)}).$$s=self,$$34.$$arity=1,$$34)),$send(gs,"each",[],(($$35=function(group){null==$$35.$$s||$$35.$$s;return null==group&&(group=nil),group.$break()}).$$s=self,$$35.$$arity=1,$$35)),gs.$clear()},$$33.$$s=this,$$33.$$arity=1,$$33)),nil}catch($returner){if($returner===Opal.returner)return $returner.$v;throw $returner}},$GroupQueue_deq$32.$$arity=0),Opal.def(self,"$delete",$GroupQueue_delete$36=function(group){return this.queue["$[]"](group.$depth()).$delete(group)},$GroupQueue_delete$36.$$arity=1)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $SingleLine_initialize$37,$SingleLine_text$38,$SingleLine_breakable$39,$SingleLine_nest$40,$SingleLine_group$41,$SingleLine_flush$42,$SingleLine_first$ques$43,self=$klass($base,null,"SingleLine");[self].concat($parent_nesting);return self.$$prototype.output=self.$$prototype.first=nil,Opal.def(self,"$initialize",$SingleLine_initialize$37=function(output,maxwidth,newline){return null==maxwidth&&(maxwidth=nil),null==newline&&(newline=nil),this.output=output,this.first=[!0]},$SingleLine_initialize$37.$$arity=-2),Opal.def(self,"$text",$SingleLine_text$38=function(obj,width){return null==width&&(width=nil),this.output["$<<"](obj)},$SingleLine_text$38.$$arity=-2),Opal.def(self,"$breakable",$SingleLine_breakable$39=function(sep,width){return null==sep&&(sep=" "),null==width&&(width=nil),this.output["$<<"](sep)},$SingleLine_breakable$39.$$arity=-1),Opal.def(self,"$nest",$SingleLine_nest$40=function(indent){var $iter=$SingleLine_nest$40.$$p,$yield=$iter||nil;return $iter&&($SingleLine_nest$40.$$p=null),Opal.yieldX($yield,[])},$SingleLine_nest$40.$$arity=1),Opal.def(self,"$group",$SingleLine_group$41=function(indent,open_obj,close_obj,open_width,close_width){var $iter=$SingleLine_group$41.$$p,$yield=$iter||nil;return $iter&&($SingleLine_group$41.$$p=null),null==indent&&(indent=nil),null==open_obj&&(open_obj=""),null==close_obj&&(close_obj=""),null==open_width&&(open_width=nil),null==close_width&&(close_width=nil),this.first.$push(!0),this.output["$<<"](open_obj),Opal.yieldX($yield,[]),this.output["$<<"](close_obj),this.first.$pop()},$SingleLine_group$41.$$arity=-1),Opal.def(self,"$flush",$SingleLine_flush$42=function(){return nil},$SingleLine_flush$42.$$arity=0),Opal.def(self,"$first?",$SingleLine_first$ques$43=function(){var result,$writer;return result=this.first["$[]"](-1),$writer=[-1,!1],$send(this.first,"[]=",Opal.to_a($writer)),$rb_minus($writer.length,1),result},$SingleLine_first$ques$43.$$arity=0),nil&&"first?"}($nesting[0],0,$nesting)}($nesting[0],0,$nesting)};
