Opal.modules.json=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$$=Opal.$$$,$$=Opal.$$,$module=Opal.module,$klass=Opal.klass,$send=Opal.send,$hash2=Opal.hash2,$truthy=Opal.truthy;return Opal.add_stubs(["$raise","$new","$push","$[]=","$-","$[]","$create_id","$json_create","$const_get","$attr_accessor","$create_id=","$===","$parse","$generate","$from_object","$merge","$to_json","$responds_to?","$to_io","$write","$to_s","$to_a","$strftime"]),function($base,$parent_nesting){var $JSON_$$$1,$JSON_parse$2,$JSON_parse$excl$3,$JSON_load$4,$JSON_from_object$5,$JSON_generate$6,$JSON_dump$7,self=$module($base,"JSON"),$nesting=[self].concat($parent_nesting),$writer=nil;!function($base,$super,$parent_nesting){[$klass($base,$super,"JSONError")].concat($parent_nesting)}($nesting[0],$$($nesting,"StandardError"),$nesting),function($base,$super,$parent_nesting){[$klass($base,$super,"ParserError")].concat($parent_nesting)}($nesting[0],$$($nesting,"JSONError"),$nesting);var $hasOwn=Opal.hasOwnProperty;function $parse(source){try{return JSON.parse(source)}catch(e){self.$raise($$$($$($nesting,"JSON"),"ParserError"),e.message)}}function to_opal(value,options){var klass,arr,hash,i,ii,k;switch(typeof value){case"string":case"number":return value;case"boolean":return!!value;case"undefined":return nil;case"object":if(!value)return nil;if(value.$$is_array){for(arr=options.array_class.$new(),i=0,ii=value.length;i<ii;i++)arr.$push(to_opal(value[i],options));return arr}for(k in hash=options.object_class.$new(),value)$hasOwn.call(value,k)&&($writer=[k,to_opal(value[k],options)],$send(hash,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]);return options.parse||(klass=hash["$[]"]($$($nesting,"JSON").$create_id()))==nil?hash:$$$("::","Object").$const_get(klass).$json_create(hash)}}(function(self,$parent_nesting){[self].concat($parent_nesting);self.$attr_accessor("create_id")})(Opal.get_singleton_class(self),$nesting),$writer=["json_class"],$send(self,"create_id=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],Opal.defs(self,"$[]",$JSON_$$$1=function(value,options){return null==options&&(options=$hash2([],{})),$truthy($$($nesting,"String")["$==="](value))?this.$parse(value,options):this.$generate(value,options)},$JSON_$$$1.$$arity=-2),Opal.defs(self,"$parse",$JSON_parse$2=function(source,options){return null==options&&(options=$hash2([],{})),this.$from_object($parse(source),options.$merge($hash2(["parse"],{parse:!0})))},$JSON_parse$2.$$arity=-2),Opal.defs(self,"$parse!",$JSON_parse$excl$3=function(source,options){return null==options&&(options=$hash2([],{})),this.$parse(source,options)},$JSON_parse$excl$3.$$arity=-2),Opal.defs(self,"$load",$JSON_load$4=function(source,options){return null==options&&(options=$hash2([],{})),this.$from_object($parse(source),options)},$JSON_load$4.$$arity=-2),Opal.defs(self,"$from_object",$JSON_from_object$5=function(js_object,options){var $writer=nil;return null==options&&(options=$hash2([],{})),$truthy(options["$[]"]("object_class"))||($writer=["object_class",$$($nesting,"Hash")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),$truthy(options["$[]"]("array_class"))||($writer=["array_class",$$($nesting,"Array")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),to_opal(js_object,options.$$smap)},$JSON_from_object$5.$$arity=-2),Opal.defs(self,"$generate",$JSON_generate$6=function(obj,options){return null==options&&(options=$hash2([],{})),obj.$to_json(options)},$JSON_generate$6.$$arity=-2),Opal.defs(self,"$dump",$JSON_dump$7=function(obj,io,limit){var string;return null==io&&(io=nil),null==limit&&(limit=nil),string=this.$generate(obj),$truthy(io)?($truthy(io["$responds_to?"]("to_io"))&&(io=io.$to_io()),io.$write(string),io):string},$JSON_dump$7.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Object_to_json$8,self=$klass($base,null,"Object");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Object_to_json$8=function(){return this.$to_s().$to_json()},$Object_to_json$8.$$arity=0)}($nesting[0],0,$nesting),function($base,$parent_nesting){var $Enumerable_to_json$9,self=$module($base,"Enumerable");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Enumerable_to_json$9=function(){return this.$to_a().$to_json()},$Enumerable_to_json$9.$$arity=0)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var $Array_to_json$10,self=$klass($base,null,"Array");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Array_to_json$10=function(){for(var result=[],i=0,length=this.length;i<length;i++)result.push(this[i].$to_json());return"["+result.join(",")+"]"},$Array_to_json$10.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Boolean_to_json$11,self=$klass($base,null,"Boolean");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Boolean_to_json$11=function(){return 1==this?"true":"false"},$Boolean_to_json$11.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Hash_to_json$12,self=$klass($base,null,"Hash");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Hash_to_json$12=function(){for(var key,value,result=[],i=0,keys=this.$$keys,length=keys.length;i<length;i++)(key=keys[i]).$$is_string?value=this.$$smap[key]:(value=key.value,key=key.key),result.push(key.$to_s().$to_json()+":"+value.$to_json());return"{"+result.join(",")+"}"},$Hash_to_json$12.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $NilClass_to_json$13,self=$klass($base,null,"NilClass");[self].concat($parent_nesting);Opal.def(self,"$to_json",$NilClass_to_json$13=function(){return"null"},$NilClass_to_json$13.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Numeric_to_json$14,self=$klass($base,null,"Numeric");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Numeric_to_json$14=function(){return this.toString()},$Numeric_to_json$14.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $String_to_json$15,self=$klass($base,null,"String");[self].concat($parent_nesting);Opal.def(self,"$to_json",$String_to_json$15=function(){return JSON.stringify(this)},$String_to_json$15.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Time_to_json$16,self=$klass($base,null,"Time");[self].concat($parent_nesting);Opal.def(self,"$to_json",$Time_to_json$16=function(){return this.$strftime("%FT%T%z").$to_json()},$Time_to_json$16.$$arity=0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var $Date_to_json$17,$Date_as_json$18,self=$klass($base,null,"Date");[self].concat($parent_nesting);return Opal.def(self,"$to_json",$Date_to_json$17=function(){return this.$to_s().$to_json()},$Date_to_json$17.$$arity=0),Opal.def(self,"$as_json",$Date_as_json$18=function(){return this.$to_s()},$Date_as_json$18.$$arity=0),nil&&"as_json"}($nesting[0],0,$nesting)};
