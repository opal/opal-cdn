Opal.modules["nashorn/io"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}Opal.top;var nil=Opal.nil,$send=(Opal.$$$,Opal.$$,Opal.send),$gvars=Opal.gvars,$writer=nil;return null==$gvars.stdout&&($gvars.stdout=nil),null==$gvars.stderr&&($gvars.stderr=nil),Opal.add_stubs(["$write_proc=","$-"]),$writer=[function(s){print(s)}],$send($gvars.stdout,"write_proc=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$writer=[function(s){print(s)}],$send($gvars.stderr,"write_proc=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},Opal.modules["corelib/file"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}Opal.top;var $nesting=[],nil=Opal.nil,$$=(Opal.$$$,Opal.$$),$truthy=Opal.truthy,$klass=Opal.klass,$alias=Opal.alias,$range=Opal.range,$send=Opal.send;return Opal.add_stubs(["$respond_to?","$to_path","$pwd","$split","$sub","$+","$unshift","$join","$home","$raise","$start_with?","$absolute_path","$coerce_to!","$basename","$empty?","$rindex","$[]","$nil?","$==","$-","$length","$gsub","$find","$=~","$map","$each_with_index","$flatten","$reject","$to_proc","$end_with?"]),function($base,$super,$parent_nesting){var self=$klass($base,$super,"File"),$nesting=[self].concat($parent_nesting),windows_root_rx=nil;return Opal.const_set($nesting[0],"Separator",Opal.const_set($nesting[0],"SEPARATOR","/")),Opal.const_set($nesting[0],"ALT_SEPARATOR",nil),Opal.const_set($nesting[0],"PATH_SEPARATOR",":"),Opal.const_set($nesting[0],"FNM_SYSCASE",0),windows_root_rx=/^[a-zA-Z]:(?:\\|\/)/,function(self,$parent_nesting){var $absolute_path$1,$expand_path$2,$dirname$3,$basename$4,$extname$5,$exist$ques$6,$directory$ques$7,$join$9,$split$12,$nesting=[self].concat($parent_nesting);function $coerce_to_path(path){return $truthy(path["$respond_to?"]("to_path"))&&(path=path.$to_path()),path=$$($nesting,"Opal")["$coerce_to!"](path,$$($nesting,"String"),"to_str")}function $sep_chars(){return $$($nesting,"ALT_SEPARATOR")===nil?Opal.escape_regexp($$($nesting,"SEPARATOR")):Opal.escape_regexp($rb_plus($$($nesting,"SEPARATOR"),$$($nesting,"ALT_SEPARATOR")))}return Opal.def(self,"$absolute_path",$absolute_path$1=function(path,basedir){var sep,sep_chars,path_abs,basedir_abs,part,new_parts=nil,$ret_or_1=nil,parts=nil,leading_sep=nil,abs=nil,new_path=nil;null==basedir&&(basedir=nil),sep=$$($nesting,"SEPARATOR"),sep_chars=$sep_chars(),new_parts=[],path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path,basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$($nesting,"Dir").$pwd(),path_abs=path.substr(0,sep.length)===sep||windows_root_rx.test(path),basedir_abs=basedir.substr(0,sep.length)===sep||windows_root_rx.test(basedir),$truthy(path_abs)?(parts=path.$split(Opal.regexp(["[",sep_chars,"]"])),leading_sep=windows_root_rx.test(path)?"":path.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=!0):(parts=$rb_plus(basedir.$split(Opal.regexp(["[",sep_chars,"]"])),path.$split(Opal.regexp(["[",sep_chars,"]"]))),leading_sep=windows_root_rx.test(basedir)?"":basedir.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=basedir_abs);for(var i=0,ii=parts.length;i<ii;i++)(part=parts[i])===nil||""===part&&(0===new_parts.length||abs)||"."===part&&(0===new_parts.length||abs)||(".."===part?new_parts.pop():new_parts.push(part));return abs||"."===parts[0]||new_parts.$unshift("."),new_path=new_parts.$join(sep),$truthy(abs)&&(new_path=$rb_plus(leading_sep,new_path)),new_path},$absolute_path$1.$$arity=-2),Opal.def(self,"$expand_path",$expand_path$2=function(path,basedir){var sep,sep_chars,home=nil,leading_sep=nil,home_path_regexp=nil;return null==basedir&&(basedir=nil),sep=$$($nesting,"SEPARATOR"),sep_chars=$sep_chars(),$truthy("~"===path[0]||basedir&&"~"===basedir[0])&&(home=$$($nesting,"Dir").$home(),$truthy(home)||this.$raise($$($nesting,"ArgumentError"),"couldn't find HOME environment -- expanding `~'"),leading_sep=windows_root_rx.test(home)?"":home.$sub(Opal.regexp(["^([",sep_chars,"]+).*$"]),"\\1"),$truthy(home["$start_with?"](leading_sep))||this.$raise($$($nesting,"ArgumentError"),"non-absolute home"),home=$rb_plus(home,sep),home_path_regexp=Opal.regexp(["^\\~(?:",sep,"|$)"]),path=path.$sub(home_path_regexp,home),$truthy(basedir)&&(basedir=basedir.$sub(home_path_regexp,home))),this.$absolute_path(path,basedir)},$expand_path$2.$$arity=-2),$alias(self,"realpath","expand_path"),Opal.def(self,"$dirname",$dirname$3=function(path){var sep_chars;sep_chars=$sep_chars();var absolute=(path=$coerce_to_path(path)).match(new RegExp("^["+sep_chars+"]"));return""===(path=(path=(path=path.replace(new RegExp("["+sep_chars+"]+$"),"")).replace(new RegExp("[^"+sep_chars+"]+$"),"")).replace(new RegExp("["+sep_chars+"]+$"),""))?absolute?"/":".":path},$dirname$3.$$arity=1),Opal.def(self,"$basename",$basename$4=function(name,suffix){var sep_chars;return null==suffix&&(suffix=nil),sep_chars=$sep_chars(),0==(name=$coerce_to_path(name)).length||(suffix=suffix!==nil?$$($nesting,"Opal")["$coerce_to!"](suffix,$$($nesting,"String"),"to_str"):null,name=(name=name.replace(new RegExp("(.)["+sep_chars+"]*$"),"$1")).replace(new RegExp("^(?:.*["+sep_chars+"])?([^"+sep_chars+"]+)$"),"$1"),".*"===suffix?name=name.replace(/\.[^\.]+$/,""):null!==suffix&&(suffix=Opal.escape_regexp(suffix),name=name.replace(new RegExp(suffix+"$"),""))),name},$basename$4.$$arity=-2),Opal.def(self,"$extname",$extname$5=function(path){var lhs,rhs,filename=nil,last_dot_idx=nil,$ret_or_2=nil;return path=$coerce_to_path(path),filename=this.$basename(path),$truthy(filename["$empty?"]())?"":(last_dot_idx=filename["$[]"]($range(1,-1,!1)).$rindex("."),$truthy($truthy($ret_or_2=last_dot_idx["$nil?"]())?$ret_or_2:$rb_plus(last_dot_idx,1)["$=="]((lhs=filename.$length(),rhs=1,"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs))))?"":filename["$[]"](Opal.Range.$new($rb_plus(last_dot_idx,1),-1,!1)))},$extname$5.$$arity=1),Opal.def(self,"$exist?",$exist$ques$6=function(path){return null!=Opal.modules[path]},$exist$ques$6.$$arity=1),$alias(self,"exists?","exist?"),Opal.def(self,"$directory?",$directory$ques$7=function(path){var $$8,files=nil;for(var key in files=[],Opal.modules)files.push(key);return path=path.$gsub(Opal.regexp(["(^.",$$($nesting,"SEPARATOR"),"+|",$$($nesting,"SEPARATOR"),"+$)"])),$send(files,"find",[],(($$8=function(f){null==$$8.$$s||$$8.$$s;return null==f&&(f=nil),f["$=~"](Opal.regexp(["^",path]))}).$$s=this,$$8.$$arity=1,$$8))},$directory$ques$7.$$arity=1),Opal.def(self,"$join",$join$9=function($a){var $post_args,paths,$$10,$$11,self=this,result=nil;return $post_args=Opal.slice.call(arguments,0,arguments.length),$truthy((paths=$post_args)["$empty?"]())?"":(result="",paths=$send(paths.$flatten().$each_with_index(),"map",[],(($$10=function(item,index){null==$$10.$$s||$$10.$$s;var $ret_or_3=nil,$ret_or_4=nil;return null==item&&(item=nil),null==index&&(index=nil),$truthy($truthy($ret_or_3=index["$=="](0))?item["$empty?"]():$ret_or_3)||$truthy($truthy($ret_or_4=paths.$length()["$=="]($rb_plus(index,1)))?item["$empty?"]():$ret_or_4)?$$($nesting,"SEPARATOR"):item}).$$s=self,$$10.$$arity=2,$$10)),paths=$send(paths,"reject",[],"empty?".$to_proc()),$send(paths,"each_with_index",[],(($$11=function(item,index){null==$$11.$$s||$$11.$$s;var next_item=nil,$ret_or_5=nil,$ret_or_6=nil;return null==item&&(item=nil),null==index&&(index=nil),next_item=paths["$[]"]($rb_plus(index,1)),$truthy(next_item["$nil?"]())?result=""+result+item:($truthy($truthy($ret_or_5=item["$end_with?"]($$($nesting,"SEPARATOR")))?next_item["$start_with?"]($$($nesting,"SEPARATOR")):$ret_or_5)&&(item=item.$sub(Opal.regexp([$$($nesting,"SEPARATOR"),"+$"]),"")),result=$truthy($truthy($ret_or_6=item["$end_with?"]($$($nesting,"SEPARATOR")))?$ret_or_6:next_item["$start_with?"]($$($nesting,"SEPARATOR")))?""+result+item:""+result+item+$$($nesting,"SEPARATOR"))}).$$s=self,$$11.$$arity=2,$$11)),result)},$join$9.$$arity=-1),Opal.def(self,"$split",$split$12=function(path){return path.$split($$($nesting,"SEPARATOR"))},$split$12.$$arity=1),nil&&"split"}(Opal.get_singleton_class(self),$nesting)}($nesting[0],$$($nesting,"IO"),$nesting)},Opal.modules["nashorn/file"]=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$klass=(Opal.$$$,Opal.$$,Opal.klass);return Opal.add_stubs(["$require"]),self.$require("corelib/file"),function($base,$super,$parent_nesting){var $File_read$1,$File_file$ques$2,$File_readable$ques$3,self=$klass($base,null,"File");[self].concat($parent_nesting);return Opal.defs(self,"$read",$File_read$1=function(path){var Paths=Java.type("java.nio.file.Paths"),lines=Java.type("java.nio.file.Files").readAllLines(Paths.get(path),Java.type("java.nio.charset.StandardCharsets").UTF_8),data=[];return lines.forEach((function(line){data.push(line)})),data.join("\n")},$File_read$1.$$arity=1),Opal.defs(self,"$file?",$File_file$ques$2=function(path){var Files=Java.type("java.nio.file.Files");return Files.exists(path)&&Files.isRegularFile(path)},$File_file$ques$2.$$arity=1),Opal.defs(self,"$readable?",$File_readable$ques$3=function(path){var Files=Java.type("java.nio.file.Files");return Files.exists(path)&&Files.isReadable(path)},$File_readable$ques$3.$$arity=1),nil&&"readable?"}($nesting[0],0,$nesting)},Opal.modules.nashorn=function(Opal){var self=Opal.top,$nesting=[],$module=(Opal.nil,Opal.$$$,Opal.$$,Opal.module);return Opal.add_stubs(["$require"]),function($base,$parent_nesting){[$module($base,"Nashorn")].concat($parent_nesting)}($nesting[0],$nesting),self.$require("nashorn/io"),self.$require("nashorn/file")};
