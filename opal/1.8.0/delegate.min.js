Opal.modules.ruby2_keywords=function(Opal){var self,$klass=Opal.klass,$truthy=Opal.truthy,$slice=Opal.slice,$def=Opal.def,$defs=Opal.defs,$return_self=Opal.return_self,$return_val=Opal.return_val,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,main=nil;return Opal.add_stubs("private_method_defined?,private,eval,respond_to?,method_defined?,dup"),self=$klass($nesting[0],null,"Module"),$truthy(self["$private_method_defined?"]("ruby2_keywords"))||(self.$private(),$def(self,"$ruby2_keywords",(function(name,$a){return $slice(arguments,1),nil}),-2)),main=$$("TOPLEVEL_BINDING").$eval("self"),$truthy(main["$respond_to?"]("ruby2_keywords",!0))||$defs(main,"$ruby2_keywords",(function(name,$a){return $slice(arguments,1),nil}),-2),function($base,$super){var self=$klass($base,null,"Proc");$truthy(self["$method_defined?"]("ruby2_keywords"))||$def(self,"$ruby2_keywords",$return_self)}($nesting[0]),function(self,$parent_nesting){return $truthy(self["$method_defined?"]("ruby2_keywords_hash?"))||$def(self,"$ruby2_keywords_hash?",$return_val(!1)),$truthy(self["$method_defined?"]("ruby2_keywords_hash"))?nil:$def(self,"$ruby2_keywords_hash",(function(hash){return hash.$dup()}))}(Opal.get_singleton_class($$("Hash")))},Opal.modules.delegate=function(Opal){var $freeze=Opal.freeze,$freeze_props=Opal.freeze_props,$klass=Opal.klass,$const_set=Opal.const_set,$Kernel=Opal.Kernel,$send=Opal.send,$truthy=Opal.truthy,$Object=Opal.Object,$defs=Opal.defs,$def=Opal.def,$slice=Opal.slice,$to_a=Opal.to_a,$send2=Opal.send2,$find_super=Opal.find_super,$not=Opal.not,$eqeqeq=Opal.eqeqeq,$to_ary=Opal.to_ary,$eqeq=Opal.eqeq,$ensure_kwargs=Opal.ensure_kwargs,$hash_get=Opal.hash_get,$return_ivar=Opal.return_ivar,$lambda=Opal.lambda,$rb_minus=Opal.rb_minus,$find_block_super=Opal.find_block_super,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("require,dup,class_eval,alias_method,each,undef_method,private_instance_methods,=~,include,const_get,__setobj__,ruby2_keywords,__getobj__,target_respond_to?,__send__,to_proc,private_method_defined?,method_defined?,bind_call,instance_method,!,warn,private_constant,private,===,respond_to?,|,methods,public_methods,protected_methods,equal?,==,!=,eql?,__raise__,reject,instance_variables,map,instance_variable_get,each_with_index,instance_variable_set,[],clone,freeze,public_instance_methods,new,public_api,protected_instance_methods,-,module_eval,define_method,delegating_block,protected,define_singleton_method,instance_methods,include?,raise,public_instance_method"),self.$require("ruby2_keywords"),function($base,$super,$parent_nesting){var kernel,self=$klass($base,$super,"Delegator"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$const_set($nesting[0],"VERSION","0.2.0"),kernel=$Kernel.$dup(),$send(kernel,"class_eval",[],(function $Delegator$1(){var self=null==$Delegator$1.$$s?this:$Delegator$1.$$s;return self.$alias_method("__raise__","raise"),$send(["to_s","inspect","!~","===","<=>","hash"],"each",[],(function $$2(m){return null==m&&(m=nil),(null==$$2.$$s?this:$$2.$$s).$undef_method(m)}),{$$s:self}),$send(self.$private_instance_methods(),"each",[],(function $$3(m){var self=null==$$3.$$s?this:$$3.$$s;return null==m&&(m=nil),$truthy(/^block_given\?$|^iterator\?$|^__.*__$/["$=~"](m))?nil:self.$undef_method(m)}),{$$s:self})}),{$$s:self}),self.$include(kernel),$defs(self,"$const_missing",(function(n){return $Object.$const_get(n)})),$def(self,"$initialize",(function(obj){return this.$__setobj__(obj)})),self.$ruby2_keywords($def(self,"$method_missing",(function $$method_missing(m,$a){var args,block=$$method_missing.$$p||nil,self=this,r=nil,target=nil;return $$method_missing.$$p=null,args=$slice(arguments,1),r=!0,target=$send(self,"__getobj__",[],(function(){return r=!1})),$truthy(r)&&$truthy(self["$target_respond_to?"](target,m,!1))?$send(target,"__send__",[m].concat($to_a(args)),block.$to_proc()):$truthy($Kernel["$method_defined?"](m))||$truthy($Kernel["$private_method_defined?"](m))?$send($Kernel.$instance_method(m),"bind_call",[self].concat($to_a(args)),block.$to_proc()):$send2(self,$find_super(self,"method_missing",$$method_missing,!1,!0),"method_missing",[m].concat($to_a(args)),block.$to_proc())}),-2)),$def(self,"$respond_to_missing?",(function(m,include_private){var target,$ret_or_1,r=nil;return r=!0,target=$send(this,"__getobj__",[],(function(){return r=!1})),r=$truthy($ret_or_1=r)?this["$target_respond_to?"](target,m,include_private):$ret_or_1,$truthy(r)&&$truthy(include_private)&&$not(this["$target_respond_to?"](target,m,!1))?(this.$warn("delegator does not forward private method #"+m,new Map([["uplevel",3]])),!1):r})),$const_set($nesting[0],"KERNEL_RESPOND_TO",$Kernel.$instance_method("respond_to?")),self.$private_constant("KERNEL_RESPOND_TO"),self.$private($def(self,"$target_respond_to?",(function(target,m,include_private){return $eqeqeq($$("Object"),target)||$truthy($$("KERNEL_RESPOND_TO").$bind_call(target,"respond_to?"))?target["$respond_to?"](m,include_private):$$("KERNEL_RESPOND_TO").$bind_call(target,m,include_private)}))),$def(self,"$methods",(function $$methods(all){var $yield=$$methods.$$p||nil;return $$methods.$$p=null,null==all&&(all=!0),this.$__getobj__().$methods(all)["$|"]($send2(this,$find_super(this,"methods",$$methods,!1,!0),"methods",[all],$yield))}),-1),$def(self,"$public_methods",(function $$public_methods(all){var $yield=$$public_methods.$$p||nil;return $$public_methods.$$p=null,null==all&&(all=!0),this.$__getobj__().$public_methods(all)["$|"]($send2(this,$find_super(this,"public_methods",$$public_methods,!1,!0),"public_methods",[all],$yield))}),-1),$def(self,"$protected_methods",(function $$protected_methods(all){var $yield=$$protected_methods.$$p||nil;return $$protected_methods.$$p=null,null==all&&(all=!0),this.$__getobj__().$protected_methods(all)["$|"]($send2(this,$find_super(this,"protected_methods",$$protected_methods,!1,!0),"protected_methods",[all],$yield))}),-1),$def(self,"$==",(function(obj){return!!$truthy(obj["$equal?"](this))||this.$__getobj__()["$=="](obj)})),$def(self,"$!=",(function(obj){return!$truthy(obj["$equal?"](this))&&this.$__getobj__()["$!="](obj)})),$def(self,"$eql?",(function(obj){return!!$truthy(obj["$equal?"](this))||obj["$eql?"](this.$__getobj__())})),$def(self,"$!",(function(){return this.$__getobj__()["$!"]()})),$def(self,"$__getobj__",(function(){return this.$__raise__($$$("NotImplementedError"),"need to define `__getobj__'")})),$def(self,"$__setobj__",(function(obj){return this.$__raise__($$$("NotImplementedError"),"need to define `__setobj__'")})),$def(self,"$marshal_dump",(function(){var ivars;return["__v2__",ivars=$send(this.$instance_variables(),"reject",[],(function(var$){return null==var$&&(var$=nil),/^@delegate_/["$=~"](var$)})),$send(ivars,"map",[],(function $$13(var$){return null==var$&&(var$=nil),(null==$$13.$$s?this:$$13.$$s).$instance_variable_get(var$)}),{$$s:this}),this.$__getobj__()]})),$def(self,"$marshal_load",(function(data){var $a,version,vars,obj,values=nil;return version=null==($a=$to_ary(data))[0]?nil:$a[0],vars=null==$a[1]?nil:$a[1],values=null==$a[2]?nil:$a[2],obj=null==$a[3]?nil:$a[3],$eqeq(version,"__v2__")?($send(vars,"each_with_index",[],(function $$14(var$,i){return null==var$&&(var$=nil),null==i&&(i=nil),(null==$$14.$$s?this:$$14.$$s).$instance_variable_set(var$,values["$[]"](i))}),{$$s:this}),this.$__setobj__(obj)):this.$__setobj__(data)})),$def(self,"$initialize_clone",(function(obj,$kwargs){var freeze;return $kwargs=$ensure_kwargs($kwargs),null==(freeze=$hash_get($kwargs,"freeze"))&&(freeze=nil),this.$__setobj__(obj.$__getobj__().$clone(new Map([["freeze",freeze]])))}),-2),$def(self,"$initialize_dup",(function(obj){return this.$__setobj__(obj.$__getobj__().$dup())})),self.$private("initialize_clone","initialize_dup"),$def(self,"$freeze",(function(){return this.$__getobj__().$freeze(),$freeze_props(this),$freeze(this)})),$def(self,"$frozen?",(function(){return this.$$frozen||!1})),self.delegator_api=self.$public_instance_methods(),$defs(self,"$public_api",$return_ivar("delegator_api"))}($nesting[0],$$("BasicObject"),$nesting),function($base,$super){var self=$klass($base,$super,"SimpleDelegator");self.$$prototype.delegate_sd_obj=nil,$def(self,"$__getobj__",(function $$__getobj__(){var $a,$yield=$$__getobj__.$$p||nil;if($$__getobj__.$$p=null,!$truthy(($a=this.delegate_sd_obj,null!=$a&&$a!==nil?"instance-variable":nil))){if($yield!==nil)return Opal.yieldX($yield,[]);this.$__raise__($$$("ArgumentError"),"not delegated")}return this.delegate_sd_obj})),$def(self,"$__setobj__",(function(obj){return $truthy(this["$equal?"](obj))&&this.$__raise__($$$("ArgumentError"),"cannot delegate to self"),this.delegate_sd_obj=obj}))}($nesting[0],$$("Delegator")),$defs($$("Delegator"),"$delegating_block",(function $$delegating_block(mid){return $$delegating_block.$$p=null,$lambda((function $$16($a){var args,block=$$16.$$p||nil,self=null==$$16.$$s?this:$$16.$$s,target=nil;return $$16.$$p=null,args=$slice(arguments),target=self.$__getobj__(),$send(target,"__send__",[mid].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:this}).$ruby2_keywords()})),$def(self,"$DelegateClass",(function $$DelegateClass(superclass){var klass,ignores,block=$$DelegateClass.$$p||nil,protected_instance_methods=nil,public_instance_methods=nil;return $$DelegateClass.$$p=null,klass=$$("Class").$new($$("Delegator")),ignores=[].concat($to_a($$$("Delegator").$public_api())).concat(["to_s","inspect","=~","!~","==="]),protected_instance_methods=superclass.$protected_instance_methods(),protected_instance_methods=$rb_minus(protected_instance_methods,ignores),public_instance_methods=superclass.$public_instance_methods(),public_instance_methods=$rb_minus(public_instance_methods,ignores),$send(klass,"module_eval",[],(function $$17(){var self=null==$$17.$$s?this:$$17.$$s;return $def(self,"$__getobj__",(function $$__getobj__(){var $a,$yield=$$__getobj__.$$p||nil;if(null==this.delegate_dc_obj&&(this.delegate_dc_obj=nil),$$__getobj__.$$p=null,!$truthy(($a=this.delegate_dc_obj,null!=$a&&$a!==nil?"instance-variable":nil))){if($yield!==nil)return Opal.yieldX($yield,[]);this.$__raise__($$$("ArgumentError"),"not delegated")}return this.delegate_dc_obj})),$def(self,"$__setobj__",(function(obj){return $truthy(this["$equal?"](obj))&&this.$__raise__($$$("ArgumentError"),"cannot delegate to self"),this.delegate_dc_obj=obj})),$send(protected_instance_methods,"each",[],(function $$18(method){var self=null==$$18.$$s?this:$$18.$$s;return null==method&&(method=nil),self.$define_method(method,$$("Delegator").$delegating_block(method)),self.$protected(method)}),{$$s:self}),$send(public_instance_methods,"each",[],(function $$19(method){return null==method&&(method=nil),(null==$$19.$$s?this:$$19.$$s).$define_method(method,$$("Delegator").$delegating_block(method))}),{$$s:self})}),{$$s:this}),$send(klass,"define_singleton_method",["public_instance_methods"],(function $$20(all){var self=null==$$20.$$s?this:$$20.$$s;return null==all&&(all=!0),$send2(self,$find_block_super(self,"DelegateClass",$$20.$$def||$$DelegateClass,!1,!1),"DelegateClass",[all],null)["$|"](superclass.$public_instance_methods())}),{$$arity:-1,$$s:this}),$send(klass,"define_singleton_method",["protected_instance_methods"],(function $$21(all){var self=null==$$21.$$s?this:$$21.$$s;return null==all&&(all=!0),$send2(self,$find_block_super(self,"DelegateClass",$$21.$$def||$$DelegateClass,!1,!1),"DelegateClass",[all],null)["$|"](superclass.$protected_instance_methods())}),{$$arity:-1,$$s:this}),$send(klass,"define_singleton_method",["instance_methods"],(function $$22(all){var self=null==$$22.$$s?this:$$22.$$s;return null==all&&(all=!0),$send2(self,$find_block_super(self,"DelegateClass",$$22.$$def||$$DelegateClass,!1,!1),"DelegateClass",[all],null)["$|"](superclass.$instance_methods())}),{$$arity:-1,$$s:this}),$send(klass,"define_singleton_method",["public_instance_method"],(function $$23(name){var self=null==$$23.$$s?this:$$23.$$s;null==name&&(name=nil);try{return $send2(self,$find_block_super(self,"DelegateClass",$$23.$$def||$$DelegateClass,!1,!1),"DelegateClass",[name],null)}catch($err){if(!Opal.rescue($err,[$$("NameError")]))throw $err;try{return $truthy(self.$public_instance_methods()["$include?"](name))||self.$raise(),superclass.$public_instance_method(name)}finally{Opal.pop_exception($err)}}}),{$$s:this}),$send(klass,"define_singleton_method",["instance_method"],(function $$24(name){var self=null==$$24.$$s?this:$$24.$$s;null==name&&(name=nil);try{return $send2(self,$find_block_super(self,"DelegateClass",$$24.$$def||$$DelegateClass,!1,!1),"DelegateClass",[name],null)}catch($err){if(!Opal.rescue($err,[$$("NameError")]))throw $err;try{return $truthy(self.$instance_methods()["$include?"](name))||self.$raise(),superclass.$instance_method(name)}finally{Opal.pop_exception($err)}}}),{$$s:this}),$truthy(block)&&$send(klass,"module_eval",[],block.$to_proc()),klass}))};
