Opal.modules.shellwords=function(Opal){var $module=Opal.module,$rb_plus=Opal.rb_plus,$send=Opal.send,$to_ary=Opal.to_ary,$truthy=Opal.truthy,$def=Opal.def,$alias=Opal.alias,$klass=Opal.klass,$nesting=[],nil=Opal.nil;return Opal.add_stubs("+,new,scan,raise,inspect,gsub,<<,shellsplit,module_function,to_s,empty?,dup,shellescape,join,map,shelljoin,split,escape"),function($base,$parent_nesting){var self=$module($base,"Shellwords"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$shellsplit",(function(line){var words=nil,field=nil;return line=$rb_plus(line," "),words=[],field=$$("String").$new(),$send(line,"scan",[/\s*(?:([^\s\\\'\"]+)|'([^\']*)'|"((?:[^\"\\]|\\.)*)"|(\\.?)|(\S))(\r?\n?\Z|\s)?/m],(function $$1($mlhs_tmp1){var $a,word,sq,garbage,sep,$ret_or_1,$ret_or_2,self=null==$$1.$$s?this:$$1.$$s,dq=nil,esc=nil,$ret_or_3=nil;return null==$mlhs_tmp1&&($mlhs_tmp1=nil),word=null==($a=$to_ary($mlhs_tmp1))[0]?nil:$a[0],sq=null==$a[1]?nil:$a[1],dq=null==$a[2]?nil:$a[2],esc=null==$a[3]?nil:$a[3],garbage=null==$a[4]?nil:$a[4],sep=null==$a[5]?nil:$a[5],$truthy(garbage)&&self.$raise($$("ArgumentError"),"Unmatched quote: "+line.$inspect()),field=$rb_plus(field,$truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=word)?$ret_or_3:sq)?$ret_or_2:$truthy($ret_or_3=dq)?dq.$gsub(/\\([$`"\\\n])/,"\\1"):$ret_or_3)?$ret_or_1:esc.$gsub(/\\(.)/,"\\1")),$truthy(sep)?(words["$<<"](field),field=$$("String").$new()):nil}),{$$arity:1,$$s:this,$$has_top_level_mlhs_arg:!0}),words}),1),$alias(self,"shellwords","shellsplit"),self.$module_function("shellsplit","shellwords"),function(self,$parent_nesting){$alias(self,"split","shellsplit")}(Opal.get_singleton_class(self)),$def(self,"$shellescape",(function(str){return str=str.$to_s(),$truthy(str["$empty?"]())?"''".$dup():str=(str=(str=str.$dup()).$gsub(/[^A-Za-z0-9_\-.,:+\/@\n]/,"\\\\\\&")).$gsub(/\n/,"'\n'")}),1),self.$module_function("shellescape"),function(self,$parent_nesting){$alias(self,"escape","shellescape")}(Opal.get_singleton_class(self)),$def(self,"$shelljoin",(function(array){return $send(array,"map",[],(function $$2(arg){return null==arg&&(arg=nil),(null==$$2.$$s?this:$$2.$$s).$shellescape(arg)}),{$$arity:1,$$s:this}).$join(" ")}),1),self.$module_function("shelljoin"),function(self,$parent_nesting){$alias(self,"join","shelljoin")}(Opal.get_singleton_class(self))}($nesting[0],$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"String"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$shellsplit",(function(){return $$("Shellwords").$split(this)}),0),$def(self,"$shellescape",(function(){return $$("Shellwords").$escape(this)}),0)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$shelljoin",(function(){return $$("Shellwords").$join(this)}),0)}($nesting[0],0,$nesting)},Opal.modules["optparse/version"]=function(Opal){var $slice=Opal.slice,$send=Opal.send,$eqeq=Opal.eqeq,$Object=Opal.Object,$eqeqeq=Opal.eqeqeq,$truthy=Opal.truthy,$def=Opal.def,$regexp=Opal.regexp,$neqeq=Opal.neqeq,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return Opal.add_stubs("program_name,options,proc,to_s,==,===,join,<<,find,const_defined?,const_get,puts,[],size,search_const,call,intern,each,inject,split,raise,grep,constants,shift,!="),function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$show_version",(function($a){var pkgs,self=this,progname=nil,result=nil,show=nil;return pkgs=$slice.call(arguments),progname=$$("ARGV").$options().$program_name(),result=!1,show=$send(self,"proc",[],(function $$1(klass,cname,version){var self=null==$$1.$$s?this:$$1.$$s,str=nil;return null==klass&&(klass=nil),null==cname&&(cname=nil),null==version&&(version=nil),str=progname.$to_s(),$eqeq(klass,$Object)&&$eqeq(cname,"VERSION")||($eqeqeq($$("Array"),version)&&(version=version.$join(".")),$eqeq(klass,$$("Object"))||str["$<<"](": "+klass),str["$<<"](" version "+version)),$send(["Release","RELEASE"],"find",[],(function(rel){return null==rel&&(rel=nil),$truthy(klass["$const_defined?"](rel))?str["$<<"](" ("+klass.$const_get(rel)+")"):nil}),1),self.$puts(str),result=!0}),{$$arity:3,$$s:self}),$eqeq(pkgs.$size(),1)&&$eqeq(pkgs["$[]"](0),"all")?$send(self,"search_const",[$Object,/^V(?:ERSION|ersion)$/],(function(klass,cname,version){return null==klass&&(klass=nil),null==cname&&(cname=nil),null==version&&(version=nil),$eqeq(cname["$[]"](1),"e")&&$truthy(klass["$const_defined?"]("Version"))?nil:show.$call(klass,cname.$intern(),version)}),3):$send(pkgs,"each",[],(function(pkg){var v=nil,n=nil;null==pkg&&(pkg=nil);try{return pkg=$send(pkg.$split(/::|\//),"inject",[$Object],(function(m,c){return null==m&&(m=nil),null==c&&(c=nil),m.$const_get(c)}),2),v=$truthy(pkg["$const_defined?"]("Version"))?pkg.$const_get(n="Version"):$truthy(pkg["$const_defined?"]("VERSION"))?pkg.$const_get(n="VERSION"):(n=nil,"unknown"),show.$call(pkg,n,v)}catch($err){if(!Opal.rescue($err,[$$("NameError")]))throw $err;try{return nil}finally{Opal.pop_exception()}}}),1),result}),-1),$def(self,"$each_const",(function(path,base){return null==base&&(base=$Object),$send(path.$split(/::|\//),"inject",[base],(function $$6(klass,name){var self=null==$$6.$$s?this:$$6.$$s;return null==klass&&(klass=nil),null==name&&(name=nil),$eqeqeq($$("Module"),klass)||self.$raise($$("NameError"),path),$send(klass.$constants(),"grep",[$regexp([name],"i")],(function(c){return null==c&&(c=nil),$truthy(klass["$const_defined?"](c))?klass.$const_get(c):nil}),1)}),{$$arity:2,$$s:this})}),-2),$def(self,"$search_const",(function $$search_const(klass,name){var $yield=$$search_const.$$p||nil,klasses=nil;for($$search_const.$$p=null,klasses=[klass];$truthy(klass=klasses.$shift());)$send(klass.$constants(),"each",[],(function(cname){var const$;return null==cname&&(cname=nil),$truthy(klass["$const_defined?"](cname))?(const$=klass.$const_get(cname),$eqeqeq(name,cname)&&Opal.yieldX($yield,[klass,cname,const$]),$eqeqeq($$("Module"),const$)&&$neqeq(const$,$Object)?klasses["$<<"](const$):nil):nil}),1)}),2)}(Opal.get_singleton_class($$("OptionParser")),$nesting)},Opal.queue((function(Opal){var $klass=Opal.klass,$const_set=Opal.const_set,$module=Opal.module,$rb_plus=Opal.rb_plus,$defs=Opal.defs,$truthy=Opal.truthy,$send=Opal.send,$slice=Opal.slice,$eqeqeq=Opal.eqeqeq,$def=Opal.def,$eqeq=Opal.eqeq,$to_ary=Opal.to_ary,$rb_gt=Opal.rb_gt,$to_a=Opal.to_a,$rb_ge=Opal.rb_ge,$hash2=Opal.hash2,$rb_minus=Opal.rb_minus,$rb_lt=Opal.rb_lt,$rb_times=Opal.rb_times,$not=Opal.not,$thrower=Opal.thrower,$return_val=Opal.return_val,$gvars=Opal.gvars,$alias=Opal.alias,$send2=Opal.send2,$find_super=Opal.find_super,$rb_le=Opal.rb_le,$neqeq=Opal.neqeq,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$lambda=Opal.lambda,$regexp=Opal.regexp,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("freeze,new,+,gsub,quote,regexp,call,===,id2name,empty?,<<,candidate,to_proc,method,public,sort_by,size,==,[],>,shift,each,rindex,throw,include,attr_reader,>=,incompatible_argument_styles,raise,filter_backtrace,caller,pattern,match,to_a,length,private,conv,proc,block,-,fetch,[]=,join,dup,desc,arg,<,+@,*,sub,to_i,max,collect,!,ljust,to_s,=~,first,long,short,last_match,conv_arg,parse_arg,respond_to?,delete,update,invert,delete_if,unshift,push,__send__,complete,keys,list,reverse_each,summarize,concat,reverse,each_line,add_banner,compsys,catch,basename,visit,puts,help,exit,require,show_version,split,abort,program_name,ver,instance_eval,nonzero?,inc,class,add_officious,base,terminate,accept,top,reject,attr_writer,attr_accessor,banner=,program_name=,summary_width=,summary_indent=,version,release,pop,index,banner,<=,search,notwice,!=,any?,guess,tr,downcase,append,make_switch,define,prepend,define_head,define_tail,order!,default_argv,to_sym,parse_in_order,include?,require_exact,set_option,parse,switch_name,delete_prefix,match_nonswitch?,permute!,parse!,scan,compact,getopts,curry,select!,is_a?,message_for,formatter,&,correct,map,map!,load,expand_path,readlines,upcase,shellwords,nil?,Integer,to_f,Rational,Float,|,args,reason,additional,message,const_set,undef_method,default_argv=,warn,options,extend"),function($base,$super,$parent_nesting){var decimal,hex,octal,float$,floatpat,real,self=$klass($base,null,"OptionParser"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),yesno=nil,$proto=self.$$prototype;$proto.banner=$proto.program_name=$proto.version=$proto.release=$proto.stack=$proto.summary_width=$proto.summary_indent=nil,$const_set($$("OptionParser"),"Version","0.1.1"),$const_set($nesting[0],"NoArgument",[$const_set($nesting[0],"NO_ARGUMENT","NONE"),nil].$freeze()),$const_set($nesting[0],"RequiredArgument",[$const_set($nesting[0],"REQUIRED_ARGUMENT","REQUIRED"),!0].$freeze()),$const_set($nesting[0],"OptionalArgument",[$const_set($nesting[0],"OPTIONAL_ARGUMENT","OPTIONAL"),!1].$freeze()),function($base,$parent_nesting){var self=$module($base,"Completion"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$regexp",(function(key,icase){return $$("Regexp").$new($rb_plus("\\A",$$("Regexp").$quote(key).$gsub(/\w+\b/,"\\&\\w*")),icase)}),2),$defs(self,"$candidate",(function $$candidate(key,icase,pat){var block=$$candidate.$$p||nil,$ret_or_1=nil,candidates=nil;return $$candidate.$$p=null,null==icase&&(icase=!1),null==pat&&(pat=nil),pat=$truthy($ret_or_1=pat)?$ret_or_1:$$("Completion").$regexp(key,icase),candidates=[],$send(block,"call",[],(function(k,$a){var v,$b,$c,$d,$e,kn=nil;return null==k&&(k=nil),v=$slice.call(arguments,1),$truthy($ret_or_1=$eqeqeq($$("Regexp"),k)?(kn="",k["$==="](key)):(kn=$truthy(($b=k)&&($c=$b)&&($d=$c)&&(($e=$d.$id2name)&&!$e.$$stub||$d["$respond_to_missing?"]("id2name"))?"method":nil)?k.$id2name():k,pat["$==="](kn)))?($truthy(v["$empty?"]())&&v["$<<"](k),candidates["$<<"]([k,v,kn])):nil}),-2),candidates}),-2),$def(self,"$candidate",(function(key,icase,pat){return null==icase&&(icase=!1),null==pat&&(pat=nil),$send($$("Completion"),"candidate",[key,icase,pat],this.$method("each").$to_proc())}),-2),self.$public(),$def(self,"$complete",(function $$complete(key,icase,pat){var $a,$b,$yield=$$complete.$$p||nil,candidates=nil,canon=nil,sw=nil,cn=nil;return $$complete.$$p=null,null==icase&&(icase=!1),null==pat&&(pat=nil),candidates=$send($send(this,"candidate",[key,icase,pat],this.$method("each").$to_proc()),"sort_by",[],(function(k,v,kn){return null==k&&(k=nil),null==v&&(v=nil),null==kn&&(kn=nil),kn.$size()}),3),$eqeq(candidates.$size(),1)?($b=candidates["$[]"](0),$a=$to_ary($b),canon=null==$a[0]?nil:$a[0],sw=null==$a[1]?nil:$a[1]):$truthy($rb_gt(candidates.$size(),1))&&($b=candidates.$shift(),$a=$to_ary($b),canon=null==$a[0]?nil:$a[0],sw=null==$a[1]?nil:$a[1],cn=null==$a[2]?nil:$a[2],$send(candidates,"each",[],(function $$3(k,v,kn){var $c,self=null==$$3.$$s?this:$$3.$$s;if(null==k&&(k=nil),null==v&&(v=nil),null==kn&&(kn=nil),$eqeq(sw,v))return nil;if($eqeqeq($$("String"),cn)&&$eqeqeq($$("String"),kn)){if($truthy(cn.$rindex(kn,0)))return canon=($c=[k,v,kn])[0],sw=$c[1],cn=$c[2],nil;if($truthy(kn.$rindex(cn,0)))return nil}return self.$throw("ambiguous",key)}),{$$arity:3,$$s:this})),$truthy(canon)?$truthy($yield!==nil)?Opal.yieldX($yield,[key].concat($to_a(sw))):[key].concat($to_a(sw)):nil}),-2),$def(self,"$convert",(function($a,$b,$c){var $post_args,opt,val;return($post_args=$slice.call(arguments)).length>0&&(opt=$post_args.shift()),null==opt&&(opt=nil),$post_args.length>0&&(val=$post_args.shift()),null==val&&(val=nil),$post_args,val}),-1)}($nesting[0],$nesting),function($base,$super,$parent_nesting){var self=$klass($base,$super,"OptionMap"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Completion"))}($nesting[0],$$("Hash"),$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"Switch"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.short=$proto.long=$proto.pattern=nil,self.$attr_reader("pattern","conv","short","long","arg","desc","block"),$defs(self,"$guess",(function(arg){var $ret_or_1=nil,t=nil;return t=$eqeqeq("",$ret_or_1=arg)?this:$eqeqeq(/^=?\[/,$ret_or_1)?$$$($$("Switch"),"OptionalArgument"):$eqeqeq(/^\s+\[/,$ret_or_1)?$$$($$("Switch"),"PlacedArgument"):$$$($$("Switch"),"RequiredArgument"),$truthy($ret_or_1=$rb_ge(this,t))||this.$incompatible_argument_styles(arg,t),t}),1),$defs(self,"$incompatible_argument_styles",(function(arg,t){return this.$raise($$("ArgumentError"),arg+": incompatible argument styles\n  "+this+", "+t,$$("ParseError").$filter_backtrace(this.$caller(2)))}),2),$defs(self,"$pattern",(function(){return $$("NilClass")}),0),$def(self,"$initialize",(function $$initialize(pattern,conv,short$,long$,arg,desc,block){var $a,$ret_or_1,_block=$$initialize.$$p||nil;return $$initialize.$$p=null,null==pattern&&(pattern=nil),null==conv&&(conv=nil),null==short$&&(short$=nil),null==long$&&(long$=nil),null==arg&&(arg=nil),null==desc&&(desc=$truthy(short$)||$truthy(long$)?[]:nil),null==block&&(block=nil),$eqeqeq($$("Array"),pattern)&&this.$raise(),$a=[pattern,conv,short$,long$,arg,desc,block=$truthy($ret_or_1=block)?$ret_or_1:_block],this.pattern=$a[0],this.conv=$a[1],this.short=$a[2],this.long=$a[3],this.arg=$a[4],this.desc=$a[5],this.block=$a[6],$a}),-1),$def(self,"$parse_arg",(function $$parse_arg(arg){var $yield=$$parse_arg.$$p||nil,m=nil,s=nil;if($$parse_arg.$$p=null,!$truthy(this.$pattern()))return[nil,[arg]];if(!$truthy(m=this.$pattern().$match(arg)))return Opal.yieldX($yield,[$$("InvalidArgument"),arg]),[arg,[]];if($eqeqeq($$("String"),m))m=[s=m];else if(s=(m=m.$to_a())["$[]"](0),!$eqeqeq($$("String"),s))return[nil,m];return $truthy(arg.$rindex(s,0))||this.$raise($$("InvalidArgument"),arg),$eqeq(s.$length(),arg.$length())?[nil,m]:(Opal.yieldX($yield,[$$("InvalidArgument"),arg]),[arg["$[]"](Opal.Range.$new(s.$length(),-1,!1)),m])}),1),self.$private("parse_arg"),$def(self,"$conv_arg",(function(arg,val){return null==val&&(val=[]),val=$truthy(this.$conv())?$send(this.$conv(),"call",$to_a(val)):$send($send(this,"proc",[],(function(v){return null==v&&(v=nil),v}),1),"call",$to_a(val)),[arg,this.$block(),val]}),-2),self.$private("conv_arg"),$def(self,"$summarize",(function $$summarize(sdone,ldone,width,max,indent){var $a,$yield=$$summarize.$$p||nil,sopts=nil,lopts=nil,left=nil,right=nil,s=nil,l=nil,$ret_or_1=nil,$ret_or_2=nil,mlen=nil,r=nil;if($$summarize.$$p=null,null==sdone&&(sdone=$hash2([],{})),null==ldone&&(ldone=$hash2([],{})),null==width&&(width=1),null==max&&(max=$rb_minus(width,1)),null==indent&&(indent=""),sopts=($a=[[],[],nil])[0],lopts=$a[1],$truthy(this.short)&&$send(this.short,"each",[],(function(s){var $b;return null==s&&(s=nil),$send(sdone,"fetch",[s],(function(){return sopts["$<<"](s)}),0),$send(sdone,"[]=",$b=[s,!0]),$b[$b.length-1]}),1),$truthy(this.long)&&$send(this.long,"each",[],(function(s){var $b;return null==s&&(s=nil),$send(ldone,"fetch",[s],(function(){return lopts["$<<"](s)}),0),$send(ldone,"[]=",$b=[s,!0]),$b[$b.length-1]}),1),$truthy(sopts["$empty?"]())&&$truthy(lopts["$empty?"]()))return nil;for(left=[sopts.$join(", ")],right=this.$desc().$dup();$truthy(s=lopts.$shift());)l=$rb_plus(left["$[]"](-1).$length(),s.$length()),$eqeq(left.$size(),1)&&$truthy(this.$arg())&&(l=$rb_plus(l,this.$arg().$length())),$truthy($ret_or_1=$truthy($ret_or_2=$rb_lt(l,max))?$ret_or_2:sopts["$empty?"]())||left["$<<"](""["$+@"]()),left["$[]="](-1,$rb_plus(left["$[]"](-1),$rb_plus($truthy(left["$[]"](-1)["$empty?"]())?$rb_times(" ",4):", ",s)));for($truthy(this.$arg())&&left["$[]="](0,$rb_plus(left["$[]"](0),$truthy(left["$[]"](1))?$rb_plus(this.$arg().$sub(/^(\[?)=/,"\\1"),","):this.$arg())),mlen=$send(left,"collect",[],"length".$to_proc()).$max().$to_i();$truthy($truthy($ret_or_1=$rb_gt(mlen,width))?l=left.$shift():$ret_or_1);)$eqeq(l.$length(),mlen)&&(mlen=$send(left,"collect",[],"length".$to_proc()).$max().$to_i()),$truthy($rb_lt(l.$length(),width))&&$truthy(r=right["$[]"](0))&&$not(r["$empty?"]())&&(l=$rb_plus($rb_plus(l.$to_s().$ljust(width)," "),r),right.$shift()),Opal.yield1($yield,$rb_plus(indent,l));for(;$truthy((l=left.$shift(),r=right.$shift(),$truthy($ret_or_1=l)?$ret_or_1:r));)$truthy(r)&&$not(r["$empty?"]())&&(l=$rb_plus($rb_plus(l.$to_s().$ljust(width)," "),r)),Opal.yield1($yield,$rb_plus(indent,l));return this}),-1),$def(self,"$add_banner",(function(to){var s=nil;return $truthy(this.short)||$truthy(this.long)||(s=this.$desc().$join(),$truthy(s["$empty?"]())||to["$<<"]($rb_plus($rb_plus(" [",s),"]..."))),to}),1),$def(self,"$match_nonswitch?",(function(str){return $truthy(this.short)||$truthy(this.long)?nil:this.pattern["$=~"](str)}),1),$def(self,"$switch_name",(function(){var $ret_or_1;return($truthy($ret_or_1=this.$long().$first())?$ret_or_1:this.$short().$first()).$sub(/^-+(?:\[no-\])?/,"")}),0),$def(self,"$compsys",(function $$compsys(sdone,ldone){var $a,$yield=$$compsys.$$p||nil,sopts=nil,lopts=nil;return $$compsys.$$p=null,sopts=($a=[[],[]])[0],lopts=$a[1],$truthy(this.short)&&$send(this.short,"each",[],(function(s){var $b;return null==s&&(s=nil),$send(sdone,"fetch",[s],(function(){return sopts["$<<"](s)}),0),$send(sdone,"[]=",$b=[s,!0]),$b[$b.length-1]}),1),$truthy(this.long)&&$send(this.long,"each",[],(function(s){var $b;return null==s&&(s=nil),$send(ldone,"fetch",[s],(function(){return lopts["$<<"](s)}),0),$send(ldone,"[]=",$b=[s,!0]),$b[$b.length-1]}),1),$truthy(sopts["$empty?"]())&&$truthy(lopts["$empty?"]())?nil:$send($rb_plus(sopts,lopts),"each",[],(function $$14(opt){var self=null==$$14.$$s?this:$$14.$$s,o=nil;return null==opt&&(opt=nil),$truthy(/^--\[no-\](.+)$/["$=~"](opt))?(o=$$("Regexp").$last_match(1),Opal.yieldX($yield,["--"+o,self.$desc().$join("")]),Opal.yieldX($yield,["--no-"+o,self.$desc().$join("")])):Opal.yieldX($yield,[opt.$to_s(),self.$desc().$join("")])}),{$$arity:1,$$s:this})}),2),function($base,$super,$parent_nesting){var self=$klass($base,$super,"NoArgument"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$parse",(function $$parse(arg,argv){var $yield=$$parse.$$p||nil;return $$parse.$$p=null,$truthy(arg)&&Opal.yieldX($yield,[$$("NeedlessArgument"),arg]),this.$conv_arg(arg)}),2),$defs(self,"$incompatible_argument_styles",(function($a){return $slice.call(arguments),nil}),-1),$defs(self,"$pattern",(function(){return $$("Object")}),0)}($nesting[0],self,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,$super,"RequiredArgument"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$parse",(function(arg,argv){return $truthy(arg)||($truthy(argv["$empty?"]())&&this.$raise($$("MissingArgument")),arg=argv.$shift()),$send(this,"conv_arg",$to_a($send(this,"parse_arg",[arg],this.$method("raise").$to_proc())))}),2)}($nesting[0],self,$nesting),function($base,$super){var self=$klass($base,$super,"OptionalArgument");$def(self,"$parse",(function $$parse(arg,argv){var error=$$parse.$$p||nil;return $$parse.$$p=null,$truthy(arg)?$send(this,"conv_arg",$to_a($send(this,"parse_arg",[arg],error.$to_proc()))):this.$conv_arg(arg)}),2)}($nesting[0],self),function($base,$super){var self=$klass($base,$super,"PlacedArgument");$def(self,"$parse",(function $$parse(arg,argv){var opt,error=$$parse.$$p||nil,val=nil;return $$parse.$$p=null,$not(val=arg)&&($truthy(argv["$empty?"]())||$truthy(/^-/["$=~"](val=argv["$[]"](0))))?[nil,this.$block(),nil]:(opt=(val=$send(this,"parse_arg",[val],error.$to_proc()))["$[]"](1),val=$send(this,"conv_arg",$to_a(val)),$truthy(opt)&&$not(arg)?argv.$shift():val["$[]="](0,nil),val)}),2)}($nesting[0],self)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"List"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.atype=$proto.short=$proto.long=$proto.list=nil,self.$attr_reader("atype"),self.$attr_reader("short"),self.$attr_reader("long"),self.$attr_reader("list"),$def(self,"$initialize",(function(){return this.atype=$hash2([],{}),this.short=$$("OptionMap").$new(),this.long=$$("OptionMap").$new(),this.list=[]}),0),$def(self,"$accept",(function $$accept(t,pat){var $a,block=$$accept.$$p||nil;return $$accept.$$p=null,null==pat&&(pat=/.*/m),$truthy(pat)?$truthy(pat["$respond_to?"]("match"))||this.$raise($$("TypeError"),"has no `match'",$$("ParseError").$filter_backtrace(this.$caller(2))):$truthy(t["$respond_to?"]("match"))&&(pat=t),$truthy(block)||$truthy(pat["$respond_to?"]("convert"))&&(block=pat.$method("convert").$to_proc()),$a=[t,[pat,block]],$send(this.atype,"[]=",$a),$a[$a.length-1]}),-2),$def(self,"$reject",(function(t){return this.atype.$delete(t)}),1),$def(self,"$update",(function(sw,sopts,lopts,nsw,nlopts){var used=nil;return null==nsw&&(nsw=nil),null==nlopts&&(nlopts=nil),$truthy(sopts)&&$send(sopts,"each",[],(function $$15(o){var $a,self=null==$$15.$$s?this:$$15.$$s;return null==self.short&&(self.short=nil),null==o&&(o=nil),$a=[o,sw],$send(self.short,"[]=",$a),$a[$a.length-1]}),{$$arity:1,$$s:this}),$truthy(lopts)&&$send(lopts,"each",[],(function $$16(o){var $a,self=null==$$16.$$s?this:$$16.$$s;return null==self.long&&(self.long=nil),null==o&&(o=nil),$a=[o,sw],$send(self.long,"[]=",$a),$a[$a.length-1]}),{$$arity:1,$$s:this}),$truthy(nsw)&&$truthy(nlopts)&&$send(nlopts,"each",[],(function $$17(o){var $a,self=null==$$17.$$s?this:$$17.$$s;return null==self.long&&(self.long=nil),null==o&&(o=nil),$a=[o,nsw],$send(self.long,"[]=",$a),$a[$a.length-1]}),{$$arity:1,$$s:this}),used=this.short.$invert().$update(this.long.$invert()),$send(this.list,"delete_if",[],(function(o){var $ret_or_1;return null==o&&(o=nil),$truthy($ret_or_1=$$("Switch")["$==="](o))?used["$[]"](o)["$!"]():$ret_or_1}),1)}),-4),self.$private("update"),$def(self,"$prepend",(function($a){var $post_args,args,self=this;return $post_args=$slice.call(arguments),$send(self,"update",$to_a(args=$post_args)),self.list.$unshift(args["$[]"](0))}),-1),$def(self,"$append",(function($a){var $post_args,args,self=this;return $post_args=$slice.call(arguments),$send(self,"update",$to_a(args=$post_args)),self.list.$push(args["$[]"](0))}),-1),$def(self,"$search",(function $$search(id,key){try{var list,$t_return=$thrower("return"),$yield=$$search.$$p||nil,val=nil;return $$search.$$p=null,$truthy(list=this.$__send__(id))?(val=$send(list,"fetch",[key],(function(){$t_return.$throw()}),{$$arity:0,$$ret:$t_return}),$yield!==nil?Opal.yield1($yield,val):val):nil}catch($e){if($e===$t_return)return $e.$v;throw $e}}),2),$def(self,"$complete",(function $$complete(id,opt,$a,$b){var $post_args,icase,pat,block=$$complete.$$p||nil,self=this;return $$complete.$$p=null,($post_args=$slice.call(arguments,2)).length>0&&(icase=$post_args.shift()),null==icase&&(icase=!1),pat=$post_args,$send(self.$__send__(id),"complete",[opt,icase].concat($to_a(pat)),block.$to_proc())}),-3),$def(self,"$get_candidates",(function $$get_candidates(id){var $yield=$$get_candidates.$$p||nil;return $$get_candidates.$$p=null,Opal.yield1($yield,this.$__send__(id).$keys())}),1),$def(self,"$each_option",(function $$each_option(){var block=$$each_option.$$p||nil;return $$each_option.$$p=null,$send(this.$list(),"each",[],block.$to_proc())}),0),$def(self,"$summarize",(function $$summarize($a){var $post_args,args,block=$$summarize.$$p||nil,self=this,sum=nil;return $$summarize.$$p=null,$post_args=$slice.call(arguments),args=$post_args,sum=[],$send(self.$list(),"reverse_each",[],(function(opt){var s=nil;return null==opt&&(opt=nil),$truthy(opt["$respond_to?"]("summarize"))?(s=[],$send(opt,"summarize",$to_a(args),(function(l){return null==l&&(l=nil),s["$<<"](l)}),1),sum.$concat(s.$reverse())):$not(opt)||$truthy(opt["$empty?"]())?sum["$<<"](""):$truthy(opt["$respond_to?"]("each_line"))?sum.$concat([].concat($to_a(opt.$each_line())).$reverse()):sum.$concat([].concat($to_a(opt.$each())).$reverse())}),1),$send(sum,"reverse_each",[],block.$to_proc())}),-1),$def(self,"$add_banner",(function(to){return $send(this.$list(),"each",[],(function(opt){return null==opt&&(opt=nil),$truthy(opt["$respond_to?"]("add_banner"))?opt.$add_banner(to):nil}),1),to}),1),$def(self,"$compsys",(function $$compsys($a){var $post_args,args,block=$$compsys.$$p||nil,self=this;return $$compsys.$$p=null,$post_args=$slice.call(arguments),args=$post_args,$send(self.$list(),"each",[],(function(opt){return null==opt&&(opt=nil),$truthy(opt["$respond_to?"]("compsys"))?$send(opt,"compsys",$to_a(args),block.$to_proc()):nil}),1)}),-1)}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,$super,"CompletingHash"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Completion")),$def(self,"$match",(function(key){try{var $a,$b,values,$t_return=$thrower("return");return $b=$send(this,"fetch",[key],(function $$24(){var self=null==$$24.$$s?this:$$24.$$s;return self.$raise($$("AmbiguousArgument"),$send(self,"catch",["ambiguous"],(function $$25(){var self=null==$$25.$$s?this:$$25.$$s;$t_return.$throw(self.$complete(key))}),{$$arity:0,$$s:self,$$ret:$t_return}))}),{$$arity:0,$$s:this}),$a=$to_ary($b),values=$slice.call($a,0),[key].concat($to_a(values))}catch($e){if($e===$t_return)return $e.$v;throw $e}}),1)}($nesting[0],$$("Hash"),$nesting),$const_set($nesting[0],"ArgumentStyle",$hash2([],{})),$send($$("NoArgument"),"each",[],(function(el){var $a;return null==el&&(el=nil),$a=[el,$$$($$("Switch"),"NoArgument")],$send($$("ArgumentStyle"),"[]=",$a),$a[$a.length-1]}),1),$send($$("RequiredArgument"),"each",[],(function(el){var $a;return null==el&&(el=nil),$a=[el,$$$($$("Switch"),"RequiredArgument")],$send($$("ArgumentStyle"),"[]=",$a),$a[$a.length-1]}),1),$send($$("OptionalArgument"),"each",[],(function(el){var $a;return null==el&&(el=nil),$a=[el,$$$($$("Switch"),"OptionalArgument")],$send($$("ArgumentStyle"),"[]=",$a),$a[$a.length-1]}),1),$$("ArgumentStyle").$freeze(),$const_set($nesting[0],"DefaultList",$$("List").$new()),$$("DefaultList").$short()["$[]="]("-",$send($$$($$("Switch"),"NoArgument"),"new",[],$return_val(nil),0)),$$("DefaultList").$long()["$[]="]("",$send($$$($$("Switch"),"NoArgument"),"new",[],(function $OptionParser$29(){return(null==$OptionParser$29.$$s?this:$OptionParser$29.$$s).$throw("terminate")}),{$$arity:0,$$s:self})),$const_set($nesting[0],"COMPSYS_HEADER","\ntypeset -A opt_args\nlocal context state line\n\n_arguments -s -S \\\n"),$def(self,"$compsys",(function(to,name){return null==$gvars[0]&&($gvars[0]=nil),null==name&&(name=$$("File").$basename($gvars[0])),to["$<<"]("#compdef "+name+"\n"),to["$<<"]($$("COMPSYS_HEADER")),$send(this,"visit",["compsys",$hash2([],{}),$hash2([],{})],(function(o,d){return null==o&&(o=nil),null==d&&(d=nil),to["$<<"]('  "'+o+"["+d.$gsub(/[\"\[\]]/,"\\\\\\&")+']" \\\n')}),2),to["$<<"]("  '*:file:_files' && return 0\n")}),-2),$const_set($nesting[0],"Officious",$hash2([],{})),$$("Officious")["$[]="]("help",$send(self,"proc",[],(function $OptionParser$31(parser){var self=null==$OptionParser$31.$$s?this:$OptionParser$31.$$s;return null==parser&&(parser=nil),$send($$$($$("Switch"),"NoArgument"),"new",[],(function $$32(arg){var self=null==$$32.$$s?this:$$32.$$s;return null==arg&&(arg=nil),self.$puts(parser.$help()),self.$exit()}),{$$arity:1,$$s:self})}),{$$arity:1,$$s:self})),$$("Officious")["$[]="]("*-completion-bash",$send(self,"proc",[],(function $OptionParser$33(parser){var self=null==$OptionParser$33.$$s?this:$OptionParser$33.$$s;return null==parser&&(parser=nil),$send($$$($$("Switch"),"RequiredArgument"),"new",[],(function $$34(arg){var self=null==$$34.$$s?this:$$34.$$s;return null==arg&&(arg=nil),self.$puts(parser.$candidate(arg)),self.$exit()}),{$$arity:1,$$s:self})}),{$$arity:1,$$s:self})),$$("Officious")["$[]="]("*-completion-zsh",$send(self,"proc",[],(function $OptionParser$35(parser){var self=null==$OptionParser$35.$$s?this:$OptionParser$35.$$s;return null==parser&&(parser=nil),$send($$$($$("Switch"),"OptionalArgument"),"new",[],(function $$36(arg){var self=null==$$36.$$s?this:$$36.$$s;return null==arg&&(arg=nil),parser.$compsys($$("STDOUT"),arg),self.$exit()}),{$$arity:1,$$s:self})}),{$$arity:1,$$s:self})),$$("Officious")["$[]="]("version",$send(self,"proc",[],(function $OptionParser$37(parser){var self=null==$OptionParser$37.$$s?this:$OptionParser$37.$$s;return null==parser&&(parser=nil),$send($$$($$("Switch"),"OptionalArgument"),"new",[],(function $$38(pkg){var v,self=null==$$38.$$s?this:$$38.$$s;if(null==pkg&&(pkg=nil),$truthy(pkg)){var $no_errors=!0;try{self.$require("optparse/version")}catch($err){if($no_errors=!1,!Opal.rescue($err,[$$("LoadError")]))throw $err;Opal.pop_exception()}finally{$no_errors&&($truthy($send(self,"show_version",$to_a(pkg.$split(/,/))))||self.$abort(parser.$program_name()+": no version found in package "+pkg),self.$exit())}}return $truthy(v=parser.$ver())||self.$abort(parser.$program_name()+": version unknown"),self.$puts(v),self.$exit()}),{$$arity:1,$$s:self})}),{$$arity:1,$$s:self})),$defs(self,"$with",(function $OptionParser_with$39($a){var $post_args,block=$OptionParser_with$39.$$p||nil,self=this,opts=nil;return $OptionParser_with$39.$$p=null,$post_args=$slice.call(arguments),opts=$send(self,"new",$to_a($post_args)),$send(opts,"instance_eval",[],block.$to_proc()),opts}),-1),$defs(self,"$inc",(function(arg,default$){var $ret_or_1;return null==default$&&(default$=nil),$eqeqeq($$("Integer"),$ret_or_1=arg)?arg["$nonzero?"]():$eqeqeq(nil,$ret_or_1)?$rb_plus(default$.$to_i(),1):nil}),-2),$def(self,"$inc",(function($a){var args,self=this;return args=$slice.call(arguments),$send(self.$class(),"inc",$to_a(args))}),-1),$def(self,"$initialize",(function $$initialize(banner,width,indent){var $yield=$$initialize.$$p||nil;return $$initialize.$$p=null,null==banner&&(banner=nil),null==width&&(width=32),null==indent&&(indent=$rb_times(" ",4)),this.stack=[$$("DefaultList"),$$("List").$new(),$$("List").$new()],this.program_name=nil,this.banner=banner,this.summary_width=width,this.summary_indent=indent,this.default_argv=$$("ARGV"),this.require_exact=!1,this.$add_officious(),$yield!==nil?Opal.yield1($yield,this):nil}),-1),$def(self,"$add_officious",(function(){var list=nil;return list=this.$base(),$send($$("Officious"),"each",[],(function $$40(opt,block){var $a,$ret_or_1,self=null==$$40.$$s?this:$$40.$$s,$logical_op_recvr_tmp_1=nil;return null==opt&&(opt=nil),null==block&&(block=nil),$logical_op_recvr_tmp_1=list.$long(),$truthy($ret_or_1=$logical_op_recvr_tmp_1["$[]"](opt))?$ret_or_1:($a=[opt,block.$call(self)],$send($logical_op_recvr_tmp_1,"[]=",$a),$a[$a.length-1])}),{$$arity:2,$$s:this})}),0),$def(self,"$terminate",(function(arg){return null==arg&&(arg=nil),this.$class().$terminate(arg)}),-1),$defs(self,"$terminate",(function(arg){return null==arg&&(arg=nil),this.$throw("terminate",arg)}),-1),self.stack=[$$("DefaultList")],$defs(self,"$top",(function(){return $$("DefaultList")}),0),$def(self,"$accept",(function $$accept($a){var args,blk=$$accept.$$p||nil,self=this;return $$accept.$$p=null,args=$slice.call(arguments),$send(self.$top(),"accept",$to_a(args),blk.$to_proc())}),-1),$defs(self,"$accept",(function $$accept($a){var args,blk=$$accept.$$p||nil,self=this;return $$accept.$$p=null,args=$slice.call(arguments),$send(self.$top(),"accept",$to_a(args),blk.$to_proc())}),-1),$def(self,"$reject",(function $$reject($a){var args,blk=$$reject.$$p||nil,self=this;return $$reject.$$p=null,args=$slice.call(arguments),$send(self.$top(),"reject",$to_a(args),blk.$to_proc())}),-1),$defs(self,"$reject",(function $$reject($a){var args,blk=$$reject.$$p||nil,self=this;return $$reject.$$p=null,args=$slice.call(arguments),$send(self.$top(),"reject",$to_a(args),blk.$to_proc())}),-1),self.$attr_writer("banner"),self.$attr_writer("program_name"),self.$attr_accessor("summary_width"),self.$attr_accessor("summary_indent"),self.$attr_accessor("default_argv"),self.$attr_accessor("require_exact"),$def(self,"$banner",(function(){return $truthy(this.banner)||(this.banner=("Usage: "+this.$program_name()+" [options]")["$+@"](),this.$visit("add_banner",this.banner)),this.banner}),0),$def(self,"$program_name",(function(){var $ret_or_1;return null==$gvars[0]&&($gvars[0]=nil),$truthy($ret_or_1=this.program_name)?$ret_or_1:$$("File").$basename($gvars[0],".*")}),0),$alias(self,"set_banner","banner="),$alias(self,"set_program_name","program_name="),$alias(self,"set_summary_width","summary_width="),$alias(self,"set_summary_indent","summary_indent="),self.$attr_writer("version"),self.$attr_writer("release"),$def(self,"$version",(function(){var $a,$ret_or_1,$ret_or_2=nil;return $truthy($ret_or_1=$truthy($ret_or_2=null!=($a=this.version)&&$a!==nil?"instance-variable":nil)?this.version:$ret_or_2)?$ret_or_1:$truthy($ret_or_2=$$$("::","Version","skip_raise")?"constant":nil)?$$$("Version"):$ret_or_2}),0),$def(self,"$release",(function(){var $a,$ret_or_1,$ret_or_2=nil,$ret_or_3=nil;return $truthy($ret_or_1=$truthy($ret_or_2=$truthy($ret_or_3=null!=($a=this.release)&&$a!==nil?"instance-variable":nil)?this.release:$ret_or_3)?$ret_or_2:$truthy($ret_or_3=$$$("::","Release","skip_raise")?"constant":nil)?$$$("Release"):$ret_or_3)?$ret_or_1:$truthy($ret_or_2=$$$("::","RELEASE","skip_raise")?"constant":nil)?$$$("RELEASE"):$ret_or_2}),0),$def(self,"$ver",(function(){var v=nil,str=nil;return $truthy(v=this.$version())?(str=(this.$program_name()+" "+[v].$join("."))["$+@"](),$truthy(v=this.$release())&&str["$<<"](" ("+v+")"),str):nil}),0),$def(self,"$warn",(function $$warn(mesg){return null==$gvars["!"]&&($gvars["!"]=nil),$$warn.$$p=null,null==mesg&&(mesg=$gvars["!"]),$send2(this,$find_super(this,"warn",$$warn,!1,!0),"warn",[this.$program_name()+": "+mesg],null)}),-1),$def(self,"$abort",(function $$abort(mesg){return null==$gvars["!"]&&($gvars["!"]=nil),$$abort.$$p=null,null==mesg&&(mesg=$gvars["!"]),$send2(this,$find_super(this,"abort",$$abort,!1,!0),"abort",[this.$program_name()+": "+mesg],null)}),-1),$def(self,"$top",(function(){return this.stack["$[]"](-1)}),0),$def(self,"$base",(function(){return this.stack["$[]"](1)}),0),$def(self,"$new",(function $OptionParser_new$41(){var $yield=$OptionParser_new$41.$$p||nil;return $OptionParser_new$41.$$p=null,this.stack.$push($$("List").$new()),$yield!==nil?Opal.yield1($yield,this):this}),0),$def(self,"$remove",(function(){return this.stack.$pop()}),0),$def(self,"$summarize",(function $$summarize(to,width,max,indent){var $ret_or_1,blk=$$summarize.$$p||nil;return $$summarize.$$p=null,null==to&&(to=[]),null==width&&(width=this.summary_width),null==max&&(max=$rb_minus(width,1)),null==indent&&(indent=this.summary_indent),"\n",blk=$truthy($ret_or_1=blk)?$ret_or_1:$send(this,"proc",[],(function(l){return null==l&&(l=nil),to["$<<"]($truthy(l.$index("\n",-1))?l:$rb_plus(l,"\n"))}),1),$send(this,"visit",["summarize",$hash2([],{}),$hash2([],{}),width,max,indent],blk.$to_proc()),to}),-1),$def(self,"$help",(function(){return this.$summarize([this.$banner().$to_s().$sub(/\n?$/,"\n")]).$join()}),0),$alias(self,"to_s","help"),$def(self,"$to_a",(function(){return this.$summarize([this.$banner().$to_s().$split(/^/)]).$join()}),0),$def(self,"$notwice",(function(obj,prv,msg){return $not(prv)||$eqeq(prv,obj)||this.$raise($$("ArgumentError"),"argument "+msg+" given twice: "+obj,$$("ParseError").$filter_backtrace(this.$caller(2))),obj}),3),self.$private("notwice"),$const_set($nesting[0],"SPLAT_PROC",$send(self,"proc",[],(function($a){var $post_args,a;return $post_args=$slice.call(arguments),$truthy($rb_le((a=$post_args).$length(),1))?a.$first():a}),-1)),$def(self,"$make_switch",(function(opts,block){var $a,$b,short$=nil,long$=nil,nolong=nil,style=nil,pattern=nil,conv=nil,not_pattern=nil,not_conv=nil,not_style=nil,ldesc=nil,sdesc=nil,desc=nil,arg=nil,default_style=nil,default_pattern=nil,klass=nil,q=nil,a=nil,has_arg=nil,$ret_or_2=nil,s=nil;return null==block&&(block=nil),short$=($a=[[],[],[]])[0],long$=$a[1],nolong=$a[2],style=null==$a[3]?nil:$a[3],pattern=null==$a[4]?nil:$a[4],conv=null==$a[5]?nil:$a[5],not_pattern=null==$a[6]?nil:$a[6],not_conv=null==$a[7]?nil:$a[7],not_style=null==$a[8]?nil:$a[8],ldesc=($a=[[],[],[]])[0],sdesc=$a[1],desc=$a[2],arg=null==$a[3]?nil:$a[3],default_style=$$$($$("Switch"),"NoArgument"),default_pattern=nil,klass=nil,$a=$to_ary($b=nil),q=null==$a[0]?nil:$a[0],a=null==$a[1]?nil:$a[1],has_arg=!1,$send(opts,"each",[],(function $$44(o){var $c,$d,self=null==$$44.$$s?this:$$44.$$s,$ret_or_1=nil,$ret_or_2=nil,$ret_or_3=nil;return null==o&&(o=nil),$truthy($send(self,"search",["atype",o],(function $$45(pat,c){var $c;return null==pat&&(pat=nil),null==c&&(c=nil),klass=(null==$$45.$$s?this:$$45.$$s).$notwice(o,klass,"type"),$truthy(not_style)&&$neqeq(not_style,$$$($$("Switch"),"NoArgument"))?(not_pattern=($c=[pat,c])[0],not_conv=$c[1],$c):(default_pattern=($c=[pat,c])[0],conv=$c[1],$c)}),{$$arity:2,$$s:self}))?nil:$not($truthy($ret_or_1=$$("String")["$==="](o))?$ret_or_1:$$("Symbol")["$==="](o))&&$truthy(o["$respond_to?"]("match"))?(pattern=self.$notwice(o,pattern,"pattern"),conv=$truthy(pattern["$respond_to?"]("convert"))?pattern.$method("convert").$to_proc():$$("SPLAT_PROC"),nil):$eqeqeq($$("Proc"),$ret_or_1=o)||$eqeqeq($$("Method"),$ret_or_1)?block=self.$notwice(o,block,"block"):$eqeqeq($$("Array"),$ret_or_1)||$eqeqeq($$("Hash"),$ret_or_1)?($eqeqeq($$("CompletingHash"),$ret_or_2=pattern)||($eqeqeq(nil,$ret_or_2)?(pattern=$$("CompletingHash").$new(),$truthy(pattern["$respond_to?"]("convert"))&&(conv=pattern.$method("convert").$to_proc())):self.$raise($$("ArgumentError"),"argument pattern given twice")),$send(o,"each",[],(function(pat,$c){var $post_args,$d;return null==pat&&(pat=nil),$post_args=$slice.call(arguments,1),$d=[pat,$send($post_args,"fetch",[0],(function(){return pat}),0)],$send(pattern,"[]=",$d),$d[$d.length-1]}),-2)):$eqeqeq($$("Module"),$ret_or_1)?self.$raise($$("ArgumentError"),"unsupported argument type: "+o,$$("ParseError").$filter_backtrace(self.$caller(4))):$truthy($send($$("ArgumentStyle").$keys(),"any?",[],(function($ret_or_2){return null==$ret_or_2&&($ret_or_2=nil),$ret_or_2["$==="]($ret_or_1)}),1))?style=self.$notwice($$("ArgumentStyle")["$[]"](o),style,"style"):$eqeqeq(/^--no-([^\[\]=\s]*)(.+)?/,$ret_or_1)?($c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],q=$c[0],a=$c[1],o=self.$notwice($truthy(a)?$$("Object"):$$("TrueClass"),klass,"type"),$truthy(not_style)||($d=self.$search("atype",o),$c=$to_ary($d),not_pattern=null==$c[0]?nil:$c[0],not_conv=null==$c[1]?nil:$c[1]),$truthy(a)&&(not_style=($truthy($ret_or_3=not_style)?$ret_or_3:default_style).$guess(arg=a)),default_style=$$$($$("Switch"),"NoArgument"),$truthy(default_pattern)||($d=self.$search("atype",$$("FalseClass")),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1]),ldesc["$<<"]("--no-"+q),q=q.$downcase().$tr("_","-"),long$["$<<"]("no-"+q),nolong["$<<"](q)):$eqeqeq(/^--\[no-\]([^\[\]=\s]*)(.+)?/,$ret_or_1)?($c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],q=$c[0],a=$c[1],o=self.$notwice($truthy(a)?$$("Object"):$$("TrueClass"),klass,"type"),$truthy(a)&&(default_style=default_style.$guess(arg=a),$truthy(default_pattern)||($d=self.$search("atype",o),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1])),ldesc["$<<"]("--[no-]"+q),o=q.$downcase().$tr("_","-"),long$["$<<"](o),$truthy(not_style)||($d=self.$search("atype",$$("FalseClass")),$c=$to_ary($d),not_pattern=null==$c[0]?nil:$c[0],not_conv=null==$c[1]?nil:$c[1]),not_style=$$$($$("Switch"),"NoArgument"),nolong["$<<"]("no-"+o)):$eqeqeq(/^--([^\[\]=\s]*)(.+)?/,$ret_or_1)?($c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],q=$c[0],a=$c[1],$truthy(a)&&(o=self.$notwice($$("NilClass"),klass,"type"),default_style=default_style.$guess(arg=a),$truthy(default_pattern)||($d=self.$search("atype",o),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1])),ldesc["$<<"]("--"+q),o=q.$downcase().$tr("_","-"),long$["$<<"](o)):$eqeqeq(/^-(\[\^?\]?(?:[^\\\]]|\\.)*\])(.+)?/,$ret_or_1)?($c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],q=$c[0],a=$c[1],o=self.$notwice($$("Object"),klass,"type"),$truthy(a)?(default_style=default_style.$guess(arg=a),$truthy(default_pattern)||($d=self.$search("atype",o),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1])):has_arg=!0,sdesc["$<<"]("-"+q),short$["$<<"]($$("Regexp").$new(q))):$eqeqeq(/^-(.)(.+)?/,$ret_or_1)?($c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],q=$c[0],a=$c[1],$truthy(a)&&(o=self.$notwice($$("NilClass"),klass,"type"),default_style=default_style.$guess(arg=a),$truthy(default_pattern)||($d=self.$search("atype",o),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1])),sdesc["$<<"]("-"+q),short$["$<<"](q)):$eqeqeq(/^=/,$ret_or_1)?(style=self.$notwice(default_style.$guess(arg=o),style,"style"),$truthy(default_pattern)?nil:($d=self.$search("atype",$$("Object")),$c=$to_ary($d),default_pattern=null==$c[0]?nil:$c[0],conv=null==$c[1]?nil:$c[1],$d)):desc.$push(o)}),{$$arity:1,$$s:this}),$truthy(default_pattern)||($b=this.$search("atype",default_style.$pattern()),$a=$to_ary($b),default_pattern=null==$a[0]?nil:$a[0],conv=null==$a[1]?nil:$a[1]),$not($truthy($ret_or_2=short$["$empty?"]())?long$["$empty?"]():$ret_or_2)?($truthy(has_arg)&&$eqeq(default_style,$$$($$("Switch"),"NoArgument"))&&(default_style=$$$($$("Switch"),"RequiredArgument")),s=($truthy($ret_or_2=style)?$ret_or_2:default_style).$new($truthy($ret_or_2=pattern)?$ret_or_2:default_pattern,conv,sdesc,ldesc,arg,desc,block)):$not(block)?(($truthy(style)||$truthy(pattern))&&this.$raise($$("ArgumentError"),"no switch given",$$("ParseError").$filter_backtrace(this.$caller())),s=desc):(short$["$<<"](pattern),s=($truthy($ret_or_2=style)?$ret_or_2:default_style).$new(pattern,conv,nil,nil,arg,desc,block)),[s,short$,long$,$truthy(not_style)?not_style.$new(not_pattern,not_conv,sdesc,ldesc,nil,desc,block):nil,nolong]}),-2),$def(self,"$define",(function $$define($a){var opts,block=$$define.$$p||nil,self=this,sw=nil;return $$define.$$p=null,opts=$slice.call(arguments),$send(self.$top(),"append",$to_a(sw=self.$make_switch(opts,block))),sw["$[]"](0)}),-1),$def(self,"$on",(function $$on($a){var $post_args,block=$$on.$$p||nil,self=this;return $$on.$$p=null,$post_args=$slice.call(arguments),$send(self,"define",$to_a($post_args),block.$to_proc()),self}),-1),$alias(self,"def_option","define"),$def(self,"$define_head",(function $$define_head($a){var opts,block=$$define_head.$$p||nil,self=this,sw=nil;return $$define_head.$$p=null,opts=$slice.call(arguments),$send(self.$top(),"prepend",$to_a(sw=self.$make_switch(opts,block))),sw["$[]"](0)}),-1),$def(self,"$on_head",(function $$on_head($a){var $post_args,block=$$on_head.$$p||nil,self=this;return $$on_head.$$p=null,$post_args=$slice.call(arguments),$send(self,"define_head",$to_a($post_args),block.$to_proc()),self}),-1),$alias(self,"def_head_option","define_head"),$def(self,"$define_tail",(function $$define_tail($a){var opts,block=$$define_tail.$$p||nil,self=this,sw=nil;return $$define_tail.$$p=null,opts=$slice.call(arguments),$send(self.$base(),"append",$to_a(sw=self.$make_switch(opts,block))),sw["$[]"](0)}),-1),$def(self,"$on_tail",(function $$on_tail($a){var $post_args,block=$$on_tail.$$p||nil,self=this;return $$on_tail.$$p=null,$post_args=$slice.call(arguments),$send(self,"define_tail",$to_a($post_args),block.$to_proc()),self}),-1),$alias(self,"def_tail_option","define_tail"),$def(self,"$separator",(function(string){return this.$top().$append(string,nil,nil)}),1),$def(self,"$order",(function $$order($a,$b){var $post_args,$kwargs,argv,into,nonopt=$$order.$$p||nil,self=this;return $$order.$$p=null,$post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),argv=$post_args,null==(into=($kwargs=$ensure_kwargs($kwargs)).$$smap.into)&&(into=nil),$eqeq(argv.$size(),1)&&$eqeqeq($$("Array"),argv["$[]"](0))&&(argv=argv["$[]"](0).$dup()),$send(self,"order!",[argv,$hash2(["into"],{into:into})],nonopt.$to_proc())}),-1),$def(self,"$order!",(function $OptionParser_order$excl$49($a,$b){var $post_args,$kwargs,argv,into,nonopt=$OptionParser_order$excl$49.$$p||nil,self=this,setter=nil;return $OptionParser_order$excl$49.$$p=null,$post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),$kwargs=$ensure_kwargs($kwargs),$post_args.length>0&&(argv=$post_args.shift()),null==argv&&(argv=self.$default_argv()),null==(into=$kwargs.$$smap.into)&&(into=nil),$truthy(into)&&(setter=$lambda((function(name,val){var $c;return null==name&&(name=nil),null==val&&(val=nil),$c=[name.$to_sym(),val],$send(into,"[]=",$c),$c[$c.length-1]}),2)),$send(self,"parse_in_order",[argv,setter],nonopt.$to_proc())}),-1),$def(self,"$parse_in_order",(function $$parse_in_order(argv,setter){var $a,nonopt=$$parse_in_order.$$p||nil,opt=nil,arg=nil,val=nil,rest=nil,$ret_or_2=nil;return $$parse_in_order.$$p=null,null==argv&&(argv=this.$default_argv()),null==setter&&(setter=nil),$a=$to_ary(nil),opt=null==$a[0]?nil:$a[0],arg=null==$a[1]?nil:$a[1],val=null==$a[2]?nil:$a[2],rest=null==$a[3]?nil:$a[3],nonopt=$truthy($ret_or_2=nonopt)?$ret_or_2:$send(this,"proc",[],(function $$51(a){return null==a&&(a=nil),(null==$$51.$$s?this:$$51.$$s).$throw("terminate",a)}),{$$arity:1,$$s:this}),$truthy(arg=$send(this,"catch",["terminate"],(function $$52(){var $c,$d,self=null==$$52.$$s?this:$$52.$$s,sw=nil,cb=nil,eq=nil,has_arg=nil,$ret_or_3=nil;for(null==$gvars["!"]&&($gvars["!"]=nil);$truthy(arg=argv.$shift());)if($eqeqeq(/^--([^=]*)(?:=(.*))?/m,$ret_or_2=arg)){$c=[$$("Regexp").$last_match(1),$$("Regexp").$last_match(2)],opt=$c[0],rest=$c[1],opt=opt.$tr("_","-");try{$d=self.$complete("long",opt,!0),$c=$to_ary($d),sw=null==$c[0]?nil:$c[0],$truthy(self.$require_exact())&&$not(sw.$long()["$include?"](arg))&&self.$raise($$("InvalidOption"),arg)}catch($err){if(!Opal.rescue($err,[$$("ParseError")]))throw $err;try{self.$raise($gvars["!"].$set_option(arg,!0))}finally{Opal.pop_exception()}}try{$d=$send(sw,"parse",[rest,argv],(function $$53($e){var $post_args,self=null==$$53.$$s?this:$$53.$$s;return $post_args=$slice.call(arguments),$send(self,"raise",$to_a($post_args))}),{$$arity:-1,$$s:self}),$c=$to_ary($d),opt=null==$c[0]?nil:$c[0],cb=null==$c[1]?nil:$c[1],val=null==$c[2]?nil:$c[2],$truthy(cb)&&(val=cb.$call(val)),$truthy(setter)&&setter.$call(sw.$switch_name(),val)}catch($err){if(!Opal.rescue($err,[$$("ParseError")]))throw $err;try{self.$raise($gvars["!"].$set_option(arg,rest))}finally{Opal.pop_exception()}}}else if($eqeqeq(/^-(.)((=).*|.+)?/m,$ret_or_2)){$c=[$$("Regexp").$last_match(3),$$("Regexp").$last_match(2),$$("Regexp").$last_match(1)],eq=$c[0],rest=$c[1],opt=$c[2],has_arg=($c=[eq,rest])[0],val=$c[1];try{if($d=self.$search("short",opt),$c=$to_ary($d),sw=null==$c[0]?nil:$c[0],!$truthy(sw))try{$d=self.$complete("short",opt),$c=$to_ary($d),sw=null==$c[0]?nil:$c[0],val=arg.$delete_prefix("-"),has_arg=!0}catch($err){if(!Opal.rescue($err,[$$("InvalidOption")]))throw $err;try{$truthy(self.$require_exact())&&self.$raise(),$d=self.$complete("long",opt),$c=$to_ary($d),sw=null==$c[0]?nil:$c[0],eq=$truthy($ret_or_3=eq)?$ret_or_3:rest["$!"]()}finally{Opal.pop_exception()}}}catch($err){if(!Opal.rescue($err,[$$("ParseError")]))throw $err;try{self.$raise($gvars["!"].$set_option(arg,!0))}finally{Opal.pop_exception()}}var $no_errors=!0;try{$d=$send(sw,"parse",[val,argv],(function $$54($e){var exc,self=null==$$54.$$s?this:$$54.$$s;return exc=$slice.call(arguments),$truthy(eq)?$send(self,"raise",$to_a(exc)):nil}),{$$arity:-1,$$s:self}),$c=$to_ary($d),opt=null==$c[0]?nil:$c[0],cb=null==$c[1]?nil:$c[1],val=null==$c[2]?nil:$c[2]}catch($err){if($no_errors=!1,!Opal.rescue($err,[$$("ParseError")]))throw $err;try{self.$raise($gvars["!"].$set_option(arg,$rb_gt(arg.$length(),2)))}finally{Opal.pop_exception()}}finally{$no_errors&&$truthy(has_arg)&&$not(eq)&&$eqeq(arg,"-"+opt)&&self.$raise($$("InvalidOption"),arg)}try{$truthy(opt)&&($not(rest)||$neqeq(opt=opt.$sub(/^-*/,"-"),"-"))&&argv.$unshift(opt),$truthy(cb)&&(val=cb.$call(val)),$truthy(setter)&&setter.$call(sw.$switch_name(),val)}catch($err){if(!Opal.rescue($err,[$$("ParseError")]))throw $err;try{self.$raise($gvars["!"].$set_option(arg,$rb_gt(arg.$length(),2)))}finally{Opal.pop_exception()}}}else $send(self,"catch",["prune"],(function $$55(){return $send(null==$$55.$$s?this:$$55.$$s,"visit",["each_option"],(function(sw0){return null==sw0&&(sw0=nil),sw=sw0,$eqeqeq($$("Switch"),sw)&&$truthy(sw["$match_nonswitch?"](arg))?sw.$block().$call(arg):nil}),1),nonopt.$call(arg)}),{$$arity:0,$$s:self});return nil}),{$$arity:0,$$s:this}))&&argv.$unshift(arg),$send(this,"visit",["search","short",nil],(function(sw){return null==sw&&(sw=nil),$truthy(sw.$pattern())?nil:$send(sw.$block(),"call",$to_a(argv))}),1),argv}),-1),self.$private("parse_in_order"),$def(self,"$permute",(function($a,$b){var $post_args,$kwargs,argv,into,self=this;return $post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),argv=$post_args,null==(into=($kwargs=$ensure_kwargs($kwargs)).$$smap.into)&&(into=nil),$eqeq(argv.$size(),1)&&$eqeqeq($$("Array"),argv["$[]"](0))&&(argv=argv["$[]"](0).$dup()),self["$permute!"](argv,$hash2(["into"],{into:into}))}),-1),$def(self,"$permute!",(function($a,$b){var $post_args,$kwargs,argv,into,self=this,nonopts=nil;return $post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),$kwargs=$ensure_kwargs($kwargs),$post_args.length>0&&(argv=$post_args.shift()),null==argv&&(argv=self.$default_argv()),null==(into=$kwargs.$$smap.into)&&(into=nil),nonopts=[],$send(self,"order!",[argv,$hash2(["into"],{into:into})],nonopts.$method("<<").$to_proc()),argv["$[]="](0,0,nonopts),argv}),-1),$def(self,"$parse",(function($a,$b){var $post_args,$kwargs,argv,into,self=this;return $post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),argv=$post_args,null==(into=($kwargs=$ensure_kwargs($kwargs)).$$smap.into)&&(into=nil),$eqeq(argv.$size(),1)&&$eqeqeq($$("Array"),argv["$[]"](0))&&(argv=argv["$[]"](0).$dup()),self["$parse!"](argv,$hash2(["into"],{into:into}))}),-1),$def(self,"$parse!",(function($a,$b){var $post_args,$kwargs,argv,into,self=this;return $post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),$kwargs=$ensure_kwargs($kwargs),$post_args.length>0&&(argv=$post_args.shift()),null==argv&&(argv=self.$default_argv()),null==(into=$kwargs.$$smap.into)&&(into=nil),$truthy($$("ENV")["$include?"]("POSIXLY_CORRECT"))?self["$order!"](argv,$hash2(["into"],{into:into})):self["$permute!"](argv,$hash2(["into"],{into:into}))}),-1),$def(self,"$getopts",(function($a){var args,$b,self=this,argv=nil,single_options=nil,long_options=nil,result=nil;return args=$slice.call(arguments),argv=$eqeqeq($$("Array"),args.$first())?args.$shift():self.$default_argv(),single_options=null==($b=[].concat($to_a(args)))[0]?nil:$b[0],long_options=$slice.call($b,1),result=$hash2([],{}),$truthy(single_options)&&$send(single_options,"scan",[/(.)(:)?/],(function $$60(opt,val){var self=null==$$60.$$s?this:$$60.$$s;return null==opt&&(opt=nil),null==val&&(val=nil),$truthy(val)?(result["$[]="](opt,nil),self.$define("-"+opt+" VAL")):(result["$[]="](opt,!1),self.$define("-"+opt))}),{$$arity:2,$$s:self}),$send(long_options,"each",[],(function $$61(arg){var $c,$d,opt,self=null==$$61.$$s?this:$$61.$$s,desc=nil,val=nil,$ret_or_2=nil;return null==arg&&(arg=nil),$d=arg.$split(";",2),arg=null==($c=$to_ary($d))[0]?nil:$c[0],desc=null==$c[1]?nil:$c[1],$d=arg.$split(":",2),opt=null==($c=$to_ary($d))[0]?nil:$c[0],val=null==$c[1]?nil:$c[1],$truthy(val)?(result["$[]="](opt,$truthy(val["$empty?"]())?nil:val),$send(self,"define",["--"+opt+"="+($truthy($ret_or_2=result["$[]"](opt))?$ret_or_2:"VAL")].concat($to_a([desc].$compact())))):(result["$[]="](opt,!1),$send(self,"define",["--"+opt].concat($to_a([desc].$compact()))))}),{$$arity:1,$$s:self}),self.$parse_in_order(argv,result.$method("[]=")),result}),-1),$defs(self,"$getopts",(function($a){var args,self=this;return args=$slice.call(arguments),$send(self.$new(),"getopts",$to_a(args))}),-1),$def(self,"$visit",(function $$visit(id,$a){var $post_args,args,block=$$visit.$$p||nil,self=this;return $$visit.$$p=null,$post_args=$slice.call(arguments,1),args=$post_args,$send(self.stack,"reverse_each",[],(function(el){return null==el&&(el=nil),$send(el,"__send__",[id].concat($to_a(args)),block.$to_proc())}),1),nil}),-2),self.$private("visit"),$def(self,"$search",(function $$search(id,key){var block_given,$yield=$$search.$$p||nil,self=this,retval=nil;return $$search.$$p=null,block_given=$yield!==nil,retval=nil,function(){try{var $t_break=$thrower("break");$send(self,"visit",["search",id,key],(function(k){null==k&&(k=nil),retval=$truthy(block_given)?Opal.yield1($yield,k):k,$t_break.$throw()}),1)}catch($e){if($e===$t_break)return $e.$v;throw $e}}(),retval}),2),self.$private("search"),$def(self,"$complete",(function(typ,opt,$a,$b){try{var $post_args,icase,pat,$t_return=$thrower("return"),self=this,retval=nil,ambiguous=nil,exc=nil;return($post_args=$slice.call(arguments,2)).length>0&&(icase=$post_args.shift()),null==icase&&(icase=!1),$truthy((pat=$post_args)["$empty?"]())&&(retval=nil,function(){try{var $t_break=$thrower("break");$send(self,"search",[typ,opt],(function(sw){null==sw&&(sw=nil),retval=[sw,opt],$t_break.$throw()}),1)}catch($e){if($e===$t_break)return $e.$v;throw $e}}(),$truthy(retval))?retval:(ambiguous=$send(self,"catch",["ambiguous"],(function $$65(){var self=null==$$65.$$s?this:$$65.$$s;if(retval=nil,function(){try{var $t_break=$thrower("break");$send(self,"visit",["complete",typ,opt,icase].concat($to_a(pat)),(function(o,$c){var $post_args;null==o&&(o=nil),$post_args=$slice.call(arguments,1),retval=$post_args,$t_break.$throw()}),-2)}catch($e){if($e===$t_break)return $e.$v;throw $e}}(),!$truthy(retval))return nil;$t_return.$throw(retval)}),{$$arity:0,$$s:self,$$ret:$t_return}),exc=$truthy(ambiguous)?$$("AmbiguousOption"):$$("InvalidOption"),self.$raise(exc.$new(opt,$hash2(["additional"],{additional:self.$method("additional_message").$curry()["$[]"](typ)}))))}catch($e){if($e===$t_return)return $e.$v;throw $e}}),-3),self.$private("complete"),$def(self,"$additional_message",(function(typ,opt){var $b,all_candidates=nil,checker=nil;return $truthy(typ)&&$truthy(opt)&&$truthy(($b=$$("DidYouMean","skip_raise"))&&$$$($b,"SpellChecker","skip_raise")?"constant":nil)?(all_candidates=[],$send(this,"visit",["get_candidates",typ],(function(candidates){return null==candidates&&(candidates=nil),all_candidates.$concat(candidates)}),1),$send(all_candidates,"select!",[],(function(cand){return null==cand&&(cand=nil),cand["$is_a?"]($$("String"))}),1),checker=$$$($$("DidYouMean"),"SpellChecker").$new($hash2(["dictionary"],{dictionary:all_candidates})),$$("DidYouMean").$formatter().$message_for(all_candidates["$&"](checker.$correct(opt)))):nil}),2),$def(self,"$candidate",(function(word){var $a,$b,$ret_or_2,pat,list=nil,long$=nil,short$=nil,arg=nil,argpat=nil;return list=[],$eqeqeq("-",$ret_or_2=word)?long$=short$=!0:$eqeqeq(/^--/,$ret_or_2)?($b=word.$split(/=/,2),$a=$to_ary($b),word=null==$a[0]?nil:$a[0],arg=null==$a[1]?nil:$a[1],$truthy(arg)&&$not(arg["$empty?"]())&&(argpat=$$("Completion").$regexp(arg,!1)),long$=!0):$eqeqeq(/^-/,$ret_or_2)&&(short$=!0),pat=$$("Completion").$regexp(word,long$),$send(this,"visit",["each_option"],(function(opt){var opts=nil;return null==opt&&(opt=nil),$eqeqeq($$("Switch"),opt)?(opts=$rb_plus($truthy(long$)?opt.$long():[],$truthy(short$)?opt.$short():[]),$truthy(pat)&&(opts=$send($send($$("Completion"),"candidate",[word,!0,pat],opts.$method("each").$to_proc()),"map",[],"first".$to_proc())),$truthy(/^=/["$=~"](opt.$arg()))&&($send(opts,"map!",[],(function(sw){return null==sw&&(sw=nil),$rb_plus(sw,"=")}),1),$truthy(arg)&&$eqeqeq($$("CompletingHash"),opt.$pattern())&&$truthy(opts=opt.$pattern().$candidate(arg,!1,argpat))&&$send(opts,"map!",[],"last".$to_proc())),list.$concat(opts)):nil}),1),list}),1),$def(self,"$load",(function(filename){var $a,basename=nil;if(null==$gvars[0]&&($gvars[0]=nil),null==filename&&(filename=nil),!$truthy(filename)){basename=$$("File").$basename($gvars[0],".*");try{if($truthy(this.$load($$("File").$expand_path(basename,"~/.options"))))return!0}catch($err){if(!Opal.rescue($err,[$$("StandardError")]))throw $err;Opal.pop_exception()}return basename["$<<"](".options"),$send([$$("ENV")["$[]"]("XDG_CONFIG_HOME"),"~/.config"].concat($to_a(($a=$$("ENV")["$[]"]("XDG_CONFIG_DIRS"),$a===nil||null==$a?nil:$a.$split($$$($$("File"),"PATH_SEPARATOR"))))).concat(["~/config/settings"]),"any?",[],(function $$71(dir){var self=null==$$71.$$s?this:$$71.$$s;if(null==dir&&(dir=nil),$not(dir)||$truthy(dir["$empty?"]()))return nil;try{return self.$load($$("File").$expand_path(basename,dir))}catch($err){if(!Opal.rescue($err,[$$("StandardError")]))throw $err;try{return nil}finally{Opal.pop_exception()}}}),{$$arity:1,$$s:this})}try{return $send(this,"parse",$to_a($send($$("IO").$readlines(filename),"each",[],"chomp!".$to_proc()))),!0}catch($err){if(!Opal.rescue($err,[$$$($$("Errno"),"ENOENT"),$$$($$("Errno"),"ENOTDIR")]))throw $err;try{return!1}finally{Opal.pop_exception()}}}),-1),$def(self,"$environment",(function(env){var $ret_or_3;return null==$gvars[0]&&($gvars[0]=nil),null==env&&(env=$$("File").$basename($gvars[0],".*")),$truthy(env=$truthy($ret_or_3=$$("ENV")["$[]"](env))?$ret_or_3:$$("ENV")["$[]"](env.$upcase()))?(this.$require("shellwords"),$send(this,"parse",$to_a($$("Shellwords").$shellwords(env)))):nil}),-1),$send(self,"accept",[$$("Object")],(function(s){var $ret_or_2;return null==s&&(s=nil),$truthy($ret_or_2=s)?$ret_or_2:s["$nil?"]()}),{$$arity:1,$$has_trailing_comma_in_args:!0}),$send(self,"accept",[$$("NilClass")],(function(s){return null==s&&(s=nil),s}),{$$arity:1,$$has_trailing_comma_in_args:!0}),$send(self,"accept",[$$("String"),/.+/m],(function(s,$a){return null==s&&(s=nil),$slice.call(arguments,1),s}),-2),"b[01]+(?:_[01]+)*",(octal="0(?:[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*|"+(hex="x[\\da-f]+(?:_[\\da-f]+)*")+")?")+"|"+(decimal="\\d+(?:_\\d+)*"),$send(self,"accept",[$$("Integer"),$regexp(["\\A[-+]?(?:","0(?:[0-7]+(?:_[0-7]+)*|b[01]+(?:_[01]+)*|x[\\da-f]+(?:_[\\da-f]+)*)?|\\d+(?:_\\d+)*",")\\z"],"i")],(function $OptionParser$75(s){var self=null==$OptionParser$75.$$s?this:$OptionParser$75.$$s;if(null==s&&(s=nil),!$truthy(s))return nil;try{return self.$Integer(s)}catch($err){if(!Opal.rescue($err,[$$("ArgumentError")]))throw $err;try{return self.$raise($$$($$("OptionParser"),"InvalidArgument"),s)}finally{Opal.pop_exception()}}}),{$$arity:1,$$s:self,$$has_trailing_comma_in_args:!0}),floatpat=$regexp(["\\A[-+]?",float$="(?:"+decimal+"(?=(.)?)(?:\\.(?:"+decimal+")?)?|\\."+decimal+")(?:E[-+]?"+decimal+")?","\\z"],"i"),$send(self,"accept",[$$("Float"),floatpat],(function(s){return null==s&&(s=nil),$truthy(s)?s.$to_f():nil}),{$$arity:1,$$has_trailing_comma_in_args:!0}),real="[-+]?(?:"+octal+"|"+float$+")",$send(self,"accept",[$$("Numeric"),$regexp(["\\A(",real,")(?:/(",real,"))?\\z"],"i")],(function $OptionParser$77(s,d,f,n){var self=null==$OptionParser$77.$$s?this:$OptionParser$77.$$s;return null==s&&(s=nil),null==d&&(d=nil),null==f&&(f=nil),null==n&&(n=nil),$truthy(n)?self.$Rational(d,n):$truthy(f)?self.$Float(s):self.$Integer(s)}),{$$arity:4,$$s:self,$$has_trailing_comma_in_args:!0}),$const_set($nesting[0],"DecimalInteger",$regexp(["\\A[-+]?",decimal,"\\z"],"i")),$send(self,"accept",[$$("DecimalInteger"),$$("DecimalInteger")],(function $OptionParser$78(s){var self=null==$OptionParser$78.$$s?this:$OptionParser$78.$$s;if(null==s&&(s=nil),!$truthy(s))return nil;try{return self.$Integer(s,10)}catch($err){if(!Opal.rescue($err,[$$("ArgumentError")]))throw $err;try{return self.$raise($$$($$("OptionParser"),"InvalidArgument"),s)}finally{Opal.pop_exception()}}}),{$$arity:1,$$s:self,$$has_trailing_comma_in_args:!0}),$const_set($nesting[0],"OctalInteger",$regexp(["\\A[-+]?(?:[0-7]+(?:_[0-7]+)*|0(?:","b[01]+(?:_[01]+)*","|",hex,"))\\z"],"i")),$send(self,"accept",[$$("OctalInteger"),$$("OctalInteger")],(function $OptionParser$79(s){var self=null==$OptionParser$79.$$s?this:$OptionParser$79.$$s;if(null==s&&(s=nil),!$truthy(s))return nil;try{return self.$Integer(s,8)}catch($err){if(!Opal.rescue($err,[$$("ArgumentError")]))throw $err;try{return self.$raise($$$($$("OptionParser"),"InvalidArgument"),s)}finally{Opal.pop_exception()}}}),{$$arity:1,$$s:self,$$has_trailing_comma_in_args:!0}),$const_set($nesting[0],"DecimalNumeric",floatpat),$send(self,"accept",[$$("DecimalNumeric"),floatpat],(function $OptionParser$80(s,f){var self=null==$OptionParser$80.$$s?this:$OptionParser$80.$$s;if(null==s&&(s=nil),null==f&&(f=nil),!$truthy(s))return nil;try{return $truthy(f)?self.$Float(s):self.$Integer(s)}catch($err){if(!Opal.rescue($err,[$$("ArgumentError")]))throw $err;try{return self.$raise($$$($$("OptionParser"),"InvalidArgument"),s)}finally{Opal.pop_exception()}}}),{$$arity:2,$$s:self}),yesno=$$("CompletingHash").$new(),$send(["-","no","false"],"each",[],(function(el){var $a;return null==el&&(el=nil),$send(yesno,"[]=",$a=[el,!1]),$a[$a.length-1]}),1),$send(["+","yes","true"],"each",[],(function(el){var $a;return null==el&&(el=nil),$send(yesno,"[]=",$a=[el,!0]),$a[$a.length-1]}),1),yesno["$[]="]("nil",!1),$send(self,"accept",[$$("TrueClass"),yesno],(function(arg,val){var $ret_or_2;return null==arg&&(arg=nil),null==val&&(val=nil),$truthy($ret_or_2=val["$nil?"]())?$ret_or_2:val}),2),$send(self,"accept",[$$("FalseClass"),yesno],(function(arg,val){var $ret_or_2;return null==arg&&(arg=nil),null==val&&(val=nil),$truthy($ret_or_2=val["$nil?"]()["$!"]())?val:$ret_or_2}),2),$send(self,"accept",[$$("Array")],(function(s){return null==s&&(s=nil),$truthy(s)&&(s=$send(s.$split(","),"collect",[],(function(ss){return null==ss&&(ss=nil),$truthy(ss["$empty?"]())?nil:ss}),1)),s}),{$$arity:1,$$has_trailing_comma_in_args:!0}),$send(self,"accept",[$$("Regexp"),/^\/((?:\\.|[^\\])*)\/([[:alpha:]]+)?$|.*/],(function(all,s,o){var $ret_or_2,f=nil,k=nil;return null==all&&(all=nil),null==s&&(s=nil),null==o&&(o=nil),f=0,$truthy(o)&&($truthy(/i/["$=~"](o))&&(f=f["$|"]($$$($$("Regexp"),"IGNORECASE"))),$truthy(/m/["$=~"](o))&&(f=f["$|"]($$$($$("Regexp"),"MULTILINE"))),$truthy(/x/["$=~"](o))&&(f=f["$|"]($$$($$("Regexp"),"EXTENDED"))),k=o.$delete("imx"),$truthy(k["$empty?"]())&&(k=nil)),$$("Regexp").$new($truthy($ret_or_2=s)?$ret_or_2:all,f,k)}),3),function($base,$super,$parent_nesting){var self=$klass($base,$super,"ParseError"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.args=$proto.reason=$proto.arg0=nil,$const_set($nesting[0],"Reason","parse error"),$def(self,"$initialize",(function($a,$b){var $post_args,$kwargs,args,additional,$c,self=this;return $post_args=$slice.call(arguments),$kwargs=$extract_kwargs($post_args),args=$post_args,null==(additional=($kwargs=$ensure_kwargs($kwargs)).$$smap.additional)&&(additional=nil),self.additional=additional,$c=$to_ary(args),self.arg0=null==$c[0]?nil:$c[0],self.args=args,self.reason=nil}),-1),self.$attr_reader("args"),self.$attr_writer("reason"),self.$attr_accessor("additional"),$def(self,"$recover",(function(argv){return argv["$[]="](0,0,this.args),argv}),1),$defs(self,"$filter_backtrace",(function(array){return null==$gvars.DEBUG&&($gvars.DEBUG=nil),$truthy($gvars.DEBUG)||$send(array,"delete_if",[],$regexp(["\\A",$$("Regexp").$quote("./optparse.rb"),":"]).$method("=~").$to_proc()),array}),1),$def(self,"$set_backtrace",(function $$set_backtrace(array){return $$set_backtrace.$$p=null,$send2(this,$find_super(this,"set_backtrace",$$set_backtrace,!1,!0),"set_backtrace",[this.$class().$filter_backtrace(array)],null)}),1),$def(self,"$set_option",(function(opt,eq){return $truthy(eq)?this.args["$[]="](0,opt):this.args.$unshift(opt),this}),2),$def(self,"$reason",(function(){var $ret_or_2;return $truthy($ret_or_2=this.reason)?$ret_or_2:$$$(this.$class(),"Reason")}),0),$def(self,"$inspect",(function(){return"#<"+this.$class()+": "+this.$args().$join(" ")+">"}),0),$def(self,"$message",(function(){return this.$reason()+": "+this.$args().$join(" ")+($truthy(this.$additional())?this.$additional()["$[]"](this.arg0):nil)}),0),$alias(self,"to_s","message")}($nesting[0],$$("RuntimeError"),$nesting),function($base,$super){$klass($base,$super,"AmbiguousOption").$const_set("Reason","ambiguous option")}($nesting[0],$$("ParseError")),function($base,$super){$klass($base,$super,"NeedlessArgument").$const_set("Reason","needless argument")}($nesting[0],$$("ParseError")),function($base,$super){$klass($base,$super,"MissingArgument").$const_set("Reason","missing argument")}($nesting[0],$$("ParseError")),function($base,$super){$klass($base,$super,"InvalidOption").$const_set("Reason","invalid option")}($nesting[0],$$("ParseError")),function($base,$super){$klass($base,$super,"InvalidArgument").$const_set("Reason","invalid argument")}($nesting[0],$$("ParseError")),function($base,$super){$klass($base,$super,"AmbiguousArgument").$const_set("Reason","ambiguous argument")}($nesting[0],$$("InvalidArgument")),function($base,$parent_nesting){var self=$module($base,"Arguable"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$options=",(function(opt){return $truthy(this.optparse=opt)?nil:function(self,$parent_nesting){return self.$undef_method("options"),self.$undef_method("options=")}(Opal.get_singleton_class(this))}),1),$def(self,"$options",(function $$options(){var $yield=$$options.$$p||nil,$ret_or_2=nil;if(null==this.optparse&&(this.optparse=nil),null==$gvars["!"]&&($gvars["!"]=nil),$$options.$$p=null,this.optparse=$truthy($ret_or_2=this.optparse)?$ret_or_2:$$("OptionParser").$new(),this.optparse["$default_argv="](this),!$truthy($ret_or_2=$yield!==nil))return this.optparse;try{return Opal.yield1($yield,this.optparse)}catch($err){if(!Opal.rescue($err,[$$("ParseError")]))throw $err;try{return this.optparse.$warn($gvars["!"]),nil}finally{Opal.pop_exception()}}}),0),$def(self,"$order!",(function $Arguable_order$excl$89(){var blk=$Arguable_order$excl$89.$$p||nil;return $Arguable_order$excl$89.$$p=null,$send(this.$options(),"order!",[this],blk.$to_proc())}),0),$def(self,"$permute!",(function(){return this.$options()["$permute!"](this)}),0),$def(self,"$parse!",(function(){return this.$options()["$parse!"](this)}),0),$def(self,"$getopts",(function($a){var args,self=this;return args=$slice.call(arguments),$send(self.$options(),"getopts",[self].concat($to_a(args)))}),-1),$defs(self,"$extend_object",(function $$extend_object(obj){var $yield=$$extend_object.$$p||nil;return $$extend_object.$$p=null,$send2(this,$find_super(this,"extend_object",$$extend_object,!1,!0),"extend_object",[obj],$yield),$send(obj,"instance_eval",[],(function $$92(){return(null==$$92.$$s?this:$$92.$$s).optparse=nil}),{$$arity:0,$$s:this})}),1),$def(self,"$initialize",(function $$initialize($a){var args,$yield=$$initialize.$$p||nil,self=this;return $$initialize.$$p=null,args=$slice.call(arguments),$send2(self,$find_super(self,"initialize",$$initialize,!1,!0),"initialize",$to_a(args),$yield),self.optparse=nil}),-1)}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Acceptables"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$const_set("DecimalInteger",$$$($$("OptionParser"),"DecimalInteger")),self.$const_set("OctalInteger",$$$($$("OptionParser"),"OctalInteger")),self.$const_set("DecimalNumeric",$$$($$("OptionParser"),"DecimalNumeric"))}($nesting[0],$nesting)}($nesting[0],0,$nesting),$$("ARGV").$extend($$$($$("OptionParser"),"Arguable")),$const_set($nesting[0],"OptParse",$$("OptionParser"))}));
