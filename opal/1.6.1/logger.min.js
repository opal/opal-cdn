Opal.queue((function(Opal){var $klass=Opal.klass,$module=Opal.module,$const_set=Opal.const_set,$send=Opal.send,$def=Opal.def,$eqeqeq=Opal.eqeqeq,$truthy=Opal.truthy,$rb_le=Opal.rb_le,$rb_lt=Opal.rb_lt,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("include,to_h,map,constants,const_get,to_s,format,chr,strftime,message_as_string,===,full_message,inspect,attr_reader,attr_accessor,new,key,upcase,raise,add,to_proc,<=,<,write,call,[],now"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Logger"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;return $proto.level=$proto.progname=$proto.pipe=$proto.formatter=nil,function($base,$parent_nesting){var $nesting=[$module($base,"Severity")].concat($parent_nesting);$const_set($nesting[0],"DEBUG",0),$const_set($nesting[0],"INFO",1),$const_set($nesting[0],"WARN",2),$const_set($nesting[0],"ERROR",3),$const_set($nesting[0],"FATAL",4),$const_set($nesting[0],"UNKNOWN",5)}($nesting[0],$nesting),self.$include($$("Severity")),$const_set($nesting[0],"SEVERITY_LABELS",$send($$("Severity").$constants(),"map",[],(function(s){return null==s&&(s=nil),[$$("Severity").$const_get(s),s.$to_s()]}),1).$to_h()),function($base,$super,$parent_nesting){var self=$klass($base,null,"Formatter"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$const_set($nesting[0],"MESSAGE_FORMAT","%s, [%s] %5s -- %s: %s\n"),$const_set($nesting[0],"DATE_TIME_FORMAT","%Y-%m-%dT%H:%M:%S.%6N"),$def(self,"$call",(function(severity,time,progname,msg){return this.$format($$("MESSAGE_FORMAT"),severity.$chr(),time.$strftime($$("DATE_TIME_FORMAT")),severity,progname,this.$message_as_string(msg))}),4),$def(self,"$message_as_string",(function(msg){var $ret_or_1;return $eqeqeq($$$("String"),$ret_or_1=msg)?msg:$eqeqeq($$$("Exception"),$ret_or_1)?msg.$full_message():msg.$inspect()}),1)}($nesting[0],0,$nesting),self.$attr_reader("level"),self.$attr_accessor("progname"),self.$attr_accessor("formatter"),$def(self,"$initialize",(function(pipe){return this.pipe=pipe,this.level=$$("DEBUG"),this.formatter=$$("Formatter").$new()}),1),$def(self,"$level=",(function(severity){var level=nil;return $eqeqeq($$$("Integer"),severity)?this.level=severity:$truthy(level=$$("SEVERITY_LABELS").$key(severity.$to_s().$upcase()))?this.level=level:this.$raise($$("ArgumentError"),"invalid log level: "+severity)}),1),$def(self,"$info",(function $$info(progname){var block=$$info.$$p||nil;return $$info.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("INFO"),nil,progname],block.$to_proc())}),-1),$def(self,"$debug",(function $$debug(progname){var block=$$debug.$$p||nil;return $$debug.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("DEBUG"),nil,progname],block.$to_proc())}),-1),$def(self,"$warn",(function $$warn(progname){var block=$$warn.$$p||nil;return $$warn.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("WARN"),nil,progname],block.$to_proc())}),-1),$def(self,"$error",(function $$error(progname){var block=$$error.$$p||nil;return $$error.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("ERROR"),nil,progname],block.$to_proc())}),-1),$def(self,"$fatal",(function $$fatal(progname){var block=$$fatal.$$p||nil;return $$fatal.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("FATAL"),nil,progname],block.$to_proc())}),-1),$def(self,"$unknown",(function $$unknown(progname){var block=$$unknown.$$p||nil;return $$unknown.$$p=null,null==progname&&(progname=nil),$send(this,"add",[$$("UNKNOWN"),nil,progname],block.$to_proc())}),-1),$def(self,"$info?",(function(){return $rb_le(this.level,$$("INFO"))}),0),$def(self,"$debug?",(function(){return $rb_le(this.level,$$("DEBUG"))}),0),$def(self,"$warn?",(function(){return $rb_le(this.level,$$("WARN"))}),0),$def(self,"$error?",(function(){return $rb_le(this.level,$$("ERROR"))}),0),$def(self,"$fatal?",(function(){return $rb_le(this.level,$$("FATAL"))}),0),$def(self,"$add",(function $$add(severity,message,progname){var block=$$add.$$p||nil,$ret_or_1=nil;return $$add.$$p=null,null==message&&(message=nil),null==progname&&(progname=nil),$truthy($rb_lt(severity=$truthy($ret_or_1=severity)?$ret_or_1:$$("UNKNOWN"),this.level))||(progname=$truthy($ret_or_1=progname)?$ret_or_1:this.progname,$truthy(message)||(block!==nil?message=Opal.yieldX(block,[]):(message=progname,progname=this.progname)),this.pipe.$write(this.formatter.$call($truthy($ret_or_1=$$("SEVERITY_LABELS")["$[]"](severity))?$ret_or_1:"ANY",$$$("Time").$now(),progname,message))),!0}),-2)}($nesting[0],0,$nesting)}));
