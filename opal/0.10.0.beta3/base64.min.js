Opal.modules["base64"]=function(Opal){var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$module=Opal.module;Opal.add_stubs(["$raise"]);return function($base){var $Base64,self=$Base64=$module($base,"Base64");var def=self.$$proto,$scope=self.$$scope,TMP_1,TMP_2,TMP_3,TMP_4,TMP_5,TMP_6;var chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var encode,decode;encode=Opal.global.btoa||function(input){var str=String(input);for(var block,charCode,idx=0,map=chars,output="";str.charAt(idx|0)||(map="=",idx%1);output+=map.charAt(63&block>>8-idx%1*8)){charCode=str.charCodeAt(idx+=3/4);if(charCode>255){self.$raise($scope.get("ArgumentError"),"invalid character (failed: The string to be encoded contains characters outside of the Latin1 range.)")}block=block<<8|charCode}return output};decode=Opal.global.atob||function(input){var str=String(input).replace(/=+$/,"");if(str.length%4==1){self.$raise($scope.get("ArgumentError"),"invalid base64 (failed: The string to be decoded is not correctly encoded.)")}for(var bc=0,bs,buffer,idx=0,output="";buffer=str.charAt(idx++);~buffer&&(bs=bc%4?bs*64+buffer:buffer,bc++%4)?output+=String.fromCharCode(255&bs>>(-2*bc&6)):0){buffer=chars.indexOf(buffer)}return output};Opal.defs(self,"$decode64",TMP_1=function ːdecode64(string){var self=this;return decode(string.replace(/\r?\n/g,""))},TMP_1.$$arity=1);Opal.defs(self,"$encode64",TMP_2=function ːencode64(string){var self=this;return encode(string).replace(/(.{60})/g,"$1\n").replace(/([^\n])$/g,"$1\n")},TMP_2.$$arity=1);Opal.defs(self,"$strict_decode64",TMP_3=function ːstrict_decode64(string){var self=this;return decode(string)},TMP_3.$$arity=1);Opal.defs(self,"$strict_encode64",TMP_4=function ːstrict_encode64(string){var self=this;return encode(string)},TMP_4.$$arity=1);Opal.defs(self,"$urlsafe_decode64",TMP_5=function ːurlsafe_decode64(string){var self=this;return decode(string.replace(/\-/g,"+").replace(/_/g,"/"))},TMP_5.$$arity=1);Opal.defs(self,"$urlsafe_encode64",TMP_6=function ːurlsafe_encode64(string){var self=this;return encode(string).replace(/\+/g,"-").replace(/\//g,"_")},TMP_6.$$arity=1)}($scope.base)};
