Opal.modules["js"]=function(Opal){var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$module=Opal.module;Opal.add_stubs(["$insert","$<<","$global","$extend"]);return function($base){var $JS,self=$JS=$module($base,"JS");var def=self.$$proto,$scope=self.$$scope,TMP_1,TMP_2,TMP_3,TMP_4,$a,TMP_5,TMP_6,TMP_7,TMP_8,TMP_9;Opal.defn(self,"$delete",TMP_1=function(object,property){var self=this;return delete object[property]},TMP_1.$$arity=2);Opal.defn(self,"$global",TMP_2=function ːglobal(){var self=this;return Opal.global},TMP_2.$$arity=0);Opal.defn(self,"$in",TMP_3=function(property,object){var self=this;return property in object},TMP_3.$$arity=2);Opal.defn(self,"$instanceof",TMP_4=function(value,func){var self=this;return value instanceof func},TMP_4.$$arity=2);if(($a=typeof Function.prototype.bind=="function")!==nil&&(!$a.$$is_boolean||$a==true)){Opal.defn(self,"$new",TMP_5=function(func,$a_rest){var self=this,args,$iter=TMP_5.$$p,block=$iter||nil;var $args_len=arguments.length,$rest_len=$args_len-1;if($rest_len<0){$rest_len=0}args=new Array($rest_len);for(var $arg_idx=1;$arg_idx<$args_len;$arg_idx++){args[$arg_idx-1]=arguments[$arg_idx]}TMP_5.$$p=null;args.$insert(0,this);if(block!==false&&block!==nil){args["$<<"](block)}return new(func.bind.apply(func,args))},TMP_5.$$arity=-2)}else{Opal.defn(self,"$new",TMP_6=function(func,$a_rest){var self=this,args,$iter=TMP_6.$$p,block=$iter||nil,f=nil;var $args_len=arguments.length,$rest_len=$args_len-1;if($rest_len<0){$rest_len=0}args=new Array($rest_len);for(var $arg_idx=1;$arg_idx<$args_len;$arg_idx++){args[$arg_idx-1]=arguments[$arg_idx]}TMP_6.$$p=null;if(block!==false&&block!==nil){args["$<<"](block)}f=function(){return func.apply(this,args)};f["prototype"]=func["prototype"];return new f},TMP_6.$$arity=-2)}Opal.defn(self,"$typeof",TMP_7=function(value){var self=this;return typeof value},TMP_7.$$arity=1);Opal.defn(self,"$void",TMP_8=function(expr){var self=this;return void expr},TMP_8.$$arity=1);Opal.defn(self,"$call",TMP_9=function ːcall(func,$a_rest){var self=this,args,$iter=TMP_9.$$p,block=$iter||nil,g=nil;var $args_len=arguments.length,$rest_len=$args_len-1;if($rest_len<0){$rest_len=0}args=new Array($rest_len);for(var $arg_idx=1;$arg_idx<$args_len;$arg_idx++){args[$arg_idx-1]=arguments[$arg_idx]}TMP_9.$$p=null;g=self.$global();if(block!==false&&block!==nil){args["$<<"](block)}return g[func].apply(g,args)},TMP_9.$$arity=-2);Opal.alias(self,"method_missing","call");self.$extend(self)}($scope.base)};
