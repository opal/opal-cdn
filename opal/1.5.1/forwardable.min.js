Opal.modules.forwardable=function(Opal){var self,$nesting=[],nil=Opal.nil,$module=Opal.module,$send=Opal.send,$truthy=Opal.truthy,$def=Opal.def,$to_a=Opal.to_a,$alias=Opal.alias;return Opal.add_stubs("each,respond_to?,def_instance_delegator,include?,start_with?,to_s,define_method,__send__,instance_variable_get,to_proc,instance_delegate,def_instance_delegators,def_single_delegator,define_singleton_method,single_delegate,def_single_delegators"),self=$module($nesting[0],"Forwardable"),$def(self,"$instance_delegate",(function(hash){return $send(hash,"each",[],(function $$1(methods,accessor){var self=null==$$1.$$s?this:$$1.$$s;return null==methods&&(methods=nil),null==accessor&&(accessor=nil),$truthy(methods["$respond_to?"]("each"))||(methods=[methods]),$send(methods,"each",[],(function $$2(method){return null==method&&(method=nil),(null==$$2.$$s?this:$$2.$$s).$def_instance_delegator(accessor,method)}),{$$arity:1,$$s:self})}),{$$arity:2,$$s:this})}),1),$def(self,"$def_instance_delegators",(function(accessor,$a){var $post_args,self=this;return $post_args=Opal.slice.call(arguments,1),$send($post_args,"each",[],(function $$3(method){var self=null==$$3.$$s?this:$$3.$$s;return null==method&&(method=nil),$truthy(["__send__","__id__"]["$include?"](method))?nil:self.$def_instance_delegator(accessor,method)}),{$$arity:1,$$s:self})}),-2),$def(self,"$def_instance_delegator",(function $$def_instance_delegator(accessor,method,ali){return delete $$def_instance_delegator.$$p,null==ali&&(ali=method),$truthy(accessor.$to_s()["$start_with?"]("@"))?$send(this,"define_method",[ali],(function $$4($a){var args,block=$$4.$$p||nil,self=null==$$4.$$s?this:$$4.$$s;return delete $$4.$$p,args=Opal.slice.call(arguments),$send(self.$instance_variable_get(accessor),"__send__",[method].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:this}):$send(this,"define_method",[ali],(function $$5($a){var args,block=$$5.$$p||nil,self=null==$$5.$$s?this:$$5.$$s;return delete $$5.$$p,args=Opal.slice.call(arguments),$send(self.$__send__(accessor),"__send__",[method].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:this})}),-3),$alias(self,"delegate","instance_delegate"),$alias(self,"def_delegators","def_instance_delegators"),$alias(self,"def_delegator","def_instance_delegator"),function($base){var self=$module($base,"SingleForwardable");return $def(self,"$single_delegate",(function(hash){return $send(hash,"each",[],(function $$6(methods,accessor){var self=null==$$6.$$s?this:$$6.$$s;return null==methods&&(methods=nil),null==accessor&&(accessor=nil),$truthy(methods["$respond_to?"]("each"))||(methods=[methods]),$send(methods,"each",[],(function $$7(method){return null==method&&(method=nil),(null==$$7.$$s?this:$$7.$$s).$def_single_delegator(accessor,method)}),{$$arity:1,$$s:self})}),{$$arity:2,$$s:this})}),1),$def(self,"$def_single_delegators",(function(accessor,$a){var $post_args,self=this;return $post_args=Opal.slice.call(arguments,1),$send($post_args,"each",[],(function $$8(method){var self=null==$$8.$$s?this:$$8.$$s;return null==method&&(method=nil),$truthy(["__send__","__id__"]["$include?"](method))?nil:self.$def_single_delegator(accessor,method)}),{$$arity:1,$$s:self})}),-2),$def(self,"$def_single_delegator",(function $$def_single_delegator(accessor,method,ali){return delete $$def_single_delegator.$$p,null==ali&&(ali=method),$truthy(accessor.$to_s()["$start_with?"]("@"))?$send(this,"define_singleton_method",[ali],(function $$9($a){var args,block=$$9.$$p||nil,self=null==$$9.$$s?this:$$9.$$s;return delete $$9.$$p,args=Opal.slice.call(arguments),$send(self.$instance_variable_get(accessor),"__send__",[method].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:this}):$send(this,"define_singleton_method",[ali],(function $$10($a){var args,block=$$10.$$p||nil,self=null==$$10.$$s?this:$$10.$$s;return delete $$10.$$p,args=Opal.slice.call(arguments),$send(self.$__send__(accessor),"__send__",[method].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:this})}),-3),$alias(self,"delegate","single_delegate"),$alias(self,"def_delegators","def_single_delegators"),$alias(self,"def_delegator","def_single_delegator")}($nesting[0])};
