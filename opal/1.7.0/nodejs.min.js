Opal.modules["nodejs/env"]=function(Opal){var $const_set=Opal.const_set,$def=Opal.def,$truthy=Opal.truthy,$return_val=Opal.return_val,$send=Opal.send,$alias=Opal.alias,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return Opal.add_stubs("new,to_s,key?,[],raise,to_h,keys,merge"),$const_set($nesting[0],"ENV",$$("Object").$new()),function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$[]",(function(name){return process.env[name]||nil})),$def(self,"$[]=",(function(name,value){return process.env[name.$to_s()]=value.$to_s()})),$def(self,"$key?",(function(name){return process.env.hasOwnProperty(name)})),$def(self,"$empty?",(function(){return 0===Object.keys(process.env).length})),$def(self,"$keys",(function(){return Object.keys(process.env)})),$def(self,"$delete",(function(name){var value=process.env[name]||nil;return delete process.env[name],value})),$def(self,"$fetch",(function $$fetch(key,default_value){var block=$$fetch.$$p||nil;return $$fetch.$$p=null,$truthy(this["$key?"](key))?this["$[]"](key):block!==nil?Opal.yield1(block,key):$truthy(void 0===default_value)?this.$raise($$("KeyError"),"key not found"):default_value}),-2),$def(self,"$to_s",$return_val("ENV")),$def(self,"$to_h",(function(){return $send(this.$keys(),"to_h",[],(function $$6(k){return null==k&&(k=nil),[k,(null==$$6.$$s?this:$$6.$$s)["$[]"](k)]}),{$$s:this})})),$def(self,"$merge",(function(keys){return this.$to_h().$merge(keys)})),$alias(self,"has_key?","key?"),$alias(self,"include?","key?"),$alias(self,"inspect","to_s"),$alias(self,"member?","key?"),$alias(self,"to_hash","to_h")}(Opal.get_singleton_class($$("ENV")),$nesting)},Opal.modules["nodejs/pathname"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$return_ivar=Opal.return_ivar,self=Opal.top,$nesting=[],nil=Opal.nil;return Opal.add_stubs("require,include,to_str,!,absolute?"),self.$require("pathname"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Pathname"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;null==self.__path__&&(self.__path__=nil),$proto.path=nil,self.$include($$("Comparable")),self.__path__=require("path");var __path__=self.__path__;return $def(self,"$absolute?",(function(){return __path__.isAbsolute(this.path.$to_str())})),$def(self,"$relative?",(function(){return this["$absolute?"]()["$!"]()})),$def(self,"$to_path",$return_ivar("path"))}($nesting[0],0,$nesting)},Opal.modules["nodejs/open-uri"]=function(Opal){var $module=Opal.module,$defs=Opal.defs,nil=Opal.nil;return function($base){var self=$module($base,"OpenURI");null==self.__xmlhttprequest__&&(self.__xmlhttprequest__=nil),self.__xmlhttprequest__=require("unxhr");var __XMLHttpRequest__=self.__xmlhttprequest__.XMLHttpRequest;return $defs(self,"$request",(function(uri){var xhr=new __XMLHttpRequest__;return xhr.open("GET",uri,!1),xhr.responseType="arraybuffer",xhr.send(),xhr})),$defs(self,"$data",(function(req){for(var arrayBuffer=req.response,byteArray=new Uint8Array(arrayBuffer),result=[],i=0;i<byteArray.byteLength;i++)result.push(byteArray[i]);return result}))}([][0])},Opal.modules["nodejs/argf"]=function(Opal){var $a,$const_set=Opal.const_set,$return_val=Opal.return_val,$def=Opal.def,$eqeq=Opal.eqeq,$gvars=Opal.gvars,$truthy=Opal.truthy,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$rb_plus=Opal.rb_plus,$rb_minus=Opal.rb_minus,$rb_gt=Opal.rb_gt,$thrower=Opal.thrower,$not=Opal.not,$alias=Opal.alias,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;return Opal.add_stubs("new,include,filename,==,open,argv,shift,close,file,closed?,enum_for,gets,nil?,+,loop,read,-,length,>,to_a,each,attr_accessor,rewind,!,fileno,eof?,lineno="),$const_set($nesting[0],"ARGF",$$("Object").$new()),function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$include($$("Enumerable")),$def(self,"$inspect",$return_val("ARGF")),$def(self,"$argv",(function(){return $$("ARGV")})),$def(self,"$file",(function(){var fn,$ret_or_1=nil;return null==this.file&&(this.file=nil),null==$gvars.stdin&&($gvars.stdin=nil),fn=this.$filename(),$eqeq(fn,"-")?$gvars.stdin:this.file=$truthy($ret_or_1=this.file)?$ret_or_1:$$("File").$open(fn,"r")})),$def(self,"$filename",(function(){var $ret_or_1=nil;return null==this.filename&&(this.filename=nil),null==this.last_filename&&(this.last_filename=nil),$truthy(this.filename)?this.filename:$eqeq(this.$argv(),["-"])?"-":$eqeq(this.$argv(),[])?$truthy($ret_or_1=this.last_filename)?$ret_or_1:"-":(this.file=nil,this.filename=this.last_filename=this.$argv().$shift())})),$def(self,"$close",(function(){return this.$file().$close(),this.filename=nil,this})),$def(self,"$closed?",(function(){return this.$file()["$closed?"]()})),$def(self,"$each",(function $$each($a){var args,block=$$each.$$p||nil,self=this,l=nil;if($$each.$$p=null,args=$slice(arguments),block===nil)return self.$enum_for("each");for(;$truthy(l=$send(self,"gets",$to_a(args)));)Opal.yield1(block,l)}),-1),$def(self,"$gets",(function($a){var args,self=this,s=nil;return null==self.lineno&&(self.lineno=nil),args=$slice(arguments),s=$send(self.$file(),"gets",$to_a(args)),$truthy(s["$nil?"]())&&(self.$close(),s=$send(self.$file(),"gets",$to_a(args))),$truthy(s)&&(self.lineno=$rb_plus(self.lineno,1)),s}),-1),$def(self,"$read",(function(len){var self=this,buf=nil;return null==len&&(len=nil),buf="",function(){try{var $t_break=$thrower("break");return $send(self,"loop",[],(function $$2(){var self=null==$$2.$$s?this:$$2.$$s,r=nil;if(null==self.filename&&(self.filename=nil),r=self.$file().$read(len),$truthy(r)&&(buf=$rb_plus(buf,r),len=$rb_minus(len,r.$length())),self.$file().$close(),!($truthy(len)&&$truthy($rb_gt(len,0))&&$truthy(self.filename)))return nil;$t_break.$throw()}),{$$s:self})}catch($e){if($e===$t_break)return $e.$v;throw $e}}()}),-1),$def(self,"$readlines",(function($a){var $post_args,self=this;return $post_args=$slice(arguments),$send(self,"each",$to_a($post_args)).$to_a()}),-1),self.$attr_accessor("lineno"),$def(self,"$rewind",(function(){var f=nil;this.lineno=1,f=this.$file();try{f.$rewind()}catch($err){if(!Opal.rescue($err,[$$("StandardError")]))throw $err;Opal.pop_exception()}return 0})),$def(self,"$fileno",(function(){return null==this.last_filename&&(this.last_filename=nil),null==this.filename&&(this.filename=nil),$not(this.filename)&&$truthy(this.last_filename)?0:this.$file().$fileno()})),$def(self,"$eof?",(function(){return this.$file()["$eof?"]()})),$alias(self,"each_line","each"),$alias(self,"eof","eof?"),$alias(self,"path","filename"),$alias(self,"skip","close"),$alias(self,"to_i","fileno"),$alias(self,"to_io","file")}(Opal.get_singleton_class($$("ARGF")),$nesting),$a=[1],$send($$("ARGF"),"lineno=",$a),$a[$a.length-1]},Opal.modules["nodejs/io"]=function(Opal){var $klass=Opal.klass,$alias=Opal.alias,$def=Opal.def,$defs=Opal.defs,self=Opal.top,$nesting=[];Opal.nil;Opal.add_stubs("require,attr_reader,initialize,initialize_before_node_io,write,read"),self.$require("nodejs/file");var __fs__=require("fs");return function($base,$super,$parent_nesting){var self=$klass($base,null,"IO"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return self.__fs__=__fs__,self.$attr_reader("lineno"),$alias(self,"initialize_before_node_io","initialize"),$def(self,"$initialize",(function(fd,flags){return null==flags&&(flags="r"),this.lineno=0,this.$initialize_before_node_io(fd,flags)}),-2),$defs(self,"$write",(function(path,data){return $$("File").$write(path,data)})),$defs(self,"$read",(function(path){return $$("File").$read(path)})),$defs(self,"$binread",(function(path){return function(action){try{return action()}catch(error){if("EACCES"===error.code||"EISDIR"===error.code||"EMFILE"===error.code||"ENOENT"===error.code||"EPERM"===error.code)throw Opal.IOError.$new(error.message);throw error}}((function(){return __fs__.readFileSync(path).toString("binary")}))}))}($nesting[0],0,$nesting)},Opal.modules["nodejs/dir"]=function(Opal){var $klass=Opal.klass,$def=Opal.def,$truthy=Opal.truthy,$send=Opal.send,$Opal=Opal.Opal,$alias=Opal.alias,$nesting=[],nil=Opal.nil;return Opal.add_stubs("respond_to?,flat_map,to_path,coerce_to!,pwd"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Dir"),$nesting=[self].concat($parent_nesting);null==self.__glob__&&(self.__glob__=nil),null==self.__fs__&&(self.__fs__=nil),null==self.__path__&&(self.__path__=nil),null==self.__os__&&(self.__os__=nil),self.__glob__=require("glob"),self.__fs__=require("fs"),self.__path__=require("path"),self.__os__=require("os");var __glob__=self.__glob__,__fs__=self.__fs__,__path__=self.__path__,__os__=self.__os__;return function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$[]",(function(glob){return __glob__.sync(glob)})),$def(self,"$pwd",(function(){return process.cwd().split(__path__.sep).join(__path__.posix.sep)})),$def(self,"$home",(function(){return __os__.homedir()})),$def(self,"$chdir",(function(path){return process.chdir(path)})),$def(self,"$mkdir",(function(path){return __fs__.mkdirSync(path)})),$def(self,"$entries",(function(dirname){for(var result=[],entries=__fs__.readdirSync(dirname),i=0,ii=entries.length;i<ii;i++)result.push(entries[i]);return result})),$def(self,"$glob",(function(pattern){return $truthy(pattern["$respond_to?"]("each"))||(pattern=[pattern]),$send(pattern,"flat_map",[],(function(subpattern){return null==subpattern&&(subpattern=nil),$truthy(subpattern["$respond_to?"]("to_path"))&&(subpattern=subpattern.$to_path()),subpattern=$Opal["$coerce_to!"](subpattern,$$("String"),"to_str"),__glob__.sync(subpattern)}))})),$alias(self,"getwd","pwd")}(Opal.get_singleton_class(self),$nesting)}($nesting[0],0,$nesting)},Opal.modules["nodejs/file"]=function(Opal){var $klass=Opal.klass,$truthy=Opal.truthy,$const_set=Opal.const_set,$defs=Opal.defs,$alias=Opal.alias,$slice=Opal.slice,$send=Opal.send,$neqeq=Opal.neqeq,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$assign_ivar=Opal.assign_ivar,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;Opal.add_stubs("require,constants,raise,warn,const_get,new,size,delete,respond_to?,path,join,call,map,to_proc,start_with?,first,exist?,realpath,!=,close,to_path,pwd,to_str,include?,match?,sub,attr_reader"),self.$require("corelib/file");var warnings={},errno_codes=$$("Errno").$constants();function handle_unsupported_feature(message){switch(Opal.config.unsupported_features_severity){case"error":$$("Kernel").$raise($$("NotImplementedError"),message);break;case"warning":!function(string){if(warnings[string])return;warnings[string]=!0,self.$warn(string)}(message)}}function executeIOAction(action){try{return action()}catch(error){if(errno_codes.indexOf(error.code)>=0){var error_class=$$("Errno").$const_get(error.code);$$("Kernel").$raise(error_class.$new(error.message))}$$("Kernel").$raise(error)}}return function($base,$super,$parent_nesting){var self=$klass($base,$super,"File"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;null==self.__fs__&&(self.__fs__=nil),null==self.__path__&&(self.__path__=nil),null==self.__util__&&(self.__util__=nil),$proto.eof=$proto.binary_flag=$proto.path=$proto.fd=nil,self.__fs__=require("fs"),self.__path__=require("path"),self.__util__=require("util");var __fs__=self.__fs__,__path__=self.__path__,__util__=self.__util__,__TextEncoder__="undefined"!=typeof TextEncoder?TextEncoder:__util__.TextEncoder,__utf8TextDecoder__=new("undefined"!=typeof TextDecoder?TextDecoder:__util__.TextDecoder)("utf8"),__textEncoder__=new __TextEncoder__;$truthy(__path__.sep!==$$("Separator"))&&$const_set($nesting[0],"ALT_SEPARATOR",__path__.sep),$defs(self,"$read",(function(path){return executeIOAction((function(){return __fs__.readFileSync(path).toString()}))})),$defs(self,"$write",(function(path,data){return executeIOAction((function(){return __fs__.writeFileSync(path,data)})),data.$size()})),$defs(self,"$symlink",(function(path,new_path){return executeIOAction((function(){return __fs__.symlinkSync(path,new_path)})),0})),$defs(self,"$delete",(function(path){return executeIOAction((function(){return __fs__.unlinkSync(path)}))})),function(self,$parent_nesting){$alias(self,"unlink","delete")}(Opal.get_singleton_class(self)),$defs(self,"$exist?",(function(path){return $truthy(path["$respond_to?"]("path"))&&(path=path.$path()),executeIOAction((function(){return __fs__.existsSync(path)}))})),$defs(self,"$realpath",(function $$realpath(pathname,dir_string,cache){var block=$$realpath.$$p||nil;if($$realpath.$$p=null,null==dir_string&&(dir_string=nil),null==cache&&(cache=nil),$truthy(dir_string)&&(pathname=this.$join(dir_string,pathname)),block===nil)return executeIOAction((function(){return __fs__.realpathSync(pathname,cache)}));__fs__.realpath(pathname,cache,(function(error,realpath){error?Opal.IOError.$new(error.message):block.$call(realpath)}))}),-2),$defs(self,"$join",(function($a){var $post_args,paths,$b;return $post_args=$slice(arguments),paths=$send(paths=$post_args,"map",[],"to_s".$to_proc()),($truthy(($b=paths.$first())===nil||null==$b?nil:$b["$start_with?"]("//"))?"/":"")+__path__.posix.join.apply(__path__,paths)}),-1),$defs(self,"$directory?",(function(path){var result=nil,realpath=nil;return!!$truthy(this["$exist?"](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(path).isDirectory()})),$truthy(result)||(realpath=this.$realpath(path),$neqeq(realpath,path)&&(result=executeIOAction((function(){return!!__fs__.lstatSync(realpath).isDirectory()})))),result)})),$defs(self,"$file?",(function(path){var result=nil,realpath=nil;return!!$truthy(this["$exist?"](path))&&(result=executeIOAction((function(){return!!__fs__.lstatSync(path).isFile()})),$truthy(result)||(realpath=this.$realpath(path),$neqeq(realpath,path)&&(result=executeIOAction((function(){return!!__fs__.lstatSync(realpath).isFile()})))),result)})),$defs(self,"$readable?",(function(path){return!!$truthy(this["$exist?"](path))&&"\n        try {\n          __fs__.accessSync(path, __fs__.R_OK);\n          return true;\n        } catch (error) {\n          return false;\n        }\n      "})),$defs(self,"$size",(function(path){return executeIOAction((function(){return __fs__.lstatSync(path).size}))})),$defs(self,"$open",(function $$open(path,mode){var $yield=$$open.$$p||nil,file=nil;return $$open.$$p=null,null==mode&&(mode="r"),file=this.$new(path,mode),$yield!==nil?function(){try{return Opal.yield1($yield,file)}finally{file.$close()}}():file}),-2),$defs(self,"$stat",(function(path){return $truthy(path["$respond_to?"]("path"))&&(path=path.$path()),$$$($$("File"),"Stat").$new(path)})),$defs(self,"$mtime",(function(path){return executeIOAction((function(){return __fs__.statSync(path).mtime}))})),$defs(self,"$symlink?",(function(path){return executeIOAction((function(){return __fs__.lstatSync(path).isSymbolicLink()}))})),$defs(self,"$absolute_path",(function(path,basedir){var $ret_or_1;return null==basedir&&(basedir=nil),path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path,basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$("Dir").$pwd(),__path__.normalize(__path__.resolve(basedir.$to_str(),path.$to_str())).split(__path__.sep).join(__path__.posix.sep)}),-2),$def(self,"$initialize",(function $$initialize(path,flags){var fd,encoding_option_rx=nil;return $$initialize.$$p=null,null==flags&&(flags="r"),this.binary_flag=flags["$include?"]("b"),flags=flags.$delete("b"),$truthy((encoding_option_rx=/:(.*)/)["$match?"](flags))&&(handle_unsupported_feature("Encoding option (:encoding) is unsupported by Node.js openSync method and will be removed."),flags=flags.$sub(encoding_option_rx,"")),this.path=path,fd=executeIOAction((function(){return __fs__.openSync(path,flags)})),$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[fd,flags],null)}),-2),self.$attr_reader("path"),$def(self,"$sysread",(function(bytes){var self=this,res=nil;if($truthy(self.eof))return self.$raise($$("EOFError"),"end of file reached");if($truthy(self.binary_flag)){var content,buf=executeIOAction((function(){return __fs__.readFileSync(self.path)}));content=function(bytes){for(var i=0;i<bytes.length;)if(9===bytes[i]||10===bytes[i]||13===bytes[i]||32<=bytes[i]&&bytes[i]<=126)i+=1;else if(194<=bytes[i]&&bytes[i]<=223&&128<=bytes[i+1]&&bytes[i+1]<=191)i+=2;else if(224===bytes[i]&&160<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191||(225<=bytes[i]&&bytes[i]<=236||238===bytes[i]||239===bytes[i])&&128<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191||237===bytes[i]&&128<=bytes[i+1]&&bytes[i+1]<=159&&128<=bytes[i+2]&&bytes[i+2]<=191)i+=3;else{if(!(240===bytes[i]&&144<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191||241<=bytes[i]&&bytes[i]<=243&&128<=bytes[i+1]&&bytes[i+1]<=191&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191||244===bytes[i]&&128<=bytes[i+1]&&bytes[i+1]<=143&&128<=bytes[i+2]&&bytes[i+2]<=191&&128<=bytes[i+3]&&bytes[i+3]<=191))return!1;i+=4}return!0}(buf)?buf.toString("utf8"):__utf8TextDecoder__.decode(__textEncoder__.encode(buf.toString("binary"))),res=content}else res=executeIOAction((function(){return __fs__.readFileSync(self.path).toString("utf8")}));return self.eof=!0,self.lineno=res.$size(),res})),$def(self,"$write",(function(string){var self=this;return executeIOAction((function(){return __fs__.writeSync(self.fd,string)}))})),$def(self,"$flush",(function(){var self=this;return executeIOAction((function(){return __fs__.fsyncSync(self.fd)}))})),$def(self,"$close",(function $$close(){var $yield=$$close.$$p||nil,self=this;return $$close.$$p=null,executeIOAction((function(){return __fs__.closeSync(self.fd)})),$send2(self,$find_super(self,"close",$$close,!1,!0),"close",[],$yield)})),$def(self,"$mtime",(function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).mtime}))}))}($nesting[0],$$("IO"),$nesting),function($base,$super){var self=$klass($base,null,"Stat"),$proto=self.$$prototype;null==self.__fs__&&(self.__fs__=nil),$proto.path=nil,self.__fs__=require("fs");var __fs__=self.__fs__;return $def(self,"$initialize",$assign_ivar("path")),$def(self,"$file?",(function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).isFile()}))})),$def(self,"$directory?",(function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).isDirectory()}))})),$def(self,"$mtime",(function(){var self=this;return executeIOAction((function(){return __fs__.statSync(self.path).mtime}))})),$def(self,"$readable?",(function(){var self=this;return executeIOAction((function(){return __fs__.accessSync(self.path,__fs__.constants.R_OK)}))})),$def(self,"$writable?",(function(){var self=this;return executeIOAction((function(){return __fs__.accessSync(self.path,__fs__.constants.W_OK)}))})),$def(self,"$executable?",(function(){var self=this;return executeIOAction((function(){return __fs__.accessSync(self.path,__fs__.constants.X_OK)}))}))}($$("File"))},Opal.modules["nodejs/kernel"]=function(Opal){var $module=Opal.module,$slice=Opal.slice,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$hash2=Opal.hash2,$truthy=Opal.truthy,$eqeqeq=Opal.eqeqeq,$gvars=Opal.gvars,$neqeq=Opal.neqeq,$def=Opal.def,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("require,is_a?,first,shift,to_n,merge,empty?,===,[],new,!=,raise,==,encode,to_s"),self.$require("buffer"),self.$require("corelib/process/status"),function($base,$parent_nesting){var self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);null==self.__child_process__&&(self.__child_process__=nil),self.__child_process__=require("child_process");var __child_process__=self.__child_process__;return $def(self,"$system",(function($a,$b){var $post_args,$kwargs,argv,exception,self=this,env=nil,cmdname=nil,out=nil,status=nil,pid=nil;return $post_args=$slice(arguments),$kwargs=$extract_kwargs($post_args),argv=$post_args,null==(exception=($kwargs=$ensure_kwargs($kwargs)).$$smap.exception)&&(exception=!1),env=$hash2([],{}),$truthy(argv.$first()["$is_a?"]($$("Hash")))&&(env=argv.$shift()),env=$$("ENV").$merge(env).$to_n(),cmdname=argv.$shift(),status=(out=$truthy(argv["$empty?"]())?__child_process__.spawnSync(cmdname,{shell:!0,stdio:"inherit",env:env}):$eqeqeq($$("Array"),cmdname)?__child_process__.spawnSync(cmdname["$[]"](0),argv,{argv0:cmdname["$[]"](1),stdio:"inherit",env:env}):__child_process__.spawnSync(cmdname,argv,{stdio:"inherit",env:env})).status,$truthy(null===status)&&(status=127),pid=out.pid,$gvars["?"]=$$$($$("Process"),"Status").$new(status,pid),$truthy(exception)&&$neqeq(status,0)&&self.$raise("Command failed with exit "+status+": "+cmdname),status["$=="](0)}),-1),$def(self,"$`",(function(cmdline){return $$("Buffer").$new(__child_process__.execSync(cmdline)).$to_s().$encode("UTF-8")}))}($nesting[0],$nesting)},Opal.modules["nodejs/base"]=function(Opal){var $a,$module=Opal.module,$const_set=Opal.const_set,$eqeq=Opal.eqeq,$lambda=Opal.lambda,$send=Opal.send,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil;Opal.add_stubs("==,first,shift,write_proc=,read_proc=,tty="),function($base,$parent_nesting){var $nesting=[$module($base,"NodeJS")].concat($parent_nesting);$const_set($nesting[0],"VERSION",process.version)}($nesting[0],$nesting),Opal.exit=process.exit,$const_set($nesting[0],"ARGV",process.argv.slice(2)),$eqeq($$("ARGV").$first(),"--")&&$$("ARGV").$shift(),$$("STDOUT")["$write_proc="]($lambda((function(string){return null==string&&(string=nil),process.stdout.write(string)}))),$$("STDERR")["$write_proc="]($lambda((function(string){return null==string&&(string=nil),process.stderr.write(string)})));var __fs__=require("fs");return $$("STDIN")["$read_proc="]((function(_count){var count,buf=Buffer.alloc(65536);try{count=__fs__.readSync(this.fd,buf,0,65536,null)}catch(e){return nil}return 0==count?nil:buf.toString("utf8",0,count)})),$$("STDIN")["$tty="](!0),$$("STDOUT")["$tty="](!0),$a=[!0],$send($$("STDERR"),"tty=",$a),$a[$a.length-1]},Opal.modules["corelib/process/status"]=function(Opal){var $base,self,$proto,$parent_nesting,$module=Opal.module,$klass=Opal.klass,$def=Opal.def,$return_ivar=Opal.return_ivar,nil=Opal.nil;return Opal.add_stubs("attr_reader,=="),$parent_nesting=[],$base=[$module("::","Process")].concat($parent_nesting)[0],self=$klass($base,null,"Status"),($proto=self.$$prototype).status=$proto.pid=nil,$def(self,"$initialize",(function(status,pid){var $a;return $a=[status,pid],this.status=$a[0],this.pid=$a[1],$a})),$def(self,"$exitstatus",$return_ivar("status")),self.$attr_reader("pid"),$def(self,"$success?",(function(){return this.status["$=="](0)})),$def(self,"$inspect",(function(){return"#<Process::Status: pid "+this.pid+" exit "+this.status+">"}))},Opal.modules.pathname=function(Opal){var $klass=Opal.klass,$const_set=Opal.const_set,$regexp=Opal.regexp,$eqeqeq=Opal.eqeqeq,$truthy=Opal.truthy,$eqeq=Opal.eqeq,$def=Opal.def,$defs=Opal.defs,$to_ary=Opal.to_ary,$slice=Opal.slice,$send=Opal.send,$to_a=Opal.to_a,$return_ivar=Opal.return_ivar,$neqeq=Opal.neqeq,$rb_plus=Opal.rb_plus,$not=Opal.not,$thrower=Opal.thrower,$alias=Opal.alias,$module=Opal.module,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("require,include,quote,===,to_s,path,respond_to?,to_path,is_a?,nil?,raise,class,==,new,pwd,attr_reader,!,relative?,chop_basename,basename,=~,source,[],rindex,sub,absolute?,expand_path,plus,unshift,length,!=,empty?,first,shift,+,join,dirname,pop,reverse_each,directory?,extname,<=>,nonzero?,proc,casecmp,cleanpath,inspect,include?,fill,map,entries"),self.$require("corelib/comparable"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Pathname"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);self.$$prototype.path=nil,self.$include($$("Comparable")),$const_set($nesting[0],"SEPARATOR_PAT",$regexp([$$("Regexp").$quote($$$($$("File"),"SEPARATOR"))])),$def(self,"$initialize",(function(path){return $eqeqeq($$("Pathname"),path)?this.path=path.$path().$to_s():$truthy(path["$respond_to?"]("to_path"))?this.path=path.$to_path():$truthy(path["$is_a?"]($$("String")))?this.path=path:$truthy(path["$nil?"]())?this.$raise($$("TypeError"),"no implicit conversion of nil into String"):this.$raise($$("TypeError"),"no implicit conversion of "+path.$class()+" into String"),$eqeq(this.path,"\0")?this.$raise($$("ArgumentError")):nil})),$defs(self,"$pwd",(function(){return this.$new($$("Dir").$pwd())})),self.$attr_reader("path"),$def(self,"$==",(function(other){return other.$path()["$=="](this.path)})),$def(self,"$absolute?",(function(){return this["$relative?"]()["$!"]()})),$def(self,"$relative?",(function(){var $a,path=nil,r=nil;for(path=this.path;$truthy(r=this.$chop_basename(path));)path=null==($a=$to_ary(r))[0]?nil:$a[0];return path["$=="]("")})),$def(self,"$chop_basename",(function(path){var base;return base=$$("File").$basename(path),$truthy($$("Regexp").$new("^"+$$$($$("Pathname"),"SEPARATOR_PAT").$source()+"?$")["$=~"](base))?nil:[path["$[]"](0,path.$rindex(base)),base]})),$def(self,"$root?",(function(){return this.path["$=="]("/")})),$def(self,"$parent",(function(){var new_path=nil;return new_path=this.path.$sub(/\/([^\/]+\/?$)/,""),$eqeq(new_path,"")&&(new_path=$truthy(this["$absolute?"]())?"/":"."),$$("Pathname").$new(new_path)})),$def(self,"$sub",(function($a){var args,self=this;return args=$slice(arguments),$$("Pathname").$new($send(self.path,"sub",$to_a(args)))}),-1),$def(self,"$cleanpath",(function(){return Opal.normalize(this.path)})),$def(self,"$to_path",$return_ivar("path")),$def(self,"$hash",$return_ivar("path")),$def(self,"$expand_path",(function(){return $$("Pathname").$new($$("File").$expand_path(this.path))})),$def(self,"$+",(function(other){return $eqeqeq($$("Pathname"),other)||(other=$$("Pathname").$new(other)),$$("Pathname").$new(this.$plus(this.path,other.$to_s()))})),$def(self,"$plus",(function(path1,path2){var $a,prefix2=nil,index_list2=nil,basename_list2=nil,r2=nil,basename2=nil,prefix1=nil,$ret_or_1=nil,r1=nil,basename1=nil,suffix2=nil;for(prefix2=path2,index_list2=[],basename_list2=[];$truthy(r2=this.$chop_basename(prefix2));)prefix2=null==($a=$to_ary(r2))[0]?nil:$a[0],basename2=null==$a[1]?nil:$a[1],index_list2.$unshift(prefix2.$length()),basename_list2.$unshift(basename2);if($neqeq(prefix2,""))return path2;for(prefix1=path1;$truthy(!0);){for(;$truthy($truthy($ret_or_1=basename_list2["$empty?"]()["$!"]())?basename_list2.$first()["$=="]("."):$ret_or_1);)index_list2.$shift(),basename_list2.$shift();if(!$truthy(r1=this.$chop_basename(prefix1)))break;if(prefix1=null==($a=$to_ary(r1))[0]?nil:$a[0],basename1=null==$a[1]?nil:$a[1],!$eqeq(basename1,".")){if($eqeq(basename1,"..")||$truthy(basename_list2["$empty?"]())||$neqeq(basename_list2.$first(),"..")){prefix1=$rb_plus(prefix1,basename1);break}index_list2.$shift(),basename_list2.$shift()}}if(r1=this.$chop_basename(prefix1),$not(r1)&&$truthy($regexp([$$("SEPARATOR_PAT")])["$=~"]($$("File").$basename(prefix1))))for(;$truthy($truthy($ret_or_1=basename_list2["$empty?"]()["$!"]())?basename_list2.$first()["$=="](".."):$ret_or_1);)index_list2.$shift(),basename_list2.$shift();return $not(basename_list2["$empty?"]())?(suffix2=path2["$[]"](Opal.Range.$new(index_list2.$first(),-1,!1)),$truthy(r1)?$$("File").$join(prefix1,suffix2):$rb_plus(prefix1,suffix2)):$truthy(r1)?prefix1:$$("File").$dirname(prefix1)})),$def(self,"$join",(function($a){try{var $post_args,args,$t_return=$thrower("return"),self=this,result=nil;return $post_args=$slice(arguments),$truthy((args=$post_args)["$empty?"]())?self:(result=args.$pop(),$eqeqeq($$("Pathname"),result)||(result=$$("Pathname").$new(result)),$truthy(result["$absolute?"]())?result:($send(args,"reverse_each",[],(function(arg){if(null==arg&&(arg=nil),$eqeqeq($$("Pathname"),arg)||(arg=$$("Pathname").$new(arg)),result=$rb_plus(arg,result),!$truthy(result["$absolute?"]()))return nil;$t_return.$throw(result)}),{$$ret:$t_return}),$rb_plus(self,result)))}catch($e){if($e===$t_return)return $e.$v;throw $e}}),-1),$def(self,"$split",(function(){return[this.$dirname(),this.$basename()]})),$def(self,"$dirname",(function(){return $$("Pathname").$new($$("File").$dirname(this.path))})),$def(self,"$basename",(function(){return $$("Pathname").$new($$("File").$basename(this.path))})),$def(self,"$directory?",(function(){return $$("File")["$directory?"](this.path)})),$def(self,"$extname",(function(){return $$("File").$extname(this.path)})),$def(self,"$<=>",(function(other){return this.$path()["$<=>"](other.$path())})),$const_set($nesting[0],"SAME_PATHS",$truthy($$$($$("File"),"FNM_SYSCASE")["$nonzero?"]())?$send(self,"proc",[],(function(a,b){return null==a&&(a=nil),null==b&&(b=nil),a.$casecmp(b)["$=="](0)})):$send(self,"proc",[],(function(a,b){return null==a&&(a=nil),null==b&&(b=nil),a["$=="](b)}))),$def(self,"$relative_path_from",(function(base_directory){var $a,dest_directory,dest_prefix=nil,dest_names=nil,r=nil,basename=nil,base_prefix=nil,base_names=nil,$ret_or_1=nil,$ret_or_2=nil,relpath_names=nil;for(dest_directory=this.$cleanpath().$to_s(),base_directory=base_directory.$cleanpath().$to_s(),dest_prefix=dest_directory,dest_names=[];$truthy(r=this.$chop_basename(dest_prefix));)dest_prefix=null==($a=$to_ary(r))[0]?nil:$a[0],basename=null==$a[1]?nil:$a[1],$neqeq(basename,".")&&dest_names.$unshift(basename);for(base_prefix=base_directory,base_names=[];$truthy(r=this.$chop_basename(base_prefix));)base_prefix=null==($a=$to_ary(r))[0]?nil:$a[0],basename=null==$a[1]?nil:$a[1],$neqeq(basename,".")&&base_names.$unshift(basename);for($truthy($$("SAME_PATHS")["$[]"](dest_prefix,base_prefix))||this.$raise($$("ArgumentError"),"different prefix: "+dest_prefix.$inspect()+" and "+base_directory.$inspect());$truthy($truthy($ret_or_1=$truthy($ret_or_2=dest_names["$empty?"]()["$!"]())?base_names["$empty?"]()["$!"]():$ret_or_2)?$$("SAME_PATHS")["$[]"](dest_names.$first(),base_names.$first()):$ret_or_1);)dest_names.$shift(),base_names.$shift();return $truthy(base_names["$include?"](".."))&&this.$raise($$("ArgumentError"),"base_directory has ..: "+base_directory.$inspect()),base_names.$fill(".."),relpath_names=$rb_plus(base_names,dest_names),$truthy(relpath_names["$empty?"]())?$$("Pathname").$new("."):$$("Pathname").$new($send($$("File"),"join",$to_a(relpath_names)))})),$def(self,"$entries",(function(){return $send($$("Dir").$entries(this.path),"map",[],(function $$11(f){return null==f&&(f=nil),(null==$$11.$$s?this:$$11.$$s).$class().$new(f)}),{$$s:this})})),$alias(self,"===","=="),$alias(self,"eql?","=="),$alias(self,"to_s","to_path"),$alias(self,"to_str","to_path")}($nesting[0],0,$nesting),function($base,$parent_nesting){var self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return $def(self,"$Pathname",(function(path){return $$("Pathname").$new(path)}))}($nesting[0],$nesting)},Opal.modules["corelib/file"]=function(Opal){var $truthy=Opal.truthy,$klass=Opal.klass,$const_set=Opal.const_set,$Opal=Opal.Opal,$regexp=Opal.regexp,$rb_plus=Opal.rb_plus,$def=Opal.def,$Kernel=Opal.Kernel,$eqeq=Opal.eqeq,$rb_lt=Opal.rb_lt,$rb_minus=Opal.rb_minus,$range=Opal.range,$send=Opal.send,$slice=Opal.slice,$alias=Opal.alias,nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("respond_to?,to_path,coerce_to!,pwd,split,sub,+,unshift,join,home,raise,start_with?,absolute_path,==,<,dirname,-,basename,empty?,rindex,[],length,nil?,gsub,find,=~,map,each_with_index,flatten,reject,to_proc,end_with?,expand_path,exist?"),function($base,$super,$parent_nesting){var self=$klass("::",$super,"File"),$nesting=[self].concat($parent_nesting),windows_root_rx=nil;return $const_set($nesting[0],"Separator",$const_set($nesting[0],"SEPARATOR","/")),$const_set($nesting[0],"ALT_SEPARATOR",nil),$const_set($nesting[0],"PATH_SEPARATOR",":"),$const_set($nesting[0],"FNM_SYSCASE",0),windows_root_rx=/^[a-zA-Z]:(?:\\|\/)/,function(self,$parent_nesting){var $nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);function $coerce_to_path(path){return $truthy(path["$respond_to?"]("to_path"))&&(path=path.$to_path()),path=$Opal["$coerce_to!"](path,$$$("String"),"to_str")}function $sep_chars(){return $$("ALT_SEPARATOR")===nil?Opal.escape_regexp($$("SEPARATOR")):Opal.escape_regexp($rb_plus($$("SEPARATOR"),$$("ALT_SEPARATOR")))}return $def(self,"$absolute_path",(function(path,basedir){var sep,sep_chars,$ret_or_1,path_abs,basedir_abs,part,new_parts=nil,parts=nil,leading_sep=nil,abs=nil,new_path=nil;null==basedir&&(basedir=nil),sep=$$("SEPARATOR"),sep_chars=$sep_chars(),new_parts=[],path=$truthy(path["$respond_to?"]("to_path"))?path.$to_path():path,path=$Opal["$coerce_to!"](path,$$$("String"),"to_str"),basedir=$truthy($ret_or_1=basedir)?$ret_or_1:$$$("Dir").$pwd(),path_abs=path.substr(0,sep.length)===sep||windows_root_rx.test(path),basedir_abs=basedir.substr(0,sep.length)===sep||windows_root_rx.test(basedir),$truthy(path_abs)?(parts=path.$split($regexp(["[",sep_chars,"]"])),leading_sep=windows_root_rx.test(path)?"":path.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=!0):(parts=$rb_plus(basedir.$split($regexp(["[",sep_chars,"]"])),path.$split($regexp(["[",sep_chars,"]"]))),leading_sep=windows_root_rx.test(basedir)?"":basedir.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1"),abs=basedir_abs);for(var i=0,ii=parts.length;i<ii;i++)(part=parts[i])===nil||""===part&&(0===new_parts.length||abs)||"."===part&&(0===new_parts.length||abs)||(".."===part?new_parts.pop():new_parts.push(part));return abs||"."===parts[0]||new_parts.$unshift("."),new_path=new_parts.$join(sep),$truthy(abs)&&(new_path=$rb_plus(leading_sep,new_path)),new_path}),-2),$def(self,"$expand_path",(function(path,basedir){var sep,sep_chars,home=nil,leading_sep=nil,home_path_regexp=nil;return null==basedir&&(basedir=nil),sep=$$("SEPARATOR"),sep_chars=$sep_chars(),$truthy("~"===path[0]||basedir&&"~"===basedir[0])&&(home=$$("Dir").$home(),$truthy(home)||$Kernel.$raise($$$("ArgumentError"),"couldn't find HOME environment -- expanding `~'"),leading_sep=windows_root_rx.test(home)?"":home.$sub($regexp(["^([",sep_chars,"]+).*$"]),"\\1"),$truthy(home["$start_with?"](leading_sep))||$Kernel.$raise($$$("ArgumentError"),"non-absolute home"),home=$rb_plus(home,sep),home_path_regexp=$regexp(["^\\~(?:",sep,"|$)"]),path=path.$sub(home_path_regexp,home),$truthy(basedir)&&(basedir=basedir.$sub(home_path_regexp,home))),this.$absolute_path(path,basedir)}),-2),$def(self,"$dirname",(function(path,level){var sep_chars;if(null==level&&(level=1),$eqeq(level,0))return path;$truthy($rb_lt(level,0))&&$Kernel.$raise($$$("ArgumentError"),"level can't be negative"),sep_chars=$sep_chars();var out,absolute=(path=$coerce_to_path(path)).match(new RegExp("^["+sep_chars+"]"));return out=""===(path=(path=(path=path.replace(new RegExp("["+sep_chars+"]+$"),"")).replace(new RegExp("[^"+sep_chars+"]+$"),"")).replace(new RegExp("["+sep_chars+"]+$"),""))?absolute?"/":".":path,1==level?out:this.$dirname(out,$rb_minus(level,1))}),-2),$def(self,"$basename",(function(name,suffix){var sep_chars;return null==suffix&&(suffix=nil),sep_chars=$sep_chars(),0==(name=$coerce_to_path(name)).length||(suffix=suffix!==nil?$Opal["$coerce_to!"](suffix,$$$("String"),"to_str"):null,name=(name=name.replace(new RegExp("(.)["+sep_chars+"]*$"),"$1")).replace(new RegExp("^(?:.*["+sep_chars+"])?([^"+sep_chars+"]+)$"),"$1"),".*"===suffix?name=name.replace(/\.[^\.]+$/,""):null!==suffix&&(suffix=Opal.escape_regexp(suffix),name=name.replace(new RegExp(suffix+"$"),""))),name}),-2),$def(self,"$extname",(function(path){var filename=nil,last_dot_idx=nil;return path=$coerce_to_path(path),filename=this.$basename(path),$truthy(filename["$empty?"]())?"":(last_dot_idx=filename["$[]"]($range(1,-1,!1)).$rindex("."),$truthy(last_dot_idx["$nil?"]())||$eqeq($rb_plus(last_dot_idx,1),$rb_minus(filename.$length(),1))?"":filename["$[]"](Opal.Range.$new($rb_plus(last_dot_idx,1),-1,!1)))})),$def(self,"$exist?",(function(path){return null!=Opal.modules[path]})),$def(self,"$directory?",(function(path){var files=nil;for(var key in files=[],Opal.modules)files.push(key);return path=path.$gsub($regexp(["(^.",$$("SEPARATOR"),"+|",$$("SEPARATOR"),"+$)"])),$send(files,"find",[],(function(f){return null==f&&(f=nil),f["$=~"]($regexp(["^",path]))}))})),$def(self,"$join",(function($a){var $post_args,paths,result=nil;return $post_args=$slice(arguments),$truthy((paths=$post_args)["$empty?"]())?"":(result="",paths=$send(paths.$flatten().$each_with_index(),"map",[],(function(item,index){return null==item&&(item=nil),null==index&&(index=nil),$eqeq(index,0)&&$truthy(item["$empty?"]())||$eqeq(paths.$length(),$rb_plus(index,1))&&$truthy(item["$empty?"]())?$$("SEPARATOR"):item})),paths=$send(paths,"reject",[],"empty?".$to_proc()),$send(paths,"each_with_index",[],(function(item,index){var next_item=nil;return null==item&&(item=nil),null==index&&(index=nil),next_item=paths["$[]"]($rb_plus(index,1)),$truthy(next_item["$nil?"]())?result=""+result+item:($truthy(item["$end_with?"]($$("SEPARATOR")))&&$truthy(next_item["$start_with?"]($$("SEPARATOR")))&&(item=item.$sub($regexp([$$("SEPARATOR"),"+$"]),"")),result=$truthy(item["$end_with?"]($$("SEPARATOR")))||$truthy(next_item["$start_with?"]($$("SEPARATOR")))?""+result+item:""+result+item+$$("SEPARATOR"))})),result)}),-1),$def(self,"$split",(function(path){return path.$split($$("SEPARATOR"))})),$alias(self,"realpath","expand_path"),$alias(self,"exists?","exist?")}(Opal.get_singleton_class(self),$nesting)}(0,$$$("IO"),[])},Opal.modules.buffer=function(Opal){var $klass=Opal.klass,$gvars=Opal.gvars,$defs=Opal.defs,$eqeqeq=Opal.eqeqeq,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$alias=Opal.alias,self=Opal.top,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("require,include,!,nil?,[],===,native?,new,pack,to_a,length"),self.$require("native"),self.$require("buffer/array"),self.$require("buffer/view"),function($base,$super,$parent_nesting){var self=$klass($base,null,"Buffer"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return self.$$prototype.native=nil,self.$include($$$($$("Native"),"Wrapper")),$defs(self,"$supported?",(function(){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]("ArrayBuffer")["$nil?"]()["$!"]()})),$defs(self,"$name_for",(function(bits,type){var $ret_or_1;return""+($eqeqeq("unsigned",$ret_or_1=type)?"Uint":$eqeqeq("signed",$ret_or_1)?"Int":$eqeqeq("float",$ret_or_1)?"Float":nil)+bits})),$def(self,"$initialize",(function $$initialize(size,bits){return $$initialize.$$p=null,null==bits&&(bits=8),$truthy(this["$native?"](size))?$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[size],null):$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[new ArrayBuffer(size*(bits/8))],null)}),-2),$def(self,"$length",(function(){return this.native.byteLength})),$def(self,"$to_a",(function(bits,type){return null==bits&&(bits=8),null==type&&(type="unsigned"),$$("Array").$new(this,bits,type)}),-1),$def(self,"$view",(function(offset,length){return null==offset&&(offset=nil),null==length&&(length=nil),$$("View").$new(this,offset,length)}),-1),$def(self,"$to_s",(function(){return this.$to_a().$to_a().$pack("c*")})),$alias(self,"size","length")}($nesting[0],0,$nesting)},Opal.modules["corelib/comparable"]=function(Opal){var $truthy=Opal.truthy,$module=Opal.module,$rb_gt=Opal.rb_gt,$rb_lt=Opal.rb_lt,$eqeqeq=Opal.eqeqeq,$Kernel=Opal.Kernel,$def=Opal.def,nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs(">,<,===,raise,class,<=>,equal?"),function($base){var self=$module("::","Comparable"),$ret_or_1=nil;function normalize(what){return Opal.is_a(what,Opal.Integer)?what:$rb_gt(what,0)?1:$rb_lt(what,0)?-1:0}function cmp_or_fail(lhs,rhs){var cmp=lhs["$<=>"](rhs);return $truthy(cmp)||function(lhs,rhs){var class_name;class_name=$eqeqeq(nil,$ret_or_1=rhs)||$eqeqeq(!0,$ret_or_1)||$eqeqeq(!1,$ret_or_1)||$eqeqeq($$$("Integer"),$ret_or_1)||$eqeqeq($$$("Float"),$ret_or_1)?rhs.$inspect():rhs.$$class,$Kernel.$raise($$$("ArgumentError"),"comparison of "+lhs.$class()+" with "+class_name+" failed")}(lhs,rhs),normalize(cmp)}return $def(self,"$==",(function(other){var cmp;return!!$truthy(this["$equal?"](other))||this["$<=>"]!=Opal.Kernel["$<=>"]&&(this.$$comparable?(this.$$comparable=!1,!1):!!$truthy(cmp=this["$<=>"](other))&&0==normalize(cmp))})),$def(self,"$>",(function(other){return cmp_or_fail(this,other)>0})),$def(self,"$>=",(function(other){return cmp_or_fail(this,other)>=0})),$def(self,"$<",(function(other){return cmp_or_fail(this,other)<0})),$def(self,"$<=",(function(other){return cmp_or_fail(this,other)<=0})),$def(self,"$between?",(function(min,max){return!$rb_lt(this,min)&&!$rb_gt(this,max)})),$def(self,"$clamp",(function(min,max){var c,excl;if(null==max&&(max=nil),max===nil&&(Opal.is_a(min,Opal.Range)||$Kernel.$raise($$$("TypeError"),"wrong argument type "+min.$class()+" (expected Range)"),excl=min.excl,max=min.end,min=min.begin,max!==nil&&excl&&$Kernel.$raise($$$("ArgumentError"),"cannot clamp with an exclusive range")),min!==nil&&max!==nil&&cmp_or_fail(min,max)>0&&$Kernel.$raise($$$("ArgumentError"),"min argument must be smaller than max argument"),min!==nil){if(0==(c=cmp_or_fail(this,min)))return this;if(c<0)return min}return max!==nil&&(c=cmp_or_fail(this,max))>0?max:this}),-2)}()},Opal.modules["buffer/array"]=function(Opal){var $klass=Opal.klass,$gvars=Opal.gvars,$defs=Opal.defs,$eqeq=Opal.eqeq,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$truthy=Opal.truthy,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("include,[],name_for,attr_reader,==,for,to_n,enum_for,length"),function($base,$super,$parent_nesting){var $nesting=[$klass($base,null,"Buffer")].concat($parent_nesting);return function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return self.$$prototype.native=nil,self.$include($$$($$("Native"),"Wrapper")),$defs(self,"$for",(function(bits,type){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]($$("Buffer").$name_for(bits,type)+"Array")})),self.$include($$("Enumerable")),self.$attr_reader("buffer","type"),$def(self,"$initialize",(function $$initialize(buffer,bits,type){if($$initialize.$$p=null,null==bits&&(bits=nil),null==type&&(type=nil),$eqeq($$("Native"),buffer))$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[buffer],null);else{var klass=$$("Array").$for(bits,type);$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[new klass(buffer.$to_n())],null)}return this.buffer=buffer,this.type=type}),-2),$def(self,"$bits",(function(){return 8*this.native.BYTES_PER_ELEMENT})),$def(self,"$[]",(function(index,offset){return null==offset&&(offset=nil),$truthy(offset)?this.native.subarray(index,offset):this.native[index]}),-2),$def(self,"$[]=",(function(index,value){return this.native[index]=value})),$def(self,"$bytesize",(function(){return this.native.byteLength})),$def(self,"$each",(function $$each(){var $yield=$$each.$$p||nil;if($$each.$$p=null,$yield===nil)return this.$enum_for("each");for(var i=0,length=this.native.length;i<length;i++)Opal.yield1($yield,this.native[i]);return this})),$def(self,"$length",(function(){return this.native.length})),$def(self,"$merge!",(function(other,offset){return this.native.set(other.$to_n(),offset)}),-2),$alias(self,"size","length")}($nesting[0],0,$nesting)}($nesting[0],0,$nesting)},Opal.modules["buffer/view"]=function(Opal){var $klass=Opal.klass,$gvars=Opal.gvars,$defs=Opal.defs,$truthy=Opal.truthy,$send2=Opal.send2,$find_super=Opal.find_super,$def=Opal.def,$alias=Opal.alias,$nesting=[],nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("include,!,nil?,[],attr_reader,native?,to_n,name_for,get,set,length"),function($base,$super,$parent_nesting){var $nesting=[$klass($base,null,"Buffer")].concat($parent_nesting);return function($base,$super,$parent_nesting){var self=$klass($base,null,"View"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);return self.$$prototype.native=nil,self.$include($$$($$("Native"),"Wrapper")),$defs(self,"$supported?",(function(){return null==$gvars.$&&($gvars.$=nil),$gvars.$["$[]"]("DataView")["$nil?"]()["$!"]()})),self.$attr_reader("buffer","offset"),$def(self,"$initialize",(function $$initialize(buffer,offset,length){return $$initialize.$$p=null,null==offset&&(offset=nil),null==length&&(length=nil),$truthy(this["$native?"](buffer))?$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[buffer],null):$truthy(offset)&&$truthy(length)?$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[new DataView(buffer.$to_n(),offset.$to_n(),length.$to_n())],null):$truthy(offset)?$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[new DataView(buffer.$to_n(),offset.$to_n())],null):$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[new DataView(buffer.$to_n())],null),this.buffer=buffer,this.offset=offset}),-2),$def(self,"$length",(function(){return this.native.byteLength})),$def(self,"$get",(function(offset,bits,type,little){return null==bits&&(bits=8),null==type&&(type="unsigned"),null==little&&(little=!1),this.native["get"+$$("Buffer").$name_for(bits,type)](offset,little)}),-2),$alias(self,"[]","get"),$def(self,"$set",(function(offset,value,bits,type,little){return null==bits&&(bits=8),null==type&&(type="unsigned"),null==little&&(little=!1),this.native["set"+$$("Buffer").$name_for(bits,type)](offset,value,little)}),-3),$alias(self,"[]=","set"),$def(self,"$get_int8",(function(offset,little){return null==little&&(little=!1),this.native.getInt8(offset,little)}),-2),$def(self,"$set_int8",(function(offset,value,little){return null==little&&(little=!1),this.native.setInt8(offset,value,little)}),-3),$def(self,"$get_uint8",(function(offset,little){return null==little&&(little=!1),this.native.getUint8(offset,little)}),-2),$def(self,"$set_uint8",(function(offset,value,little){return null==little&&(little=!1),this.native.setUint8(offset,value,little)}),-3),$def(self,"$get_int16",(function(offset,little){return null==little&&(little=!1),this.native.getInt16(offset,little)}),-2),$def(self,"$set_int16",(function(offset,value,little){return null==little&&(little=!1),this.native.setInt16(offset,value,little)}),-3),$def(self,"$get_uint16",(function(offset,little){return null==little&&(little=!1),this.native.getUint16(offset,little)}),-2),$def(self,"$set_uint16",(function(offset,value,little){return null==little&&(little=!1),this.native.setUint16(offset,value,little)}),-3),$def(self,"$get_int32",(function(offset,little){return null==little&&(little=!1),this.native.getInt32(offset,little)}),-2),$def(self,"$set_int32",(function(offset,value,little){return null==little&&(little=!1),this.native.setInt32(offset,value,little)}),-3),$def(self,"$get_uint32",(function(offset,little){return null==little&&(little=!1),this.native.getUint32(offset,little)}),-2),$def(self,"$set_uint32",(function(offset,value,little){return null==little&&(little=!1),this.native.setUint32(offset,value,little)}),-3),$def(self,"$get_float32",(function(offset,little){return null==little&&(little=!1),this.native.getFloat32(offset,little)}),-2),$def(self,"$set_float32",(function(offset,value,little){return null==little&&(little=!1),this.native.setFloat32(offset,value,little)}),-3),$def(self,"$get_float64",(function(offset,little){return null==little&&(little=!1),this.native.getFloat64(offset,little)}),-2),$def(self,"$set_float64",(function(offset,value,little){return null==little&&(little=!1),this.native.setFloat64(offset,value,little)}),-3),$alias(self,"size","length")}($nesting[0],0,$nesting)}($nesting[0],0,$nesting)},Opal.modules.native=function(Opal){var $module=Opal.module,$defs=Opal.defs,$slice=Opal.slice,$truthy=Opal.truthy,$send=Opal.send,$Kernel=Opal.Kernel,$extract_kwargs=Opal.extract_kwargs,$ensure_kwargs=Opal.ensure_kwargs,$range=Opal.range,$to_a=Opal.to_a,$def=Opal.def,$return_ivar=Opal.return_ivar,$alias=Opal.alias,$klass=Opal.klass,$rb_minus=Opal.rb_minus,$return_val=Opal.return_val,$hash2=Opal.hash2,$send2=Opal.send2,$find_super=Opal.find_super,$eqeqeq=Opal.eqeqeq,$rb_ge=Opal.rb_ge,$return_self=Opal.return_self,$gvars=Opal.gvars,self=Opal.top,$nesting=[],$$=Opal.$r($nesting),nil=Opal.nil,$$$=Opal.$$$;return Opal.add_stubs("try_convert,native?,respond_to?,to_n,raise,inspect,Native,proc,map!,end_with?,define_method,[],convert,call,to_proc,new,each,native_reader,native_writer,extend,warn,include,is_a?,map,Array,to_a,_Array,method_missing,bind,instance_method,[]=,slice,-,length,has_key?,enum_for,===,>=,<<,each_pair,method_defined?,initialize,_initialize,name,native_module"),function($base,$parent_nesting){var self=$module($base,"Native"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$defs(self,"$is_a?",(function(object,klass){try{return object instanceof this.$try_convert(klass)}catch(e){return!1}})),$defs(self,"$try_convert",(function(value,default$){return null==default$&&(default$=nil),this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():default$}),-2),$defs(self,"$convert",(function(value){return this["$native?"](value)?value:value["$respond_to?"]("to_n")?value.$to_n():void this.$raise($$("ArgumentError"),value.$inspect()+" isn't native")})),$defs(self,"$call",(function $$call(obj,key,$a){var args,block=$$call.$$p||nil,self=this;$$call.$$p=null,args=$slice(arguments,2);var prop=obj[key];if(prop instanceof Function){for(var converted=new Array(args.length),i=0,l=args.length;i<l;i++){var item=args[i],conv=self.$try_convert(item);converted[i]=conv===nil?item:conv}return block!==nil&&converted.push(block),self.$Native(prop.apply(obj,converted))}return self.$Native(prop)}),-3),$defs(self,"$proc",(function $$proc(){var block=$$proc.$$p||nil;return $$proc.$$p=null,$truthy(block)||this.$raise($$("LocalJumpError"),"no block given"),$send($Kernel,"proc",[],(function $$2($a){var $post_args,args,self=null==$$2.$$s?this:$$2.$$s,instance=nil;if($post_args=$slice(arguments),$send(args=$post_args,"map!",[],(function $$3(arg){return null==arg&&(arg=nil),(null==$$3.$$s?this:$$3.$$s).$Native(arg)}),{$$s:self}),instance=self.$Native(this),this===Opal.global)return block.apply(self,args);var self_=block.$$s;block.$$s=null;try{return block.apply(instance,args)}finally{block.$$s=self_}}),{$$arity:-1,$$s:this})})),function($base,$parent_nesting){var self=$module($base,"Helpers"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$alias_native",(function $$alias_native(new$,$a,$b){var $post_args,$kwargs,old,as,self=this;return $$alias_native.$$p=null,$post_args=$slice(arguments,1),$kwargs=$extract_kwargs($post_args),$kwargs=$ensure_kwargs($kwargs),$post_args.length>0&&(old=$post_args.shift()),null==old&&(old=new$),null==(as=$kwargs.$$smap.as)&&(as=nil),$truthy(old["$end_with?"]("="))?$send(self,"define_method",[new$],(function $$4(value){var self=null==$$4.$$s?this:$$4.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.native[old["$[]"]($range(0,-2,!1))]=$$("Native").$convert(value),value}),{$$s:self}):$truthy(as)?$send(self,"define_method",[new$],(function $$5($c){var args,block=$$5.$$p||nil,self=null==$$5.$$s?this:$$5.$$s,value=nil;return null==self.native&&(self.native=nil),$$5.$$p=null,args=$slice(arguments),value=$send($$("Native"),"call",[self.native,old].concat($to_a(args)),block.$to_proc()),$truthy(value)?as.$new(value.$to_n()):nil}),{$$arity:-1,$$s:self}):$send(self,"define_method",[new$],(function $$6($c){var args,block=$$6.$$p||nil,self=null==$$6.$$s?this:$$6.$$s;return null==self.native&&(self.native=nil),$$6.$$p=null,args=$slice(arguments),$send($$("Native"),"call",[self.native,old].concat($to_a(args)),block.$to_proc())}),{$$arity:-1,$$s:self})}),-2),$def(self,"$native_reader",(function($a){var $post_args,self=this;return $post_args=$slice(arguments),$send($post_args,"each",[],(function $$7(name){var self=null==$$7.$$s?this:$$7.$$s;return null==name&&(name=nil),$send(self,"define_method",[name],(function $$8(){var self=null==$$8.$$s?this:$$8.$$s;return null==self.native&&(self.native=nil),self.$Native(self.native[name])}),{$$s:self})}),{$$s:self})}),-1),$def(self,"$native_writer",(function($a){var $post_args,self=this;return $post_args=$slice(arguments),$send($post_args,"each",[],(function $$9(name){var self=null==$$9.$$s?this:$$9.$$s;return null==name&&(name=nil),$send(self,"define_method",[name+"="],(function $$10(value){var self=null==$$10.$$s?this:$$10.$$s;return null==self.native&&(self.native=nil),null==value&&(value=nil),self.$Native(self.native[name]=value)}),{$$s:self})}),{$$s:self})}),-1),$def(self,"$native_accessor",(function($a){var $post_args,names,self=this;return $post_args=$slice(arguments),$send(self,"native_reader",$to_a(names=$post_args)),$send(self,"native_writer",$to_a(names))}),-1)}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Wrapper"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$initialize",(function(native$){return $truthy($Kernel["$native?"](native$))||$Kernel.$raise($$("ArgumentError"),native$.$inspect()+" isn't native"),this.native=native$})),$def(self,"$to_n",$return_ivar("native")),$defs(self,"$included",(function(klass){return klass.$extend($$("Helpers"))}))}($nesting[0],$nesting),$defs(self,"$included",(function(base){return this.$warn("Including ::Native is deprecated. Please include Native::Wrapper instead."),base.$include($$("Wrapper"))}))}($nesting[0],$nesting),function($base,$parent_nesting){var self=$module($base,"Kernel"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$native?",(function(value){return null==value||!value.$$class})),$def(self,"$Native",(function $$Native(obj){return $$Native.$$p=null,$truthy(null==obj)?nil:$truthy(this["$native?"](obj))?$$$($$("Native"),"Object").$new(obj):$truthy(obj["$is_a?"]($$("Array")))?$send(obj,"map",[],(function $$12(o){return null==o&&(o=nil),(null==$$12.$$s?this:$$12.$$s).$Native(o)}),{$$s:this}):$truthy(obj["$is_a?"]($$("Proc")))?$send(this,"proc",[],(function $$13($a){var args,block=$$13.$$p||nil,self=null==$$13.$$s?this:$$13.$$s;return $$13.$$p=null,args=$slice(arguments),self.$Native($send(obj,"call",$to_a(args),block.$to_proc()))}),{$$arity:-1,$$s:this}):obj})),$alias(self,"_Array","Array"),$def(self,"$Array",(function $$Array(object,$a){var args,block=$$Array.$$p||nil,self=this;return $$Array.$$p=null,args=$slice(arguments,1),$truthy(self["$native?"](object))?$send($$$($$("Native"),"Array"),"new",[object].concat($to_a(args)),block.$to_proc()).$to_a():self.$_Array(object)}),-2)}($nesting[0],$nesting),function($base,$super){var self=$klass($base,$super,"Object");self.$$prototype.native=nil,self.$include($$$($$$("Native"),"Wrapper")),$def(self,"$==",(function(other){return this.native===$$$("Native").$try_convert(other)})),$def(self,"$has_key?",(function(name){return Opal.hasOwnProperty.call(this.native,name)})),$def(self,"$each",(function $$each($a){var args,$yield=$$each.$$p||nil,self=this;if($$each.$$p=null,args=$slice(arguments),$yield!==nil){for(var key in self.native)Opal.yieldX($yield,[key,self.native[key]]);return self}return $send(self,"method_missing",["each"].concat($to_a(args)))}),-1),$def(self,"$[]",(function(key){var prop=this.native[key];return prop instanceof Function?prop:$$$("Native").$call(this.native,key)})),$def(self,"$[]=",(function(key,value){var native$;return native$=$$$("Native").$try_convert(value),$truthy(native$===nil)?this.native[key]=value:this.native[key]=native$})),$def(self,"$merge!",(function(other){for(var prop in other=$$$("Native").$convert(other))this.native[prop]=other[prop];return this})),$def(self,"$respond_to?",(function(name,include_all){return null==include_all&&(include_all=!1),$Kernel.$instance_method("respond_to?").$bind(this).$call(name,include_all)}),-2),$def(self,"$respond_to_missing?",(function(name,include_all){return null==include_all&&(include_all=!1),Opal.hasOwnProperty.call(this.native,name)}),-2),$def(self,"$method_missing",(function $$method_missing(mid,$a){var args,$b,block=$$method_missing.$$p||nil,self=this;return $$method_missing.$$p=null,args=$slice(arguments,1),"="===mid.charAt(mid.length-1)?($b=[mid.$slice(0,$rb_minus(mid.$length(),1)),args["$[]"](0)],$send(self,"[]=",$b),$b[$b.length-1]):$send($$$("Native"),"call",[self.native,mid].concat($to_a(args)),block.$to_proc())}),-2),$def(self,"$nil?",$return_val(!1)),$def(self,"$is_a?",(function(klass){return Opal.is_a(this,klass)})),$def(self,"$instance_of?",(function(klass){return this.$$class===klass})),$def(self,"$class",(function(){return this.$$class})),$def(self,"$to_a",(function $$to_a(options){var block=$$to_a.$$p||nil;return $$to_a.$$p=null,null==options&&(options=$hash2([],{})),$send($$$($$$("Native"),"Array"),"new",[this.native,options],block.$to_proc()).$to_a()}),-1),$def(self,"$inspect",(function(){return"#<Native:"+String(this.native)+">"})),$alias(self,"include?","has_key?"),$alias(self,"key?","has_key?"),$alias(self,"kind_of?","is_a?"),$alias(self,"member?","has_key?")}($$("Native"),$$("BasicObject")),function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting),$proto=self.$$prototype;$proto.named=$proto.native=$proto.get=$proto.block=$proto.set=$proto.length=nil,self.$include($$$($$("Native"),"Wrapper")),self.$include($$("Enumerable")),$def(self,"$initialize",(function $$initialize(native$,options){var block=$$initialize.$$p||nil,$ret_or_1=nil;return $$initialize.$$p=null,null==options&&(options=$hash2([],{})),$send2(this,$find_super(this,"initialize",$$initialize,!1,!0),"initialize",[native$],null),this.get=$truthy($ret_or_1=options["$[]"]("get"))?$ret_or_1:options["$[]"]("access"),this.named=options["$[]"]("named"),this.set=$truthy($ret_or_1=options["$[]"]("set"))?$ret_or_1:options["$[]"]("access"),this.length=$truthy($ret_or_1=options["$[]"]("length"))?$ret_or_1:"length",this.block=block,$truthy(null==this.$length())?this.$raise($$("ArgumentError"),"no length found on the array-like object"):nil}),-2),$def(self,"$each",(function $$each(){var block=$$each.$$p||nil;if($$each.$$p=null,!$truthy(block))return this.$enum_for("each");for(var i=0,length=this.$length();i<length;i++)Opal.yield1(block,this["$[]"](i));return this})),$def(self,"$[]",(function(index){var result,$ret_or_1;return result=$eqeqeq($$("String"),$ret_or_1=index)||$eqeqeq($$("Symbol"),$ret_or_1)?$truthy(this.named)?this.native[this.named](index):this.native[index]:$eqeqeq($$("Integer"),$ret_or_1)?$truthy(this.get)?this.native[this.get](index):this.native[index]:nil,$truthy(result)?$truthy(this.block)?this.block.$call(result):this.$Native(result):nil})),$def(self,"$[]=",(function(index,value){return $truthy(this.set)?this.native[this.set](index,$$("Native").$convert(value)):this.native[index]=$$("Native").$convert(value)})),$def(self,"$last",(function(count){var index=nil,result=nil;if(null==count&&(count=nil),$truthy(count)){for(index=$rb_minus(this.$length(),1),result=[];$truthy($rb_ge(index,0));)result["$<<"](this["$[]"](index)),index=$rb_minus(index,1);return result}return this["$[]"]($rb_minus(this.$length(),1))}),-1),$def(self,"$length",(function(){return this.native[this.length]})),$def(self,"$inspect",(function(){return this.$to_a().$inspect()})),$alias(self,"to_ary","to_a")}($$("Native"),0,$nesting),function($base,$super){var self=$klass($base,null,"Numeric");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Proc");$def(self,"$to_n",$return_self)}($nesting[0]),function($base,$super){var self=$klass($base,null,"String");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Regexp");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"MatchData");$def(self,"$to_n",$return_ivar("matches"))}($nesting[0]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Struct"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$to_n",(function(){var result=nil;return result={},$send(this,"each_pair",[],(function(name,value){return null==name&&(name=nil),null==value&&(value=nil),result[name]=$$("Native").$try_convert(value,value)})),result}))}($nesting[0],0,$nesting),function($base,$super,$parent_nesting){var self=$klass($base,null,"Array"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$to_n",(function(){for(var result=[],i=0,length=this.length;i<length;i++){var obj=this[i];result.push($$("Native").$try_convert(obj,obj))}return result}))}($nesting[0],0,$nesting),function($base,$super){var self=$klass($base,null,"Boolean");$def(self,"$to_n",(function(){return this.valueOf()}))}($nesting[0]),function($base,$super){var self=$klass($base,null,"Time");$def(self,"$to_n",$return_self)}($nesting[0]),function($base,$super){var self=$klass($base,null,"NilClass");$def(self,"$to_n",(function(){return null}))}($nesting[0]),$truthy($$("Hash")["$method_defined?"]("_initialize"))||function($base,$super,$parent_nesting){var self=$klass($base,null,"Hash"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$alias(self,"_initialize","initialize"),$def(self,"$initialize",(function $$initialize(defaults){var block=$$initialize.$$p||nil,self=this;if($$initialize.$$p=null,null!=defaults&&(void 0===defaults.constructor||defaults.constructor===Object)){var key,value,smap=self.$$smap,keys=self.$$keys;for(key in defaults)!(value=defaults[key])||void 0!==value.constructor&&value.constructor!==Object?value&&value.$$is_array?(value=value.map((function(item){return!item||void 0!==item.constructor&&item.constructor!==Object?self.$Native(item):$$("Hash").$new(item)})),smap[key]=value):smap[key]=self.$Native(value):smap[key]=$$("Hash").$new(value),keys.push(key);return self}return $send(self,"_initialize",[defaults],block.$to_proc())}),-1),$def(self,"$to_n",(function(){for(var key,value,result={},keys=this.$$keys,smap=this.$$smap,i=0,length=keys.length;i<length;i++)value=(key=keys[i]).$$is_string?smap[key]:(key=key.key).value,result[key]=$$("Native").$try_convert(value,value);return result}))}($nesting[0],0,$nesting),function($base,$super){var self=$klass($base,null,"Module");$def(self,"$native_module",(function(){return Opal.global[this.$name()]=this}))}($nesting[0]),function($base,$super,$parent_nesting){var self=$klass($base,null,"Class"),$nesting=[self].concat($parent_nesting),$$=Opal.$r($nesting);$def(self,"$native_alias",(function(new_jsid,existing_mid){var aliased=this.prototype[Opal.jsid(existing_mid)];aliased||this.$raise($$("NameError").$new("undefined method `"+existing_mid+"' for class `"+this.$inspect()+"'",existing_mid)),this.prototype[new_jsid]=aliased})),$def(self,"$native_class",(function(){return this.$native_module(),this.new=this.$new}))}($nesting[0],0,$nesting),$gvars.$=$gvars.global=self.$Native(Opal.global)},Opal.queue((function(Opal){var self=Opal.top;Opal.nil;return Opal.add_stubs("require"),self.$require("nodejs/base"),self.$require("nodejs/kernel"),self.$require("nodejs/file"),self.$require("nodejs/dir"),self.$require("nodejs/io"),self.$require("nodejs/argf"),self.$require("nodejs/open-uri"),self.$require("nodejs/pathname"),self.$require("nodejs/env")}));
